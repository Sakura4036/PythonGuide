{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Python\u9879\u76ee\u5f00\u53d1\u6307\u5357 \u00b6 \u6587\u6863\u76ee\u6807 \u00b6 \u4ee5\u901a\u4fd7\u6613\u61c2\u7ed3\u6784\u6e05\u6670\u7684\u6587\u6863\u5411\u8bfb\u8005\u5c55\u793a\u5982\u4f55\u505a Python \u5de5\u7a0b\u5316 \u53d7\u4f17\u76ee\u6807\uff1a Python \u521d\u7ea7\u5f00\u53d1 Python \u4e2d\u7ea7\u5f00\u53d1 \u6307\u5357\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u4e3b\u9898\uff1a \u9879\u76ee\u5f00\u53d1 \u57fa\u7840\u6559\u7a0b \u9879\u76ee\u7ed3\u6784 \u65e5\u5fd7 \u914d\u7f6e\u6587\u4ef6 \u6587\u6863\u6559\u7a0b \u8fdb\u9636\u6559\u7a0b \u4ee3\u7801\u68c0\u6d4b \u8bbe\u8ba1\u6a21\u5f0f \u4ee3\u7801\u91cd\u6784 Python \u89c4\u8303 \u98ce\u683c\u89c4\u8303 \u8bed\u8a00\u89c4\u8303 Git\u7248\u672c\u63a7\u5236 \u53c2\u8003\u76ee\u5f55","title":"\u4e3b\u9875"},{"location":"#python","text":"","title":"Python\u9879\u76ee\u5f00\u53d1\u6307\u5357"},{"location":"#_1","text":"\u4ee5\u901a\u4fd7\u6613\u61c2\u7ed3\u6784\u6e05\u6670\u7684\u6587\u6863\u5411\u8bfb\u8005\u5c55\u793a\u5982\u4f55\u505a Python \u5de5\u7a0b\u5316 \u53d7\u4f17\u76ee\u6807\uff1a Python \u521d\u7ea7\u5f00\u53d1 Python \u4e2d\u7ea7\u5f00\u53d1 \u6307\u5357\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u4e3b\u9898\uff1a \u9879\u76ee\u5f00\u53d1 \u57fa\u7840\u6559\u7a0b \u9879\u76ee\u7ed3\u6784 \u65e5\u5fd7 \u914d\u7f6e\u6587\u4ef6 \u6587\u6863\u6559\u7a0b \u8fdb\u9636\u6559\u7a0b \u4ee3\u7801\u68c0\u6d4b \u8bbe\u8ba1\u6a21\u5f0f \u4ee3\u7801\u91cd\u6784 Python \u89c4\u8303 \u98ce\u683c\u89c4\u8303 \u8bed\u8a00\u89c4\u8303 Git\u7248\u672c\u63a7\u5236 \u53c2\u8003\u76ee\u5f55","title":"\u6587\u6863\u76ee\u6807"},{"location":"git/","text":"Git \u00b6 \u7248\u672c\u63a7\u5236 \u00b6 \u7248\u672c\u63a7\u5236\uff08Revision control\uff09\u662f\u4e00\u79cd\u5728\u5f00\u53d1\u7684\u8fc7\u7a0b\u4e2d\u7528\u4e8e\u7ba1\u7406\u6211\u4eec\u5bf9\u6587\u4ef6\u3001\u76ee\u5f55\u6216\u5de5\u7a0b\u7b49\u5185\u5bb9\u7684\u4fee\u6539\u5386\u53f2\uff0c\u65b9\u4fbf\u67e5\u770b\u66f4\u6539\u5386\u53f2\u8bb0\u5f55\uff0c\u5907\u4efd\u4ee5\u4fbf\u6062\u590d\u4ee5\u524d\u7684\u7248\u672c\u7684\u8f6f\u4ef6\u5de5\u7a0b\u6280\u672f\u3002 \u5b9e\u73b0\u8de8\u533a\u57df\u591a\u4eba\u534f\u540c\u5f00\u53d1 \u8ffd\u8e2a\u548c\u8bb0\u8f7d\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u6587\u4ef6\u7684\u5386\u53f2\u8bb0\u5f55 \u7ec4\u7ec7\u548c\u4fdd\u62a4\u4f60\u7684\u6e90\u4ee3\u7801\u548c\u6587\u6863 \u7edf\u8ba1\u5de5\u4f5c\u91cf \u5e76\u884c\u5f00\u53d1\u3001\u63d0\u9ad8\u5f00\u53d1\u6548\u7387 \u8ddf\u8e2a\u8bb0\u5f55\u6574\u4e2a\u8f6f\u4ef6\u7684\u5f00\u53d1\u8fc7\u7a0b \u51cf\u8f7b\u5f00\u53d1\u4eba\u5458\u7684\u8d1f\u62c5\uff0c\u8282\u7701\u65f6\u95f4\uff0c\u540c\u65f6\u964d\u4f4e\u4eba\u4e3a\u9519\u8bef \u6ca1\u6709\u8fdb\u884c\u7248\u672c\u63a7\u5236\u6216\u8005\u7248\u672c\u63a7\u5236\u672c\u8eab\u7f3a\u4e4f\u6b63\u786e\u7684\u6d41\u7a0b\u7ba1\u7406\uff0c\u5728\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5c06\u4f1a\u5f15\u5165\u5f88\u591a\u95ee\u9898\uff0c\u5982\u8f6f\u4ef6\u4ee3\u7801\u7684\u4e00\u81f4\u6027\u3001\u8f6f\u4ef6\u5185\u5bb9\u7684\u5197\u4f59\u3001\u8f6f\u4ef6\u8fc7\u7a0b\u7684\u4e8b\u7269\u6027\u3001\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u5e76\u53d1\u6027\u3001\u8f6f\u4ef6\u6e90\u4ee3\u7801\u7684\u5b89\u5168\u6027\uff0c\u4ee5\u53ca\u8f6f\u4ef6\u7684\u6574\u5408\u7b49\u95ee\u9898\u3002 Git \u00b6 Git\u662f\u76ee\u524d\u4e16\u754c\u4e0a\u6700\u5148\u8fdb\u7684\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u3002\u540c\u65f6Git\u662f\u514d\u8d39\u3001\u5f00\u6e90\u7684\u3002 \u4f18\u70b9\uff1a \u9002\u5408\u5206\u5e03\u5f0f\u5f00\u53d1\uff0c\u5f3a\u8c03\u4e2a\u4f53\u3002 \u516c\u5171\u670d\u52a1\u5668\u538b\u529b\u548c\u6570\u636e\u91cf\u90fd\u4e0d\u4f1a\u592a\u5927\u3002 \u901f\u5ea6\u5feb\u3001\u7075\u6d3b\u3002 \u4efb\u610f\u4e24\u4e2a\u5f00\u53d1\u8005\u4e4b\u95f4\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u89e3\u51b3\u51b2\u7a81\u3002 \u79bb\u7ebf\u5de5\u4f5c\u3002 \u7f3a\u70b9\uff1a \u6a21\u5f0f\u4e0a\u6bd4SVN\u66f4\u52a0\u590d\u6742\u3002 \u4e0d\u7b26\u5408\u5e38\u89c4\u601d\u7ef4\u3002 \u4ee3\u7801\u4fdd\u5bc6\u6027\u5dee\uff0c\u4e00\u65e6\u5f00\u53d1\u8005\u628a\u6574\u4e2a\u5e93\u514b\u9686\u4e0b\u6765\u5c31\u53ef\u4ee5\u5b8c\u5168\u516c\u5f00\u6240\u6709\u4ee3\u7801\u548c\u7248\u672c\u4fe1\u606f\u3002 \u5b98\u7f51 \uff1a https://git-scm.com/ \u6e90\u7801\uff1a https://github.com/git/git/ \u5b89\u88c5 \u00b6 \u6253\u5f00 git\u5b98\u7f51\u4e0b\u8f7d \uff0c\u4e0b\u8f7dgit\u5bf9\u5e94\u64cd\u4f5c\u7cfb\u7edf\u7684\u7248\u672c\u3002 Windows\uff1a\u4e0b\u8f7d\u5b89\u88c5\u5305 64-bit Git for Windows Setup \uff0c \u53cc\u51fb\u5b89\u88c5\u9ed8\u8ba4\u5b89\u88c5\u5373\u53ef\u3002 Linux\uff1a\u4f7f\u7528 sudo apt-get install git \u8fdb\u884c\u5b89\u88c5\u3002 Mac OS\uff1a\u4e00\u662f\u5b89\u88c5homebrew\uff0c\u7136\u540e\u901a\u8fc7homebrew\u5b89\u88c5Git\uff0c\u5177\u4f53\u65b9\u6cd5\u8bf7\u53c2\u8003homebrew\u7684\u6587\u6863\uff1a http://brew.sh/ \u3002\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u66f4\u7b80\u5355\uff0c\u4e5f\u662f\u63a8\u8350\u7684\u65b9\u6cd5\uff0c\u5c31\u662f\u76f4\u63a5\u4eceAppStore\u5b89\u88c5Xcode\uff0cXcode\u96c6\u6210\u4e86Git\uff0c\u4e0d\u8fc7\u9ed8\u8ba4\u6ca1\u6709\u5b89\u88c5\uff0c\u4f60\u9700\u8981\u8fd0\u884cXcode\uff0c\u9009\u62e9\u83dc\u5355\u201cXcode\u201d->\u201cPreferences\u201d\uff0c\u5728\u5f39\u51fa\u7a97\u53e3\u4e2d\u627e\u5230\u201cDownloads\u201d\uff0c\u9009\u62e9\u201cCommand Line Tools\u201d\uff0c\u70b9\u201cInstall\u201d\u5c31\u53ef\u4ee5\u5b8c\u6210\u5b89\u88c5\u4e86\u3002 \u5728\u547d\u4ee4\u7ec8\u7aef\u4f7f\u7528 git \uff0c\u663e\u793agit\u4f7f\u7528\u65b9\u6cd5\u5373\u8bf4\u660e\u5b89\u88c5\u6210\u529f\u3002 Git\u7406\u8bba\u57fa\u7840 \u00b6 \u5de5\u4f5c\u533a\u57df \u00b6 Git\u672c\u5730\u6709\u4e09\u4e2a\u5de5\u4f5c\u533a\u57df\uff1a\u5de5\u4f5c\u76ee\u5f55\uff08Working Directory\uff09\u3001\u6682\u5b58\u533a(Stage/Index)\u3001\u8d44\u6e90\u5e93(Repository\u6216Git Directory)\u3002\u5982\u679c\u5728\u52a0\u4e0a\u8fdc\u7a0b\u7684git\u4ed3\u5e93(Remote Directory)\u5c31\u53ef\u4ee5\u5206\u4e3a\u56db\u4e2a\u5de5\u4f5c\u533a\u57df\u3002\u6587\u4ef6\u5728\u8fd9\u56db\u4e2a\u533a\u57df\u4e4b\u95f4\u7684\u8f6c\u6362\u5173\u7cfb\u5982\u4e0b\uff1a Workspace\uff1a\u5de5\u4f5c\u533a\uff0c\u5c31\u662f\u4f60\u5e73\u65f6\u5b58\u653e\u9879\u76ee\u4ee3\u7801\u7684\u5730\u65b9 Index / Stage\uff1a\u6682\u5b58\u533a\uff0c\u7528\u4e8e\u4e34\u65f6\u5b58\u653e\u4f60\u7684\u6539\u52a8\uff0c\u4e8b\u5b9e\u4e0a\u5b83\u53ea\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u4fdd\u5b58\u5373\u5c06\u63d0\u4ea4\u5230\u6587\u4ef6\u5217\u8868\u4fe1\u606f Repository\uff1a\u4ed3\u5e93\u533a\uff08\u6216\u672c\u5730\u4ed3\u5e93\uff09\uff0c\u5c31\u662f\u5b89\u5168\u5b58\u653e\u6570\u636e\u7684\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u9762\u6709\u4f60\u63d0\u4ea4\u5230\u6240\u6709\u7248\u672c\u7684\u6570\u636e\u3002\u5176\u4e2dHEAD\u6307\u5411\u6700\u65b0\u653e\u5165\u4ed3\u5e93\u7684\u7248\u672c Remote\uff1a\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u6258\u7ba1\u4ee3\u7801\u7684\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u7b80\u5355\u7684\u8ba4\u4e3a\u662f\u4f60\u9879\u76ee\u7ec4\u4e2d\u7684\u4e00\u53f0\u7535\u8111\u7528\u4e8e\u8fdc\u7a0b\u6570\u636e\u4ea4\u6362 \u5de5\u4f5c\u6d41\u7a0b \u00b6 Git\u7684\u5de5\u4f5c\u6d41\u7a0b\u4e00\u822c\u662f\u8fd9\u6837\u7684\uff1a \u5728\u5de5\u4f5c\u76ee\u5f55\u4e2d\u6dfb\u52a0\u3001\u4fee\u6539\u6587\u4ef6\uff1b \u5c06\u9700\u8981\u8fdb\u884c\u7248\u672c\u7ba1\u7406\u7684\u6587\u4ef6\u653e\u5165\u6682\u5b58\u533a\u57df\uff1b \u5c06\u6682\u5b58\u533a\u57df\u7684\u6587\u4ef6\u63d0\u4ea4\u5230git\u4ed3\u5e93\u3002 \u56e0\u6b64\uff0cgit\u7ba1\u7406\u7684\u6587\u4ef6\u6709\u4e09\u79cd\u72b6\u6001\uff1a\u5df2\u4fee\u6539\uff08modified\uff09,\u5df2\u6682\u5b58\uff08staged\uff09,\u5df2\u63d0\u4ea4(committed) Git\u5feb\u901f\u5b66\u4e60 \u00b6 \u5982\u4f55\u5feb\u901f\u5b66\u4e60\u5e76\u638c\u63e1Git\uff1f \u638c\u63e1\u57fa\u7840\u7406\u8bba\uff1a\u4ec0\u4e48\u662fgit\u7684\u56db\u4e2a\u5de5\u4f5c\u533a\u57df\u548cgit\u7ba1\u7406\u7684\u6587\u4ef6\u4e09\u79cd\u72b6\u6001\uff1f \u4ed6\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u4ee5\u53ca\u5982\u4f55\u8f6c\u6362\uff1f \u5fc5\u987b\u638c\u63e1\uff01 \u5f00\u59cb\u52a8\u624b\u5b66\u4e60\uff0c\u4ece\u642d\u5efa\u4ed3\u5e93\uff0c\u63d0\u4ea4\u4fee\u6539\uff0c\u521b\u5efa\u5206\u652f\uff0c\u5408\u5e76\u5206\u652f\uff0c\u4fee\u6539\u5206\u652f\uff0c\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\u7b49\u7b49\u4e00\u6b65\u4e00\u6b65\u638c\u63e1Git\u7684\u6838\u5fc3\u8981\u9886\u3002\u63a8\u8350\u5728 Gitee \u52a8\u624b\u5b66Git \u4e0a\u8fdb\u884c\u53ef\u89c6\u5316\u7ec3\u4e60\uff0c\u8ba9\u4f60\u66f4\u5bb9\u6613\u7406\u89e3Git\u5de5\u4f5c\u539f\u7406\u3002 \u5f3a\u70c8\u63a8\u8350\uff01 \u8ba9Git\u63a7\u5236\u4f60\u7684\u9879\u76ee\u5f00\u53d1\u3002 \u719f\u80fd\u751f\u5de7\uff01 Git\u53c2\u8003\u76ee\u5f55\uff1a Gitee Git\u5927\u5168 \u3001 Gitee \u52a8\u624b\u5b66Git \u5f3a\u70c8\u63a8\u8350 1\u4e2a\u5c0f\u65f6\u5305\u4f1a git - \u7b80\u6613\u6307\u5357 git\u624b\u518c\uff1a http://git-scm.com/docs \u4e00\u4efd\u5f88\u597d\u7684 Git \u5165\u95e8\u6559\u7a0b\uff0c\u8bf7 \u70b9\u51fb\u8fd9\u91cc \uff1b Git\u56fe\u89e3\u6559\u7a0b Git\u547d\u4ee4 \u00b6 \u65e5\u5e38\u4f7f\u7528\u53ea\u8981\u8bb0\u4f4f\u4e0b\u56fe6\u4e2a\u547d\u4ee4\uff1a \u4ed3\u5e93 \u00b6 # \u5728\u5f53\u524d\u76ee\u5f55\u65b0\u5efa\u4e00\u4e2aGit\u4ee3\u7801\u5e93 $ git init # \u65b0\u5efa\u4e00\u4e2a\u76ee\u5f55\uff0c\u5c06\u5176\u521d\u59cb\u5316\u4e3aGit\u4ee3\u7801\u5e93 $ git init [project-name] # \u4e0b\u8f7d\u4e00\u4e2a\u9879\u76ee\u548c\u5b83\u7684\u6574\u4e2a\u4ee3\u7801\u5386\u53f2 $ git clone [url] \u914d\u7f6e \u00b6 # \u663e\u793a\u5f53\u524d\u7684Git\u914d\u7f6e $ git config --list # \u7f16\u8f91Git\u914d\u7f6e\u6587\u4ef6 $ git config -e [--global] # \u8bbe\u7f6e\u63d0\u4ea4\u4ee3\u7801\u65f6\u7684\u7528\u6237\u4fe1\u606f $ git config [--global] user.name \"[name]\" $ git config [--global] user.email \"[email address]\" \u589e\u52a0/\u5220\u9664\u6587\u4ef6 \u00b6 # \u6dfb\u52a0\u6307\u5b9a\u6587\u4ef6\u5230\u6682\u5b58\u533a $ git add [file1] [file2] ... # \u6dfb\u52a0\u6307\u5b9a\u76ee\u5f55\u5230\u6682\u5b58\u533a\uff0c\u5305\u62ec\u5b50\u76ee\u5f55 $ git add [dir] # \u6dfb\u52a0\u5f53\u524d\u76ee\u5f55\u7684\u6240\u6709\u6587\u4ef6\u5230\u6682\u5b58\u533a $ git add . # \u6dfb\u52a0\u6bcf\u4e2a\u53d8\u5316\u524d\uff0c\u90fd\u4f1a\u8981\u6c42\u786e\u8ba4 # \u5bf9\u4e8e\u540c\u4e00\u4e2a\u6587\u4ef6\u7684\u591a\u5904\u53d8\u5316\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5206\u6b21\u63d0\u4ea4 $ git add -p # \u5220\u9664\u5de5\u4f5c\u533a\u6587\u4ef6\uff0c\u5e76\u4e14\u5c06\u8fd9\u6b21\u5220\u9664\u653e\u5165\u6682\u5b58\u533a $ git rm [file1] [file2] ... # \u505c\u6b62\u8ffd\u8e2a\u6307\u5b9a\u6587\u4ef6\uff0c\u4f46\u8be5\u6587\u4ef6\u4f1a\u4fdd\u7559\u5728\u5de5\u4f5c\u533a $ git rm --cached [file] # \u6539\u540d\u6587\u4ef6\uff0c\u5e76\u4e14\u5c06\u8fd9\u4e2a\u6539\u540d\u653e\u5165\u6682\u5b58\u533a $ git mv [file-original] [file-renamed] \u4ee3\u7801\u63d0\u4ea4 \u00b6 # \u63d0\u4ea4\u6682\u5b58\u533a\u5230\u4ed3\u5e93\u533a $ git commit -m [message] # \u63d0\u4ea4\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u4ed3\u5e93\u533a $ git commit [file1] [file2] ... -m [message] # \u63d0\u4ea4\u5de5\u4f5c\u533a\u81ea\u4e0a\u6b21commit\u4e4b\u540e\u7684\u53d8\u5316\uff0c\u76f4\u63a5\u5230\u4ed3\u5e93\u533a $ git commit -a # \u63d0\u4ea4\u65f6\u663e\u793a\u6240\u6709diff\u4fe1\u606f $ git commit -v # \u4f7f\u7528\u4e00\u6b21\u65b0\u7684commit\uff0c\u66ff\u4ee3\u4e0a\u4e00\u6b21\u63d0\u4ea4 # \u5982\u679c\u4ee3\u7801\u6ca1\u6709\u4efb\u4f55\u65b0\u53d8\u5316\uff0c\u5219\u7528\u6765\u6539\u5199\u4e0a\u4e00\u6b21commit\u7684\u63d0\u4ea4\u4fe1\u606f $ git commit --amend -m [message] # \u91cd\u505a\u4e0a\u4e00\u6b21commit\uff0c\u5e76\u5305\u62ec\u6307\u5b9a\u6587\u4ef6\u7684\u65b0\u53d8\u5316 $ git commit --amend [file1] [file2] ... \u5206\u652f \u00b6 # \u5217\u51fa\u6240\u6709\u672c\u5730\u5206\u652f $ git branch # \u5217\u51fa\u6240\u6709\u8fdc\u7a0b\u5206\u652f $ git branch -r # \u5217\u51fa\u6240\u6709\u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f $ git branch -a # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u4f46\u4f9d\u7136\u505c\u7559\u5728\u5f53\u524d\u5206\u652f $ git branch [branch-name] # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u5e76\u5207\u6362\u5230\u8be5\u5206\u652f $ git checkout -b [branch] # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u6307\u5411\u6307\u5b9acommit $ git branch [branch] [commit] # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u4e0e\u6307\u5b9a\u7684\u8fdc\u7a0b\u5206\u652f\u5efa\u7acb\u8ffd\u8e2a\u5173\u7cfb $ git branch --track [branch] [remote-branch] # \u5207\u6362\u5230\u6307\u5b9a\u5206\u652f\uff0c\u5e76\u66f4\u65b0\u5de5\u4f5c\u533a $ git checkout [branch-name] # \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u5206\u652f $ git checkout - # \u5efa\u7acb\u8ffd\u8e2a\u5173\u7cfb\uff0c\u5728\u73b0\u6709\u5206\u652f\u4e0e\u6307\u5b9a\u7684\u8fdc\u7a0b\u5206\u652f\u4e4b\u95f4 $ git branch --set-upstream [branch] [remote-branch] # \u5408\u5e76\u6307\u5b9a\u5206\u652f\u5230\u5f53\u524d\u5206\u652f $ git merge [branch] # \u9009\u62e9\u4e00\u4e2acommit\uff0c\u5408\u5e76\u8fdb\u5f53\u524d\u5206\u652f $ git cherry-pick [commit] # \u5220\u9664\u5206\u652f $ git branch -d [branch-name] # \u5220\u9664\u8fdc\u7a0b\u5206\u652f $ git push origin --delete [branch-name] $ git branch -dr [remote/branch] \u6807\u7b7e \u00b6 # \u5217\u51fa\u6240\u6709tag $ git tag # \u65b0\u5efa\u4e00\u4e2atag\u5728\u5f53\u524dcommit $ git tag [tag] # \u65b0\u5efa\u4e00\u4e2atag\u5728\u6307\u5b9acommit $ git tag [tag] [commit] # \u5220\u9664\u672c\u5730tag $ git tag -d [tag] # \u5220\u9664\u8fdc\u7a0btag $ git push origin :refs/tags/[tagName] # \u67e5\u770btag\u4fe1\u606f $ git show [tag] # \u63d0\u4ea4\u6307\u5b9atag $ git push [remote] [tag] # \u63d0\u4ea4\u6240\u6709tag $ git push [remote] --tags # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u6307\u5411\u67d0\u4e2atag $ git checkout -b [branch] [tag] \u67e5\u770b\u4fe1\u606f \u00b6 # \u663e\u793a\u6709\u53d8\u66f4\u7684\u6587\u4ef6 $ git status # \u663e\u793a\u5f53\u524d\u5206\u652f\u7684\u7248\u672c\u5386\u53f2 $ git log # \u663e\u793acommit\u5386\u53f2\uff0c\u4ee5\u53ca\u6bcf\u6b21commit\u53d1\u751f\u53d8\u66f4\u7684\u6587\u4ef6 $ git log --stat # \u641c\u7d22\u63d0\u4ea4\u5386\u53f2\uff0c\u6839\u636e\u5173\u952e\u8bcd $ git log -S [keyword] # \u663e\u793a\u67d0\u4e2acommit\u4e4b\u540e\u7684\u6240\u6709\u53d8\u52a8\uff0c\u6bcf\u4e2acommit\u5360\u636e\u4e00\u884c $ git log [tag] HEAD --pretty=format:%s # \u663e\u793a\u67d0\u4e2acommit\u4e4b\u540e\u7684\u6240\u6709\u53d8\u52a8\uff0c\u5176\"\u63d0\u4ea4\u8bf4\u660e\"\u5fc5\u987b\u7b26\u5408\u641c\u7d22\u6761\u4ef6 $ git log [tag] HEAD --grep feature # \u663e\u793a\u67d0\u4e2a\u6587\u4ef6\u7684\u7248\u672c\u5386\u53f2\uff0c\u5305\u62ec\u6587\u4ef6\u6539\u540d $ git log --follow [file] $ git whatchanged [file] # \u663e\u793a\u6307\u5b9a\u6587\u4ef6\u76f8\u5173\u7684\u6bcf\u4e00\u6b21diff $ git log -p [file] # \u663e\u793a\u8fc7\u53bb5\u6b21\u63d0\u4ea4 $ git log -5 --pretty --oneline # \u663e\u793a\u6240\u6709\u63d0\u4ea4\u8fc7\u7684\u7528\u6237\uff0c\u6309\u63d0\u4ea4\u6b21\u6570\u6392\u5e8f $ git shortlog -sn # \u663e\u793a\u6307\u5b9a\u6587\u4ef6\u662f\u4ec0\u4e48\u4eba\u5728\u4ec0\u4e48\u65f6\u95f4\u4fee\u6539\u8fc7 $ git blame [file] # \u663e\u793a\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u5dee\u5f02 $ git diff # \u663e\u793a\u6682\u5b58\u533a\u548c\u4e0a\u4e00\u4e2acommit\u7684\u5dee\u5f02 $ git diff --cached [file] # \u663e\u793a\u5de5\u4f5c\u533a\u4e0e\u5f53\u524d\u5206\u652f\u6700\u65b0commit\u4e4b\u95f4\u7684\u5dee\u5f02 $ git diff HEAD # \u663e\u793a\u4e24\u6b21\u63d0\u4ea4\u4e4b\u95f4\u7684\u5dee\u5f02 $ git diff [first-branch]...[second-branch] # \u663e\u793a\u4eca\u5929\u4f60\u5199\u4e86\u591a\u5c11\u884c\u4ee3\u7801 $ git diff --shortstat \"@{0 day ago}\" # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u7684\u5143\u6570\u636e\u548c\u5185\u5bb9\u53d8\u5316 $ git show [commit] # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u53d1\u751f\u53d8\u5316\u7684\u6587\u4ef6 $ git show --name-only [commit] # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u65f6\uff0c\u67d0\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9 $ git show [commit]:[filename] # \u663e\u793a\u5f53\u524d\u5206\u652f\u7684\u6700\u8fd1\u51e0\u6b21\u63d0\u4ea4 $ git reflog \u8fdc\u7a0b\u540c\u6b65 \u00b6 # \u4e0b\u8f7d\u8fdc\u7a0b\u4ed3\u5e93\u7684\u6240\u6709\u53d8\u52a8 $ git fetch [remote] # \u663e\u793a\u6240\u6709\u8fdc\u7a0b\u4ed3\u5e93 $ git remote -v # \u663e\u793a\u67d0\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\u7684\u4fe1\u606f $ git remote show [remote] # \u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u547d\u540d $ git remote add [shortname] [url] # \u53d6\u56de\u8fdc\u7a0b\u4ed3\u5e93\u7684\u53d8\u5316\uff0c\u5e76\u4e0e\u672c\u5730\u5206\u652f\u5408\u5e76 $ git pull [remote] [branch] # \u4e0a\u4f20\u672c\u5730\u6307\u5b9a\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93 $ git push [remote] [branch] # \u5f3a\u884c\u63a8\u9001\u5f53\u524d\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5373\u4f7f\u6709\u51b2\u7a81 $ git push [remote] --force # \u63a8\u9001\u6240\u6709\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93 $ git push [remote] --all \u64a4\u9500 \u00b6 # \u6062\u590d\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u5de5\u4f5c\u533a $ git checkout [file] # \u6062\u590d\u67d0\u4e2acommit\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a $ git checkout [commit] [file] # \u6062\u590d\u6682\u5b58\u533a\u7684\u6240\u6709\u6587\u4ef6\u5230\u5de5\u4f5c\u533a $ git checkout . # \u91cd\u7f6e\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\uff0c\u4e0e\u4e0a\u4e00\u6b21commit\u4fdd\u6301\u4e00\u81f4\uff0c\u4f46\u5de5\u4f5c\u533a\u4e0d\u53d8 $ git reset [file] # \u91cd\u7f6e\u6682\u5b58\u533a\u4e0e\u5de5\u4f5c\u533a\uff0c\u4e0e\u4e0a\u4e00\u6b21commit\u4fdd\u6301\u4e00\u81f4 $ git reset --hard # \u91cd\u7f6e\u5f53\u524d\u5206\u652f\u7684\u6307\u9488\u4e3a\u6307\u5b9acommit\uff0c\u540c\u65f6\u91cd\u7f6e\u6682\u5b58\u533a\uff0c\u4f46\u5de5\u4f5c\u533a\u4e0d\u53d8 $ git reset [commit] # \u91cd\u7f6e\u5f53\u524d\u5206\u652f\u7684HEAD\u4e3a\u6307\u5b9acommit\uff0c\u540c\u65f6\u91cd\u7f6e\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\uff0c\u4e0e\u6307\u5b9acommit\u4e00\u81f4 $ git reset --hard [commit] # \u91cd\u7f6e\u5f53\u524dHEAD\u4e3a\u6307\u5b9acommit\uff0c\u4f46\u4fdd\u6301\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u4e0d\u53d8 $ git reset --keep [commit] # \u65b0\u5efa\u4e00\u4e2acommit\uff0c\u7528\u6765\u64a4\u9500\u6307\u5b9acommit # \u540e\u8005\u7684\u6240\u6709\u53d8\u5316\u90fd\u5c06\u88ab\u524d\u8005\u62b5\u6d88\uff0c\u5e76\u4e14\u5e94\u7528\u5230\u5f53\u524d\u5206\u652f $ git revert [commit] \u6682\u65f6\u5c06\u672a\u63d0\u4ea4\u7684\u53d8\u5316\u79fb\u9664\uff0c\u7a0d\u540e\u518d\u79fb\u5165 $ git stash $ git stash pop \u5176\u4ed6 \u00b6 # \u751f\u6210\u4e00\u4e2a\u53ef\u4f9b\u53d1\u5e03\u7684\u538b\u7f29\u5305 $ git archive","title":"Git\u7248\u672c\u63a7\u5236"},{"location":"git/#git","text":"","title":"Git"},{"location":"git/#_1","text":"\u7248\u672c\u63a7\u5236\uff08Revision control\uff09\u662f\u4e00\u79cd\u5728\u5f00\u53d1\u7684\u8fc7\u7a0b\u4e2d\u7528\u4e8e\u7ba1\u7406\u6211\u4eec\u5bf9\u6587\u4ef6\u3001\u76ee\u5f55\u6216\u5de5\u7a0b\u7b49\u5185\u5bb9\u7684\u4fee\u6539\u5386\u53f2\uff0c\u65b9\u4fbf\u67e5\u770b\u66f4\u6539\u5386\u53f2\u8bb0\u5f55\uff0c\u5907\u4efd\u4ee5\u4fbf\u6062\u590d\u4ee5\u524d\u7684\u7248\u672c\u7684\u8f6f\u4ef6\u5de5\u7a0b\u6280\u672f\u3002 \u5b9e\u73b0\u8de8\u533a\u57df\u591a\u4eba\u534f\u540c\u5f00\u53d1 \u8ffd\u8e2a\u548c\u8bb0\u8f7d\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u6587\u4ef6\u7684\u5386\u53f2\u8bb0\u5f55 \u7ec4\u7ec7\u548c\u4fdd\u62a4\u4f60\u7684\u6e90\u4ee3\u7801\u548c\u6587\u6863 \u7edf\u8ba1\u5de5\u4f5c\u91cf \u5e76\u884c\u5f00\u53d1\u3001\u63d0\u9ad8\u5f00\u53d1\u6548\u7387 \u8ddf\u8e2a\u8bb0\u5f55\u6574\u4e2a\u8f6f\u4ef6\u7684\u5f00\u53d1\u8fc7\u7a0b \u51cf\u8f7b\u5f00\u53d1\u4eba\u5458\u7684\u8d1f\u62c5\uff0c\u8282\u7701\u65f6\u95f4\uff0c\u540c\u65f6\u964d\u4f4e\u4eba\u4e3a\u9519\u8bef \u6ca1\u6709\u8fdb\u884c\u7248\u672c\u63a7\u5236\u6216\u8005\u7248\u672c\u63a7\u5236\u672c\u8eab\u7f3a\u4e4f\u6b63\u786e\u7684\u6d41\u7a0b\u7ba1\u7406\uff0c\u5728\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5c06\u4f1a\u5f15\u5165\u5f88\u591a\u95ee\u9898\uff0c\u5982\u8f6f\u4ef6\u4ee3\u7801\u7684\u4e00\u81f4\u6027\u3001\u8f6f\u4ef6\u5185\u5bb9\u7684\u5197\u4f59\u3001\u8f6f\u4ef6\u8fc7\u7a0b\u7684\u4e8b\u7269\u6027\u3001\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u5e76\u53d1\u6027\u3001\u8f6f\u4ef6\u6e90\u4ee3\u7801\u7684\u5b89\u5168\u6027\uff0c\u4ee5\u53ca\u8f6f\u4ef6\u7684\u6574\u5408\u7b49\u95ee\u9898\u3002","title":"\u7248\u672c\u63a7\u5236"},{"location":"git/#git_1","text":"Git\u662f\u76ee\u524d\u4e16\u754c\u4e0a\u6700\u5148\u8fdb\u7684\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u3002\u540c\u65f6Git\u662f\u514d\u8d39\u3001\u5f00\u6e90\u7684\u3002 \u4f18\u70b9\uff1a \u9002\u5408\u5206\u5e03\u5f0f\u5f00\u53d1\uff0c\u5f3a\u8c03\u4e2a\u4f53\u3002 \u516c\u5171\u670d\u52a1\u5668\u538b\u529b\u548c\u6570\u636e\u91cf\u90fd\u4e0d\u4f1a\u592a\u5927\u3002 \u901f\u5ea6\u5feb\u3001\u7075\u6d3b\u3002 \u4efb\u610f\u4e24\u4e2a\u5f00\u53d1\u8005\u4e4b\u95f4\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u89e3\u51b3\u51b2\u7a81\u3002 \u79bb\u7ebf\u5de5\u4f5c\u3002 \u7f3a\u70b9\uff1a \u6a21\u5f0f\u4e0a\u6bd4SVN\u66f4\u52a0\u590d\u6742\u3002 \u4e0d\u7b26\u5408\u5e38\u89c4\u601d\u7ef4\u3002 \u4ee3\u7801\u4fdd\u5bc6\u6027\u5dee\uff0c\u4e00\u65e6\u5f00\u53d1\u8005\u628a\u6574\u4e2a\u5e93\u514b\u9686\u4e0b\u6765\u5c31\u53ef\u4ee5\u5b8c\u5168\u516c\u5f00\u6240\u6709\u4ee3\u7801\u548c\u7248\u672c\u4fe1\u606f\u3002 \u5b98\u7f51 \uff1a https://git-scm.com/ \u6e90\u7801\uff1a https://github.com/git/git/","title":"Git"},{"location":"git/#_2","text":"\u6253\u5f00 git\u5b98\u7f51\u4e0b\u8f7d \uff0c\u4e0b\u8f7dgit\u5bf9\u5e94\u64cd\u4f5c\u7cfb\u7edf\u7684\u7248\u672c\u3002 Windows\uff1a\u4e0b\u8f7d\u5b89\u88c5\u5305 64-bit Git for Windows Setup \uff0c \u53cc\u51fb\u5b89\u88c5\u9ed8\u8ba4\u5b89\u88c5\u5373\u53ef\u3002 Linux\uff1a\u4f7f\u7528 sudo apt-get install git \u8fdb\u884c\u5b89\u88c5\u3002 Mac OS\uff1a\u4e00\u662f\u5b89\u88c5homebrew\uff0c\u7136\u540e\u901a\u8fc7homebrew\u5b89\u88c5Git\uff0c\u5177\u4f53\u65b9\u6cd5\u8bf7\u53c2\u8003homebrew\u7684\u6587\u6863\uff1a http://brew.sh/ \u3002\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u66f4\u7b80\u5355\uff0c\u4e5f\u662f\u63a8\u8350\u7684\u65b9\u6cd5\uff0c\u5c31\u662f\u76f4\u63a5\u4eceAppStore\u5b89\u88c5Xcode\uff0cXcode\u96c6\u6210\u4e86Git\uff0c\u4e0d\u8fc7\u9ed8\u8ba4\u6ca1\u6709\u5b89\u88c5\uff0c\u4f60\u9700\u8981\u8fd0\u884cXcode\uff0c\u9009\u62e9\u83dc\u5355\u201cXcode\u201d->\u201cPreferences\u201d\uff0c\u5728\u5f39\u51fa\u7a97\u53e3\u4e2d\u627e\u5230\u201cDownloads\u201d\uff0c\u9009\u62e9\u201cCommand Line Tools\u201d\uff0c\u70b9\u201cInstall\u201d\u5c31\u53ef\u4ee5\u5b8c\u6210\u5b89\u88c5\u4e86\u3002 \u5728\u547d\u4ee4\u7ec8\u7aef\u4f7f\u7528 git \uff0c\u663e\u793agit\u4f7f\u7528\u65b9\u6cd5\u5373\u8bf4\u660e\u5b89\u88c5\u6210\u529f\u3002","title":"\u5b89\u88c5"},{"location":"git/#git_2","text":"","title":"Git\u7406\u8bba\u57fa\u7840"},{"location":"git/#_3","text":"Git\u672c\u5730\u6709\u4e09\u4e2a\u5de5\u4f5c\u533a\u57df\uff1a\u5de5\u4f5c\u76ee\u5f55\uff08Working Directory\uff09\u3001\u6682\u5b58\u533a(Stage/Index)\u3001\u8d44\u6e90\u5e93(Repository\u6216Git Directory)\u3002\u5982\u679c\u5728\u52a0\u4e0a\u8fdc\u7a0b\u7684git\u4ed3\u5e93(Remote Directory)\u5c31\u53ef\u4ee5\u5206\u4e3a\u56db\u4e2a\u5de5\u4f5c\u533a\u57df\u3002\u6587\u4ef6\u5728\u8fd9\u56db\u4e2a\u533a\u57df\u4e4b\u95f4\u7684\u8f6c\u6362\u5173\u7cfb\u5982\u4e0b\uff1a Workspace\uff1a\u5de5\u4f5c\u533a\uff0c\u5c31\u662f\u4f60\u5e73\u65f6\u5b58\u653e\u9879\u76ee\u4ee3\u7801\u7684\u5730\u65b9 Index / Stage\uff1a\u6682\u5b58\u533a\uff0c\u7528\u4e8e\u4e34\u65f6\u5b58\u653e\u4f60\u7684\u6539\u52a8\uff0c\u4e8b\u5b9e\u4e0a\u5b83\u53ea\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u4fdd\u5b58\u5373\u5c06\u63d0\u4ea4\u5230\u6587\u4ef6\u5217\u8868\u4fe1\u606f Repository\uff1a\u4ed3\u5e93\u533a\uff08\u6216\u672c\u5730\u4ed3\u5e93\uff09\uff0c\u5c31\u662f\u5b89\u5168\u5b58\u653e\u6570\u636e\u7684\u4f4d\u7f6e\uff0c\u8fd9\u91cc\u9762\u6709\u4f60\u63d0\u4ea4\u5230\u6240\u6709\u7248\u672c\u7684\u6570\u636e\u3002\u5176\u4e2dHEAD\u6307\u5411\u6700\u65b0\u653e\u5165\u4ed3\u5e93\u7684\u7248\u672c Remote\uff1a\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u6258\u7ba1\u4ee3\u7801\u7684\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u7b80\u5355\u7684\u8ba4\u4e3a\u662f\u4f60\u9879\u76ee\u7ec4\u4e2d\u7684\u4e00\u53f0\u7535\u8111\u7528\u4e8e\u8fdc\u7a0b\u6570\u636e\u4ea4\u6362","title":"\u5de5\u4f5c\u533a\u57df"},{"location":"git/#_4","text":"Git\u7684\u5de5\u4f5c\u6d41\u7a0b\u4e00\u822c\u662f\u8fd9\u6837\u7684\uff1a \u5728\u5de5\u4f5c\u76ee\u5f55\u4e2d\u6dfb\u52a0\u3001\u4fee\u6539\u6587\u4ef6\uff1b \u5c06\u9700\u8981\u8fdb\u884c\u7248\u672c\u7ba1\u7406\u7684\u6587\u4ef6\u653e\u5165\u6682\u5b58\u533a\u57df\uff1b \u5c06\u6682\u5b58\u533a\u57df\u7684\u6587\u4ef6\u63d0\u4ea4\u5230git\u4ed3\u5e93\u3002 \u56e0\u6b64\uff0cgit\u7ba1\u7406\u7684\u6587\u4ef6\u6709\u4e09\u79cd\u72b6\u6001\uff1a\u5df2\u4fee\u6539\uff08modified\uff09,\u5df2\u6682\u5b58\uff08staged\uff09,\u5df2\u63d0\u4ea4(committed)","title":"\u5de5\u4f5c\u6d41\u7a0b"},{"location":"git/#git_3","text":"\u5982\u4f55\u5feb\u901f\u5b66\u4e60\u5e76\u638c\u63e1Git\uff1f \u638c\u63e1\u57fa\u7840\u7406\u8bba\uff1a\u4ec0\u4e48\u662fgit\u7684\u56db\u4e2a\u5de5\u4f5c\u533a\u57df\u548cgit\u7ba1\u7406\u7684\u6587\u4ef6\u4e09\u79cd\u72b6\u6001\uff1f \u4ed6\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u4ee5\u53ca\u5982\u4f55\u8f6c\u6362\uff1f \u5fc5\u987b\u638c\u63e1\uff01 \u5f00\u59cb\u52a8\u624b\u5b66\u4e60\uff0c\u4ece\u642d\u5efa\u4ed3\u5e93\uff0c\u63d0\u4ea4\u4fee\u6539\uff0c\u521b\u5efa\u5206\u652f\uff0c\u5408\u5e76\u5206\u652f\uff0c\u4fee\u6539\u5206\u652f\uff0c\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\u7b49\u7b49\u4e00\u6b65\u4e00\u6b65\u638c\u63e1Git\u7684\u6838\u5fc3\u8981\u9886\u3002\u63a8\u8350\u5728 Gitee \u52a8\u624b\u5b66Git \u4e0a\u8fdb\u884c\u53ef\u89c6\u5316\u7ec3\u4e60\uff0c\u8ba9\u4f60\u66f4\u5bb9\u6613\u7406\u89e3Git\u5de5\u4f5c\u539f\u7406\u3002 \u5f3a\u70c8\u63a8\u8350\uff01 \u8ba9Git\u63a7\u5236\u4f60\u7684\u9879\u76ee\u5f00\u53d1\u3002 \u719f\u80fd\u751f\u5de7\uff01 Git\u53c2\u8003\u76ee\u5f55\uff1a Gitee Git\u5927\u5168 \u3001 Gitee \u52a8\u624b\u5b66Git \u5f3a\u70c8\u63a8\u8350 1\u4e2a\u5c0f\u65f6\u5305\u4f1a git - \u7b80\u6613\u6307\u5357 git\u624b\u518c\uff1a http://git-scm.com/docs \u4e00\u4efd\u5f88\u597d\u7684 Git \u5165\u95e8\u6559\u7a0b\uff0c\u8bf7 \u70b9\u51fb\u8fd9\u91cc \uff1b Git\u56fe\u89e3\u6559\u7a0b","title":"Git\u5feb\u901f\u5b66\u4e60"},{"location":"git/#git_4","text":"\u65e5\u5e38\u4f7f\u7528\u53ea\u8981\u8bb0\u4f4f\u4e0b\u56fe6\u4e2a\u547d\u4ee4\uff1a","title":"Git\u547d\u4ee4"},{"location":"git/#_5","text":"# \u5728\u5f53\u524d\u76ee\u5f55\u65b0\u5efa\u4e00\u4e2aGit\u4ee3\u7801\u5e93 $ git init # \u65b0\u5efa\u4e00\u4e2a\u76ee\u5f55\uff0c\u5c06\u5176\u521d\u59cb\u5316\u4e3aGit\u4ee3\u7801\u5e93 $ git init [project-name] # \u4e0b\u8f7d\u4e00\u4e2a\u9879\u76ee\u548c\u5b83\u7684\u6574\u4e2a\u4ee3\u7801\u5386\u53f2 $ git clone [url]","title":"\u4ed3\u5e93"},{"location":"git/#_6","text":"# \u663e\u793a\u5f53\u524d\u7684Git\u914d\u7f6e $ git config --list # \u7f16\u8f91Git\u914d\u7f6e\u6587\u4ef6 $ git config -e [--global] # \u8bbe\u7f6e\u63d0\u4ea4\u4ee3\u7801\u65f6\u7684\u7528\u6237\u4fe1\u606f $ git config [--global] user.name \"[name]\" $ git config [--global] user.email \"[email address]\"","title":"\u914d\u7f6e"},{"location":"git/#_7","text":"# \u6dfb\u52a0\u6307\u5b9a\u6587\u4ef6\u5230\u6682\u5b58\u533a $ git add [file1] [file2] ... # \u6dfb\u52a0\u6307\u5b9a\u76ee\u5f55\u5230\u6682\u5b58\u533a\uff0c\u5305\u62ec\u5b50\u76ee\u5f55 $ git add [dir] # \u6dfb\u52a0\u5f53\u524d\u76ee\u5f55\u7684\u6240\u6709\u6587\u4ef6\u5230\u6682\u5b58\u533a $ git add . # \u6dfb\u52a0\u6bcf\u4e2a\u53d8\u5316\u524d\uff0c\u90fd\u4f1a\u8981\u6c42\u786e\u8ba4 # \u5bf9\u4e8e\u540c\u4e00\u4e2a\u6587\u4ef6\u7684\u591a\u5904\u53d8\u5316\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5206\u6b21\u63d0\u4ea4 $ git add -p # \u5220\u9664\u5de5\u4f5c\u533a\u6587\u4ef6\uff0c\u5e76\u4e14\u5c06\u8fd9\u6b21\u5220\u9664\u653e\u5165\u6682\u5b58\u533a $ git rm [file1] [file2] ... # \u505c\u6b62\u8ffd\u8e2a\u6307\u5b9a\u6587\u4ef6\uff0c\u4f46\u8be5\u6587\u4ef6\u4f1a\u4fdd\u7559\u5728\u5de5\u4f5c\u533a $ git rm --cached [file] # \u6539\u540d\u6587\u4ef6\uff0c\u5e76\u4e14\u5c06\u8fd9\u4e2a\u6539\u540d\u653e\u5165\u6682\u5b58\u533a $ git mv [file-original] [file-renamed]","title":"\u589e\u52a0/\u5220\u9664\u6587\u4ef6"},{"location":"git/#_8","text":"# \u63d0\u4ea4\u6682\u5b58\u533a\u5230\u4ed3\u5e93\u533a $ git commit -m [message] # \u63d0\u4ea4\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u4ed3\u5e93\u533a $ git commit [file1] [file2] ... -m [message] # \u63d0\u4ea4\u5de5\u4f5c\u533a\u81ea\u4e0a\u6b21commit\u4e4b\u540e\u7684\u53d8\u5316\uff0c\u76f4\u63a5\u5230\u4ed3\u5e93\u533a $ git commit -a # \u63d0\u4ea4\u65f6\u663e\u793a\u6240\u6709diff\u4fe1\u606f $ git commit -v # \u4f7f\u7528\u4e00\u6b21\u65b0\u7684commit\uff0c\u66ff\u4ee3\u4e0a\u4e00\u6b21\u63d0\u4ea4 # \u5982\u679c\u4ee3\u7801\u6ca1\u6709\u4efb\u4f55\u65b0\u53d8\u5316\uff0c\u5219\u7528\u6765\u6539\u5199\u4e0a\u4e00\u6b21commit\u7684\u63d0\u4ea4\u4fe1\u606f $ git commit --amend -m [message] # \u91cd\u505a\u4e0a\u4e00\u6b21commit\uff0c\u5e76\u5305\u62ec\u6307\u5b9a\u6587\u4ef6\u7684\u65b0\u53d8\u5316 $ git commit --amend [file1] [file2] ...","title":"\u4ee3\u7801\u63d0\u4ea4"},{"location":"git/#_9","text":"# \u5217\u51fa\u6240\u6709\u672c\u5730\u5206\u652f $ git branch # \u5217\u51fa\u6240\u6709\u8fdc\u7a0b\u5206\u652f $ git branch -r # \u5217\u51fa\u6240\u6709\u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f $ git branch -a # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u4f46\u4f9d\u7136\u505c\u7559\u5728\u5f53\u524d\u5206\u652f $ git branch [branch-name] # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u5e76\u5207\u6362\u5230\u8be5\u5206\u652f $ git checkout -b [branch] # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u6307\u5411\u6307\u5b9acommit $ git branch [branch] [commit] # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u4e0e\u6307\u5b9a\u7684\u8fdc\u7a0b\u5206\u652f\u5efa\u7acb\u8ffd\u8e2a\u5173\u7cfb $ git branch --track [branch] [remote-branch] # \u5207\u6362\u5230\u6307\u5b9a\u5206\u652f\uff0c\u5e76\u66f4\u65b0\u5de5\u4f5c\u533a $ git checkout [branch-name] # \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u5206\u652f $ git checkout - # \u5efa\u7acb\u8ffd\u8e2a\u5173\u7cfb\uff0c\u5728\u73b0\u6709\u5206\u652f\u4e0e\u6307\u5b9a\u7684\u8fdc\u7a0b\u5206\u652f\u4e4b\u95f4 $ git branch --set-upstream [branch] [remote-branch] # \u5408\u5e76\u6307\u5b9a\u5206\u652f\u5230\u5f53\u524d\u5206\u652f $ git merge [branch] # \u9009\u62e9\u4e00\u4e2acommit\uff0c\u5408\u5e76\u8fdb\u5f53\u524d\u5206\u652f $ git cherry-pick [commit] # \u5220\u9664\u5206\u652f $ git branch -d [branch-name] # \u5220\u9664\u8fdc\u7a0b\u5206\u652f $ git push origin --delete [branch-name] $ git branch -dr [remote/branch]","title":"\u5206\u652f"},{"location":"git/#_10","text":"# \u5217\u51fa\u6240\u6709tag $ git tag # \u65b0\u5efa\u4e00\u4e2atag\u5728\u5f53\u524dcommit $ git tag [tag] # \u65b0\u5efa\u4e00\u4e2atag\u5728\u6307\u5b9acommit $ git tag [tag] [commit] # \u5220\u9664\u672c\u5730tag $ git tag -d [tag] # \u5220\u9664\u8fdc\u7a0btag $ git push origin :refs/tags/[tagName] # \u67e5\u770btag\u4fe1\u606f $ git show [tag] # \u63d0\u4ea4\u6307\u5b9atag $ git push [remote] [tag] # \u63d0\u4ea4\u6240\u6709tag $ git push [remote] --tags # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u6307\u5411\u67d0\u4e2atag $ git checkout -b [branch] [tag]","title":"\u6807\u7b7e"},{"location":"git/#_11","text":"# \u663e\u793a\u6709\u53d8\u66f4\u7684\u6587\u4ef6 $ git status # \u663e\u793a\u5f53\u524d\u5206\u652f\u7684\u7248\u672c\u5386\u53f2 $ git log # \u663e\u793acommit\u5386\u53f2\uff0c\u4ee5\u53ca\u6bcf\u6b21commit\u53d1\u751f\u53d8\u66f4\u7684\u6587\u4ef6 $ git log --stat # \u641c\u7d22\u63d0\u4ea4\u5386\u53f2\uff0c\u6839\u636e\u5173\u952e\u8bcd $ git log -S [keyword] # \u663e\u793a\u67d0\u4e2acommit\u4e4b\u540e\u7684\u6240\u6709\u53d8\u52a8\uff0c\u6bcf\u4e2acommit\u5360\u636e\u4e00\u884c $ git log [tag] HEAD --pretty=format:%s # \u663e\u793a\u67d0\u4e2acommit\u4e4b\u540e\u7684\u6240\u6709\u53d8\u52a8\uff0c\u5176\"\u63d0\u4ea4\u8bf4\u660e\"\u5fc5\u987b\u7b26\u5408\u641c\u7d22\u6761\u4ef6 $ git log [tag] HEAD --grep feature # \u663e\u793a\u67d0\u4e2a\u6587\u4ef6\u7684\u7248\u672c\u5386\u53f2\uff0c\u5305\u62ec\u6587\u4ef6\u6539\u540d $ git log --follow [file] $ git whatchanged [file] # \u663e\u793a\u6307\u5b9a\u6587\u4ef6\u76f8\u5173\u7684\u6bcf\u4e00\u6b21diff $ git log -p [file] # \u663e\u793a\u8fc7\u53bb5\u6b21\u63d0\u4ea4 $ git log -5 --pretty --oneline # \u663e\u793a\u6240\u6709\u63d0\u4ea4\u8fc7\u7684\u7528\u6237\uff0c\u6309\u63d0\u4ea4\u6b21\u6570\u6392\u5e8f $ git shortlog -sn # \u663e\u793a\u6307\u5b9a\u6587\u4ef6\u662f\u4ec0\u4e48\u4eba\u5728\u4ec0\u4e48\u65f6\u95f4\u4fee\u6539\u8fc7 $ git blame [file] # \u663e\u793a\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u5dee\u5f02 $ git diff # \u663e\u793a\u6682\u5b58\u533a\u548c\u4e0a\u4e00\u4e2acommit\u7684\u5dee\u5f02 $ git diff --cached [file] # \u663e\u793a\u5de5\u4f5c\u533a\u4e0e\u5f53\u524d\u5206\u652f\u6700\u65b0commit\u4e4b\u95f4\u7684\u5dee\u5f02 $ git diff HEAD # \u663e\u793a\u4e24\u6b21\u63d0\u4ea4\u4e4b\u95f4\u7684\u5dee\u5f02 $ git diff [first-branch]...[second-branch] # \u663e\u793a\u4eca\u5929\u4f60\u5199\u4e86\u591a\u5c11\u884c\u4ee3\u7801 $ git diff --shortstat \"@{0 day ago}\" # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u7684\u5143\u6570\u636e\u548c\u5185\u5bb9\u53d8\u5316 $ git show [commit] # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u53d1\u751f\u53d8\u5316\u7684\u6587\u4ef6 $ git show --name-only [commit] # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u65f6\uff0c\u67d0\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9 $ git show [commit]:[filename] # \u663e\u793a\u5f53\u524d\u5206\u652f\u7684\u6700\u8fd1\u51e0\u6b21\u63d0\u4ea4 $ git reflog","title":"\u67e5\u770b\u4fe1\u606f"},{"location":"git/#_12","text":"# \u4e0b\u8f7d\u8fdc\u7a0b\u4ed3\u5e93\u7684\u6240\u6709\u53d8\u52a8 $ git fetch [remote] # \u663e\u793a\u6240\u6709\u8fdc\u7a0b\u4ed3\u5e93 $ git remote -v # \u663e\u793a\u67d0\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\u7684\u4fe1\u606f $ git remote show [remote] # \u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u547d\u540d $ git remote add [shortname] [url] # \u53d6\u56de\u8fdc\u7a0b\u4ed3\u5e93\u7684\u53d8\u5316\uff0c\u5e76\u4e0e\u672c\u5730\u5206\u652f\u5408\u5e76 $ git pull [remote] [branch] # \u4e0a\u4f20\u672c\u5730\u6307\u5b9a\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93 $ git push [remote] [branch] # \u5f3a\u884c\u63a8\u9001\u5f53\u524d\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5373\u4f7f\u6709\u51b2\u7a81 $ git push [remote] --force # \u63a8\u9001\u6240\u6709\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93 $ git push [remote] --all","title":"\u8fdc\u7a0b\u540c\u6b65"},{"location":"git/#_13","text":"# \u6062\u590d\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u5de5\u4f5c\u533a $ git checkout [file] # \u6062\u590d\u67d0\u4e2acommit\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a $ git checkout [commit] [file] # \u6062\u590d\u6682\u5b58\u533a\u7684\u6240\u6709\u6587\u4ef6\u5230\u5de5\u4f5c\u533a $ git checkout . # \u91cd\u7f6e\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\uff0c\u4e0e\u4e0a\u4e00\u6b21commit\u4fdd\u6301\u4e00\u81f4\uff0c\u4f46\u5de5\u4f5c\u533a\u4e0d\u53d8 $ git reset [file] # \u91cd\u7f6e\u6682\u5b58\u533a\u4e0e\u5de5\u4f5c\u533a\uff0c\u4e0e\u4e0a\u4e00\u6b21commit\u4fdd\u6301\u4e00\u81f4 $ git reset --hard # \u91cd\u7f6e\u5f53\u524d\u5206\u652f\u7684\u6307\u9488\u4e3a\u6307\u5b9acommit\uff0c\u540c\u65f6\u91cd\u7f6e\u6682\u5b58\u533a\uff0c\u4f46\u5de5\u4f5c\u533a\u4e0d\u53d8 $ git reset [commit] # \u91cd\u7f6e\u5f53\u524d\u5206\u652f\u7684HEAD\u4e3a\u6307\u5b9acommit\uff0c\u540c\u65f6\u91cd\u7f6e\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\uff0c\u4e0e\u6307\u5b9acommit\u4e00\u81f4 $ git reset --hard [commit] # \u91cd\u7f6e\u5f53\u524dHEAD\u4e3a\u6307\u5b9acommit\uff0c\u4f46\u4fdd\u6301\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u4e0d\u53d8 $ git reset --keep [commit] # \u65b0\u5efa\u4e00\u4e2acommit\uff0c\u7528\u6765\u64a4\u9500\u6307\u5b9acommit # \u540e\u8005\u7684\u6240\u6709\u53d8\u5316\u90fd\u5c06\u88ab\u524d\u8005\u62b5\u6d88\uff0c\u5e76\u4e14\u5e94\u7528\u5230\u5f53\u524d\u5206\u652f $ git revert [commit] \u6682\u65f6\u5c06\u672a\u63d0\u4ea4\u7684\u53d8\u5316\u79fb\u9664\uff0c\u7a0d\u540e\u518d\u79fb\u5165 $ git stash $ git stash pop","title":"\u64a4\u9500"},{"location":"git/#_14","text":"# \u751f\u6210\u4e00\u4e2a\u53ef\u4f9b\u53d1\u5e03\u7684\u538b\u7f29\u5305 $ git archive","title":"\u5176\u4ed6"},{"location":"reference/","text":"\u53c2\u8003\u76ee\u5f55 \u00b6 Google Python\u98ce\u683c\u6307\u5357\u4e2d\u6587\u7248\uff08 https://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/contents/ \uff09 Python \u6700\u4f73\u5b9e\u8df5\u6307\u5357 https://pythonguidecn.readthedocs.io/zh/latest/ Python\u9879\u76ee\u5de5\u7a0b\u5316\u5f00\u53d1\u6307\u5357 https://pyloong.github.io/pythonic-project-guidelines/ Python \u5b98\u65b9\u98ce\u683c\u6307\u5357 PEP-8 https://peps.python.org/pep-0008/ Python \u5b98\u65b9\u6587\u6863\u5b57\u7b26\u4e32 PEP-257 https://peps.python.org/pep-0257/ Python \u5b98\u65b9\u65e5\u5fd7 PEP-282 https://peps.python.org/pep-0282/ Python \u7c7b\u578b\u6ce8\u91ca PEP-484 https://peps.python.org/pep-0484/ Python CookBook https://python3-cookbook.readthedocs.io/zh_CN/latest/","title":"\u53c2\u8003\u76ee\u5f55"},{"location":"reference/#_1","text":"Google Python\u98ce\u683c\u6307\u5357\u4e2d\u6587\u7248\uff08 https://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/contents/ \uff09 Python \u6700\u4f73\u5b9e\u8df5\u6307\u5357 https://pythonguidecn.readthedocs.io/zh/latest/ Python\u9879\u76ee\u5de5\u7a0b\u5316\u5f00\u53d1\u6307\u5357 https://pyloong.github.io/pythonic-project-guidelines/ Python \u5b98\u65b9\u98ce\u683c\u6307\u5357 PEP-8 https://peps.python.org/pep-0008/ Python \u5b98\u65b9\u6587\u6863\u5b57\u7b26\u4e32 PEP-257 https://peps.python.org/pep-0257/ Python \u5b98\u65b9\u65e5\u5fd7 PEP-282 https://peps.python.org/pep-0282/ Python \u7c7b\u578b\u6ce8\u91ca PEP-484 https://peps.python.org/pep-0484/ Python CookBook https://python3-cookbook.readthedocs.io/zh_CN/latest/","title":"\u53c2\u8003\u76ee\u5f55"},{"location":"guidelines/code_lint/","text":"\u4ee3\u7801\u68c0\u6d4b \u00b6 \u53c2\u8003\uff1a Python \u9879\u76ee\u5de5\u7a0b\u5316\u5f00\u53d1\u6307\u5357-\u4ee3\u7801\u68c0\u6d4b \u4ee3\u7801\u68c0\u6d4b\u662f\u4f7f\u7528\u4e00\u4e9b\u5de5\u5177\u68c0\u67e5\u4ee3\u7801\u77e5\u5426\u7b26\u5408 Python \u76f8\u5173\u89c4\u8303\u3002 \u5f53\u524d\u4e3b\u6d41\u7684\u4ee3\u7801\u68c0\u6d4b\u89c4\u8303\u5305\u62ec black flake8 pylint yapf \u4ee3\u7801\u68c0\u6d4b\u5de5\u5177 \u00b6 black \u00b6 black \u662f PSF \u7ec4\u7ec7\u4e0b\u7684\u4e00\u4e2a\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177\u3002 \u5176\u7279\u70b9\u662f\u5f3a\u5236\u683c\u5f0f\u5316\u4ee3\u7801\uff0c\u4f7f\u4ee3\u7801\u4fdd\u6301\u4e00\u81f4\u6027\u3002\u4f46\u7f3a\u70b9\u662f\u4f1a\u81ea\u52a8\u8c03\u6574\u4ee3\u7801\u683c\u5f0f\u3002 \u7279\u70b9\uff1a \u7b26\u5408 PEP 8 \u6807\u51c6 \u652f\u6301\u81ea\u5b9a\u4e49\u89c4\u5219 \u81ea\u52a8\u683c\u5f0f\u5316\u4ee3\u7801 IDE \u63d2\u4ef6 psf \u793e\u533a\u7ef4\u62a4 flake8 \u00b6 flake8 \u662f pycqa \u7ec4\u7ec7\u4e0b\u7684\u4e00\u4e2a\u4ee3\u7801\u68c0\u6d4b\u5de5\u5177\u3002\u5b83\u9075\u5faa PEP 8 \u89c4\u8303\uff0c \u6307\u793a\u51fa\u4e0d\u7b26\u5408\u89c4\u8303\u7684\u4ee3\u7801\u3002 \u7279\u70b9\uff1a \u7b26\u5408 PEP 8 \u89c4\u8303 \u96c6\u5408\u4f7f\u7528 pycodestyle \uff0c pyflakes \uff0c mccabe \u7b49\u7b2c\u4e09\u65b9\u63d2\u4ef6\u3002 \u652f\u6301\u81ea\u5b9a\u4e49\u89c4\u5219 \u63d0\u793a\u4e0d\u7b26\u5408\u89c4\u8303\u7684\u5185\u5bb9 IDE \u63d2\u4ef6 git \u6216 Mercurial \u6269\u5c55 pycoa \u793e\u533a\u7ef4\u62a4 pylint \u00b6 pylint \u662f pycqa \u7ec4\u7ec7\u4e0b\u7ef4\u62a4\u7684\u5de5\u5177\u3002\u5b83\u4e0d\u4ec5\u4ec5\u662f\u4e00\u6b3e\u4ee3\u7801\u68c0\u6d4b\u5de5\u5177\uff0c\u8fd8\u53ef\u4ee5\u53d1\u73b0\u53d8\u6210\u9519\u8bef\uff0c\u4ee3\u7801\u5f02\u5e38\uff0c\u5e76\u63d0\u4f9b\u7b80\u5355\u7684\u91cd\u6784\u5efa\u8bae\u3002 \u7279\u70b9\uff1a \u7b26\u5408 PEP 8 \u89c4\u8303 \u652f\u6301\u81ea\u5b9a\u4e49\u89c4\u5219 \u9519\u8bef\u68c0\u6d4b \u91cd\u6784\u5efa\u8bae IDE \u63d2\u4ef6 pycoa \u793e\u533a\u7ef4\u62a4 yapf \u00b6 yapf \u662f Google \u7ef4\u62a4\u7684\u4e00\u4e2a\u4ee3\u7801\u68c0\u6d4b\u5de5\u5177\u3002\u5b83\u548c\u4e0a\u8ff0\u5de5\u5177\u4e0d\u540c\uff0c \u4f7f\u7528\u57fa\u4e8e clang-format \u7684\u7b97\u6cd5\u5c06\u4ee3\u7801\u91cd\u65b0\u683c\u5f0f\u5316\u4e3a\u590d\u5408\u98ce\u683c\u6307\u5357\u7684\u6700\u4f73\u683c\u5f0f\u3002\u7c7b\u4f3c\u4e8e Golang \u7684 gofmt \u5de5\u5177\u3002 \u6240\u4ee5\u5b83\u548c black \u5de5\u5177\u6709\u70b9\u7c7b\u4f3c\u3002 \u7279\u70b9\uff1a \u7b26\u5408 PEP 8 \u89c4\u8303 \u652f\u6301\u81ea\u5b9a\u4e49\u89c4\u5219 \u81ea\u52a8\u683c\u5f0f\u5316\u4ee3\u7801 IDE \u63d2\u4ef6 google \u793e\u533a\u7ef4\u62a4 \u867d\u7136\u4ee3\u7801\u68c0\u6d4b\u5de5\u5177\u6709\u5f88\u591a\uff0c\u4f46\u662f\u5b83\u4eec\u7684\u521d\u8877\u90fd\u662f\u4e3a\u4e86\u8ba9 Python \u4ee3\u7801\u7b26\u5408\u4e00\u81f4\u7684\u98ce\u683c\u548c\u89c4\u8303\u3002\u53ea\u4e0d\u8fc7\u662f\u6709\u7684\u5de5\u5177\u66f4\u6fc0\u8fdb\u800c\u5df2\u3002\u5177\u6709\u826f\u597d\u7f16\u7801\u4e60\u60ef\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u5199\u51fa\u7684\u4ee3\u7801\uff0c \u65e0\u8bba\u4f7f\u7528\u54ea\u79cd\u5de5\u5177\uff0c\u90fd\u80fd\u8f7b\u677e\u901a\u8fc7\u3002\u6240\u4ee5\u4ee3\u7801\u68c0\u6d4b\u5de5\u5177\u7684\u6700\u7ec8\u76ee\u7684\u662f\u544a\u77e5\u5f00\u53d1\u4eba\u5458\u5c3d\u53ef\u80fd\u9075\u5b88\u4e00\u81f4\u7684\u98ce\u683c\u6765\u7f16\u5199\u4ee3\u7801\u3002 \u8003\u8651\u5230\u4ee3\u7801\u68c0\u6d4b\u5de5\u5177\u7684\u6307\u5bfc\u6027\uff0c\u548c\u529f\u80fd\u6027\uff0c\u63a8\u8350\u4f7f\u7528 pylint \u4f5c\u4e3a\u9996\u9009\u68c0\u6d4b\u5de5\u5177\u3002\u5728\u5b9e\u8df5\u4e2d\u53d1\u73b0\u7531\u4e8e\u67d0\u4e9b\u5e93\u548c pylint \u7684\u517c\u5bb9\u6027\u95ee\u9898\uff0c\u5f53 \u4f7f\u7528 pylint \u6709\u95ee\u9898\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 flake8 \u4f5c\u4e3a\u66ff\u4ee3\u7684\u68c0\u6d4b\u5de5\u5177\u3002 \u4f7f\u7528\u6559\u7a0b\u5f85\u66f4\u65b0 \u00b6","title":"\u4ee3\u7801\u68c0\u6d4b"},{"location":"guidelines/code_lint/#_1","text":"\u53c2\u8003\uff1a Python \u9879\u76ee\u5de5\u7a0b\u5316\u5f00\u53d1\u6307\u5357-\u4ee3\u7801\u68c0\u6d4b \u4ee3\u7801\u68c0\u6d4b\u662f\u4f7f\u7528\u4e00\u4e9b\u5de5\u5177\u68c0\u67e5\u4ee3\u7801\u77e5\u5426\u7b26\u5408 Python \u76f8\u5173\u89c4\u8303\u3002 \u5f53\u524d\u4e3b\u6d41\u7684\u4ee3\u7801\u68c0\u6d4b\u89c4\u8303\u5305\u62ec black flake8 pylint yapf","title":"\u4ee3\u7801\u68c0\u6d4b"},{"location":"guidelines/code_lint/#_2","text":"","title":"\u4ee3\u7801\u68c0\u6d4b\u5de5\u5177"},{"location":"guidelines/code_lint/#black","text":"black \u662f PSF \u7ec4\u7ec7\u4e0b\u7684\u4e00\u4e2a\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177\u3002 \u5176\u7279\u70b9\u662f\u5f3a\u5236\u683c\u5f0f\u5316\u4ee3\u7801\uff0c\u4f7f\u4ee3\u7801\u4fdd\u6301\u4e00\u81f4\u6027\u3002\u4f46\u7f3a\u70b9\u662f\u4f1a\u81ea\u52a8\u8c03\u6574\u4ee3\u7801\u683c\u5f0f\u3002 \u7279\u70b9\uff1a \u7b26\u5408 PEP 8 \u6807\u51c6 \u652f\u6301\u81ea\u5b9a\u4e49\u89c4\u5219 \u81ea\u52a8\u683c\u5f0f\u5316\u4ee3\u7801 IDE \u63d2\u4ef6 psf \u793e\u533a\u7ef4\u62a4","title":"black"},{"location":"guidelines/code_lint/#flake8","text":"flake8 \u662f pycqa \u7ec4\u7ec7\u4e0b\u7684\u4e00\u4e2a\u4ee3\u7801\u68c0\u6d4b\u5de5\u5177\u3002\u5b83\u9075\u5faa PEP 8 \u89c4\u8303\uff0c \u6307\u793a\u51fa\u4e0d\u7b26\u5408\u89c4\u8303\u7684\u4ee3\u7801\u3002 \u7279\u70b9\uff1a \u7b26\u5408 PEP 8 \u89c4\u8303 \u96c6\u5408\u4f7f\u7528 pycodestyle \uff0c pyflakes \uff0c mccabe \u7b49\u7b2c\u4e09\u65b9\u63d2\u4ef6\u3002 \u652f\u6301\u81ea\u5b9a\u4e49\u89c4\u5219 \u63d0\u793a\u4e0d\u7b26\u5408\u89c4\u8303\u7684\u5185\u5bb9 IDE \u63d2\u4ef6 git \u6216 Mercurial \u6269\u5c55 pycoa \u793e\u533a\u7ef4\u62a4","title":"flake8"},{"location":"guidelines/code_lint/#pylint","text":"pylint \u662f pycqa \u7ec4\u7ec7\u4e0b\u7ef4\u62a4\u7684\u5de5\u5177\u3002\u5b83\u4e0d\u4ec5\u4ec5\u662f\u4e00\u6b3e\u4ee3\u7801\u68c0\u6d4b\u5de5\u5177\uff0c\u8fd8\u53ef\u4ee5\u53d1\u73b0\u53d8\u6210\u9519\u8bef\uff0c\u4ee3\u7801\u5f02\u5e38\uff0c\u5e76\u63d0\u4f9b\u7b80\u5355\u7684\u91cd\u6784\u5efa\u8bae\u3002 \u7279\u70b9\uff1a \u7b26\u5408 PEP 8 \u89c4\u8303 \u652f\u6301\u81ea\u5b9a\u4e49\u89c4\u5219 \u9519\u8bef\u68c0\u6d4b \u91cd\u6784\u5efa\u8bae IDE \u63d2\u4ef6 pycoa \u793e\u533a\u7ef4\u62a4","title":"pylint"},{"location":"guidelines/code_lint/#yapf","text":"yapf \u662f Google \u7ef4\u62a4\u7684\u4e00\u4e2a\u4ee3\u7801\u68c0\u6d4b\u5de5\u5177\u3002\u5b83\u548c\u4e0a\u8ff0\u5de5\u5177\u4e0d\u540c\uff0c \u4f7f\u7528\u57fa\u4e8e clang-format \u7684\u7b97\u6cd5\u5c06\u4ee3\u7801\u91cd\u65b0\u683c\u5f0f\u5316\u4e3a\u590d\u5408\u98ce\u683c\u6307\u5357\u7684\u6700\u4f73\u683c\u5f0f\u3002\u7c7b\u4f3c\u4e8e Golang \u7684 gofmt \u5de5\u5177\u3002 \u6240\u4ee5\u5b83\u548c black \u5de5\u5177\u6709\u70b9\u7c7b\u4f3c\u3002 \u7279\u70b9\uff1a \u7b26\u5408 PEP 8 \u89c4\u8303 \u652f\u6301\u81ea\u5b9a\u4e49\u89c4\u5219 \u81ea\u52a8\u683c\u5f0f\u5316\u4ee3\u7801 IDE \u63d2\u4ef6 google \u793e\u533a\u7ef4\u62a4 \u867d\u7136\u4ee3\u7801\u68c0\u6d4b\u5de5\u5177\u6709\u5f88\u591a\uff0c\u4f46\u662f\u5b83\u4eec\u7684\u521d\u8877\u90fd\u662f\u4e3a\u4e86\u8ba9 Python \u4ee3\u7801\u7b26\u5408\u4e00\u81f4\u7684\u98ce\u683c\u548c\u89c4\u8303\u3002\u53ea\u4e0d\u8fc7\u662f\u6709\u7684\u5de5\u5177\u66f4\u6fc0\u8fdb\u800c\u5df2\u3002\u5177\u6709\u826f\u597d\u7f16\u7801\u4e60\u60ef\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u5199\u51fa\u7684\u4ee3\u7801\uff0c \u65e0\u8bba\u4f7f\u7528\u54ea\u79cd\u5de5\u5177\uff0c\u90fd\u80fd\u8f7b\u677e\u901a\u8fc7\u3002\u6240\u4ee5\u4ee3\u7801\u68c0\u6d4b\u5de5\u5177\u7684\u6700\u7ec8\u76ee\u7684\u662f\u544a\u77e5\u5f00\u53d1\u4eba\u5458\u5c3d\u53ef\u80fd\u9075\u5b88\u4e00\u81f4\u7684\u98ce\u683c\u6765\u7f16\u5199\u4ee3\u7801\u3002 \u8003\u8651\u5230\u4ee3\u7801\u68c0\u6d4b\u5de5\u5177\u7684\u6307\u5bfc\u6027\uff0c\u548c\u529f\u80fd\u6027\uff0c\u63a8\u8350\u4f7f\u7528 pylint \u4f5c\u4e3a\u9996\u9009\u68c0\u6d4b\u5de5\u5177\u3002\u5728\u5b9e\u8df5\u4e2d\u53d1\u73b0\u7531\u4e8e\u67d0\u4e9b\u5e93\u548c pylint \u7684\u517c\u5bb9\u6027\u95ee\u9898\uff0c\u5f53 \u4f7f\u7528 pylint \u6709\u95ee\u9898\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 flake8 \u4f5c\u4e3a\u66ff\u4ee3\u7684\u68c0\u6d4b\u5de5\u5177\u3002","title":"yapf"},{"location":"guidelines/code_lint/#_3","text":"","title":"\u4f7f\u7528\u6559\u7a0b\u5f85\u66f4\u65b0"},{"location":"guidelines/code_refactor/","text":"\u4ee3\u7801\u91cd\u6784 \u00b6 \u6709\u5fc5\u8981\u65f6\u5c31\u91cd\u6784\u4f60\u7684\u4ee3\u7801\uff01 \u5f85\u66f4\u65b0\u3002\u3002\u3002 \u00b6","title":"\u4ee3\u7801\u91cd\u6784"},{"location":"guidelines/code_refactor/#_1","text":"\u6709\u5fc5\u8981\u65f6\u5c31\u91cd\u6784\u4f60\u7684\u4ee3\u7801\uff01","title":"\u4ee3\u7801\u91cd\u6784"},{"location":"guidelines/code_refactor/#_2","text":"","title":"\u5f85\u66f4\u65b0\u3002\u3002\u3002"},{"location":"guidelines/configuration/","text":"\u914d\u7f6e\u6587\u4ef6 \u00b6 \u914d\u7f6e\u662f\u4e00\u4e2a\u9879\u76ee\u7684\u6838\u5fc3\u9a71\u52a8\uff0c\u53ef\u4ee5\u5728\u4e0d\u66f4\u6539\u6e90\u4ee3\u7801\u6216\u51cf\u5c11\u6e90\u4ee3\u7801\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\u5feb\u901f\u8c03\u6574\u9879\u76ee\u7684\u8fd0\u884c\u3002 \u4f7f\u7528\u4e2d\u5fc3\u914d\u7f6e\u9a71\u52a8\u9879\u76ee\uff0c\u80fd\u8ba9\u9879\u76ee\u7684\u4f7f\u7528\u66f4\u52a0\u7075\u6d3b\uff0c\u8fd0\u7ef4\u5de5\u4f5c\u66f4\u8f7b\u677e\u3002 \u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u91cd\u7528\u6027\uff0c\u4e0d\u518d\u6bcf\u6b21\u90fd\u53bb\u4fee\u6539\u4ee3\u7801\u5185\u90e8 \u8fd9\u610f\u5473\u7740\u5176\u4ed6\u4e0d\u592a\u61c2\u4f60\u4ee3\u7801\u5185\u90e8\u7684\u4eba\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4f60\u7684\u9879\u76ee\uff0c\u53ea\u7528\u6839\u636e\u9700\u6c42\u66f4\u6539\u914d\u7f6e\u5373\u53ef \u6709\u5229\u4e8e\u56e2\u961f\u534f\u4f5c \u6709\u5229\u4e8e\u5b89\u5168\u6570\u636e/\u79d8\u5bc6\u6570\u636e\u7684\u7ba1\u7406 \u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u9a71\u52a8\u9879\u76ee\u7684\u76f8\u5173\u57fa\u7840\u914d\u7f6e\uff0c\u5982\u9ed8\u8ba4 data \u548c logs \u6587\u4ef6\u5939\u7684\u6240\u5728\u8def\u5f84\u548c\u540d\u79f0\uff0cWeb\u9879\u76ee\u76f8\u5173\u914d\u7f6e\uff0c\u6570\u636e\u5e93\u8fde\u63a5\u76f8\u5173\u914d\u7f6e\uff0c\u7b2c\u4e09\u65b9\u5e93\u4f7f\u7528\u914d\u7f6e\u7b49\u3002\u8fd9\u4e9b\u4e0d\u540c\u914d\u7f6e\u53ef\u4ee5\u5206\u522b\u5b58\u653e\u5728\u4e0d\u540c\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u4e14\u6587\u4ef6\u7c7b\u578b\u53ef\u4ee5\u591a\u79cd\u591a\u6837\uff0c\u5982 .py \uff0c .cfg \uff0c .ini \uff0c .yaml \uff0c .json \uff0c .txt \u7b49\u3002\u914d\u7f6e\u6587\u4ef6\u4f7f\u7528\u65b9\u6cd5\u53c2\u8003\u8fd9\u4e2a \u535a\u5ba2 \u3002 \u9759\u6001\u914d\u7f6e \u00b6 \u53c2\u8003\uff1a source \u5728\u5f88\u591a\u5f00\u6e90\u9879\u76ee\u6216\u8005\u4e00\u4e9b\u8f83\u5c0f\u7684\u9879\u76ee\u4e2d\u5e38\u89c1\u5bf9\u914d\u7f6e\u6587\u4ef6\u7684\u4f7f\u7528\u505a\u6cd5\u662f\uff1a \u914d\u7f6e\u6587\u4ef6\u5199\u5728\u4e00\u4e2a\u6216\u591a\u4e2apython\u6587\u4ef6\u4e2d\uff0c\u6bd4\u5982\u4e0a\u6587\u7684 settings.py \u3002\u9879\u76ee\u4e2d\u54ea\u4e2a\u6a21\u5757\u7528\u5230\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u5c31\u76f4\u63a5\u901a\u8fc7 import settings \u8fd9\u79cd\u5f62\u5f0f\u6765\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u914d\u7f6e\u3002 ## Settings # File config SOURCE_FILE = '/tmp/foo.txt' # Log config LOG_LEVEL = 'DEBUG' LOG_FORMAT = ' %(asctime)s - %(name)s - %(levelname)s - %(message)s ' ## main import config import logging logging . basicConfig ( level = settings . LOG_LEVEL , format = settings . LOG_FORMAT ) \u8fd9\u79cd\u505a\u6cd5\u4e0d\u592a\u597d\u7684\u65b9\u9762: - \u5217\u8868\u8fd9\u8ba9\u5355\u5143\u6d4b\u8bd5\u53d8\u5f97\u56f0\u96be\uff08\u56e0\u4e3a\u6a21\u5757\u5185\u90e8\u4f9d\u8d56\u4e86\u5916\u90e8\u914d\u7f6e\uff09 - \u53e6\u4e00\u65b9\u9762\u914d\u7f6e\u6587\u4ef6\u4f5c\u4e3a\u7528\u6237\u63a7\u5236\u7a0b\u5e8f\u7684\u63a5\u53e3\uff0c\u5e94\u5f53\u53ef\u4ee5\u7531\u7528\u6237\u81ea\u7531\u6307\u5b9a\u8be5\u6587\u4ef6\u7684\u8def\u5f84\u3002 - \u7a0b\u5e8f\u7ec4\u4ef6\u53ef\u590d\u7528\u6027\u592a\u5dee\uff0c\u56e0\u4e3a\u8fd9\u79cd\u8d2f\u7a7f\u6240\u6709\u6a21\u5757\u7684\u4ee3\u7801\u786c\u7f16\u7801\u65b9\u5f0f\uff0c\u4f7f\u5f97\u5927\u90e8\u5206\u6a21\u5757\u90fd\u4f9d\u8d56 conf.py \u8fd9\u4e2a\u6587\u4ef6\u3002 \u52a8\u6001\u914d\u7f6e \u00b6 \u6240\u4ee5\uff0c\u66f4\u597d\u7684\u65b9\u5f0f\u662f: - \u6a21\u5757\u7684\u914d\u7f6e\u90fd\u662f\u53ef\u4ee5\u7075\u6d3b\u914d\u7f6e\u7684\uff0c\u4e0d\u53d7\u5916\u90e8\u914d\u7f6e\u6587\u4ef6\u7684\u5f71\u54cd - \u7a0b\u5e8f\u7684\u914d\u7f6e\u4e5f\u662f\u53ef\u4ee5\u7075\u6d3b\u63a7\u5236\u7684\u3002 \u5e38\u89c1\u7684\u914d\u7f6e\u7ba1\u7406\u5de5\u5177\u6709\uff1a cofigureparser \uff08python\u5185\u7f6e\uff09\uff0c Dynaconf \uff0c python-dotenv \uff0c **Hydra**\u7b49\u3002 Dynaconf \uff08 pypi \uff0c \u5b98\u7f51 \uff09\u662f\u4e00\u4e2a\u7075\u6d3b\u7684\u4e2d\u5fc3\u914d\u7f6e\u7ba1\u7406\u5de5\u5177\uff0c\u80fd\u591f\u4ece\u4e0d\u540c\u7684\u914d\u7f6e\u6570\u636e\u5b58\u50a8\u65b9\u5f0f\u4e2d\u8bfb\u53d6\u914d\u7f6e\uff0c\u4f8b\u5982 .py \uff0c .redis \uff0c .ini \uff0c .json \u6587\u4ef6\uff0c\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u7b49\u7b49\u3002 \u5176\u5177\u6709\u5982\u4e0b\u7279\u70b9\uff1a \u52a0\u8f7d\u591a\u4e2a\u914d\u7f6e\u6e90 \u914d\u7f6e\u5206\u5c42 Django Flask \u6269\u5c55 \u652f\u6301 Redis \u548c Vault \u5728\u9879\u76ee\u4e2d\u65b0\u5efa\u914d\u7f6e\u6587\u4ef6 settings.yml ## setting foo : 1 bar : 2 \u65b0\u5efa\u914d\u7f6e\u6a21\u5757 config.py ## config.py from dynaconf import Dynaconf settings = Dynaconf ( settings_files = [ 'settings.yml' ]) \u65b0\u5efa\u4e00\u4e2a app.py \u6587\u4ef6\uff0c\u4f7f\u7528\u914d\u7f6e ## app.py from config import settings print ( settings . FOO ) print ( settings . BAR ) \u7136\u540e\u8fd0\u884c python app.py \u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u80fd\u591f\u81ea\u52a8\u83b7\u53d6 settings.yml \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u503c\u3002 \u589e\u52a0\u672c\u5730\u914d\u7f6e\u6587\u4ef6 settings.local.yml ## setting.local foo : 10 bar : 20 \u518d\u6b21\u8fd0\u884c python app.py \uff0c\u7a0b\u5e8f\u4f1a\u81ea\u52a8\u83b7\u53d6 settings.local.yml \u3002 \u8fd9\u662f\u56e0\u4e3a Dynaconf \u5728\u521d\u59cb\u5316\u662f\u4f20\u5165\u4e86\u914d\u7f6e\u6587\u4ef6\u683c\u5f0f\u4e3a settings.yml \uff0c\u5728\u52a0\u8f7d\u914d\u7f6e\u65f6\uff0c\u4f1a\u540c\u65f6\u67e5\u627e settings.local.yml \u7684\u914d\u7f6e\u6587\u4ef6\u3002 \u5e76\u5c06\u4e24\u4e2a\u914d\u7f6e\u6587\u4ef6\u7684\u5185\u5bb9\u5408\u5e76\uff0c\u5982\u679c\u5b58\u5728\u76f8\u540c\u53d8\u91cf\uff0c settings.local.yml \u4f1a\u8986\u76d6 settings.yml \u4e2d\u7684\u914d\u7f6e\u3002 \u652f\u6301\u7684\u6587\u4ef6\u7c7b\u578b \u00b6 .toml - Dynaconf \u9ed8\u8ba4\u548c\u63a8\u8350\u7684\u683c\u5f0f. .yaml|.yml - \u63a8\u8350\u7528\u4e8eDjango\u9879\u76ee. .json - \u7528\u4e8e\u91cd\u7528\u73b0\u6709\u6216\u5bfc\u51fa\u7684\u8bbe\u7f6e .ini - \u7528\u4e8e\u91cd\u7528\u65e7\u8bbe\u7f6e .py - \u4e0d\u63a8\u8350 \u4f46\u652f\u6301\u5411\u540e\u517c\u5bb9 .env - \u7528\u4e8e\u81ea\u52a8\u52a0\u8f7d\u73af\u5883\u53d8\u91cf\u3002","title":"\u914d\u7f6e\u6587\u4ef6"},{"location":"guidelines/configuration/#_1","text":"\u914d\u7f6e\u662f\u4e00\u4e2a\u9879\u76ee\u7684\u6838\u5fc3\u9a71\u52a8\uff0c\u53ef\u4ee5\u5728\u4e0d\u66f4\u6539\u6e90\u4ee3\u7801\u6216\u51cf\u5c11\u6e90\u4ee3\u7801\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\u5feb\u901f\u8c03\u6574\u9879\u76ee\u7684\u8fd0\u884c\u3002 \u4f7f\u7528\u4e2d\u5fc3\u914d\u7f6e\u9a71\u52a8\u9879\u76ee\uff0c\u80fd\u8ba9\u9879\u76ee\u7684\u4f7f\u7528\u66f4\u52a0\u7075\u6d3b\uff0c\u8fd0\u7ef4\u5de5\u4f5c\u66f4\u8f7b\u677e\u3002 \u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u91cd\u7528\u6027\uff0c\u4e0d\u518d\u6bcf\u6b21\u90fd\u53bb\u4fee\u6539\u4ee3\u7801\u5185\u90e8 \u8fd9\u610f\u5473\u7740\u5176\u4ed6\u4e0d\u592a\u61c2\u4f60\u4ee3\u7801\u5185\u90e8\u7684\u4eba\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4f60\u7684\u9879\u76ee\uff0c\u53ea\u7528\u6839\u636e\u9700\u6c42\u66f4\u6539\u914d\u7f6e\u5373\u53ef \u6709\u5229\u4e8e\u56e2\u961f\u534f\u4f5c \u6709\u5229\u4e8e\u5b89\u5168\u6570\u636e/\u79d8\u5bc6\u6570\u636e\u7684\u7ba1\u7406 \u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u9a71\u52a8\u9879\u76ee\u7684\u76f8\u5173\u57fa\u7840\u914d\u7f6e\uff0c\u5982\u9ed8\u8ba4 data \u548c logs \u6587\u4ef6\u5939\u7684\u6240\u5728\u8def\u5f84\u548c\u540d\u79f0\uff0cWeb\u9879\u76ee\u76f8\u5173\u914d\u7f6e\uff0c\u6570\u636e\u5e93\u8fde\u63a5\u76f8\u5173\u914d\u7f6e\uff0c\u7b2c\u4e09\u65b9\u5e93\u4f7f\u7528\u914d\u7f6e\u7b49\u3002\u8fd9\u4e9b\u4e0d\u540c\u914d\u7f6e\u53ef\u4ee5\u5206\u522b\u5b58\u653e\u5728\u4e0d\u540c\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u4e14\u6587\u4ef6\u7c7b\u578b\u53ef\u4ee5\u591a\u79cd\u591a\u6837\uff0c\u5982 .py \uff0c .cfg \uff0c .ini \uff0c .yaml \uff0c .json \uff0c .txt \u7b49\u3002\u914d\u7f6e\u6587\u4ef6\u4f7f\u7528\u65b9\u6cd5\u53c2\u8003\u8fd9\u4e2a \u535a\u5ba2 \u3002","title":"\u914d\u7f6e\u6587\u4ef6"},{"location":"guidelines/configuration/#_2","text":"\u53c2\u8003\uff1a source \u5728\u5f88\u591a\u5f00\u6e90\u9879\u76ee\u6216\u8005\u4e00\u4e9b\u8f83\u5c0f\u7684\u9879\u76ee\u4e2d\u5e38\u89c1\u5bf9\u914d\u7f6e\u6587\u4ef6\u7684\u4f7f\u7528\u505a\u6cd5\u662f\uff1a \u914d\u7f6e\u6587\u4ef6\u5199\u5728\u4e00\u4e2a\u6216\u591a\u4e2apython\u6587\u4ef6\u4e2d\uff0c\u6bd4\u5982\u4e0a\u6587\u7684 settings.py \u3002\u9879\u76ee\u4e2d\u54ea\u4e2a\u6a21\u5757\u7528\u5230\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u5c31\u76f4\u63a5\u901a\u8fc7 import settings \u8fd9\u79cd\u5f62\u5f0f\u6765\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u914d\u7f6e\u3002 ## Settings # File config SOURCE_FILE = '/tmp/foo.txt' # Log config LOG_LEVEL = 'DEBUG' LOG_FORMAT = ' %(asctime)s - %(name)s - %(levelname)s - %(message)s ' ## main import config import logging logging . basicConfig ( level = settings . LOG_LEVEL , format = settings . LOG_FORMAT ) \u8fd9\u79cd\u505a\u6cd5\u4e0d\u592a\u597d\u7684\u65b9\u9762: - \u5217\u8868\u8fd9\u8ba9\u5355\u5143\u6d4b\u8bd5\u53d8\u5f97\u56f0\u96be\uff08\u56e0\u4e3a\u6a21\u5757\u5185\u90e8\u4f9d\u8d56\u4e86\u5916\u90e8\u914d\u7f6e\uff09 - \u53e6\u4e00\u65b9\u9762\u914d\u7f6e\u6587\u4ef6\u4f5c\u4e3a\u7528\u6237\u63a7\u5236\u7a0b\u5e8f\u7684\u63a5\u53e3\uff0c\u5e94\u5f53\u53ef\u4ee5\u7531\u7528\u6237\u81ea\u7531\u6307\u5b9a\u8be5\u6587\u4ef6\u7684\u8def\u5f84\u3002 - \u7a0b\u5e8f\u7ec4\u4ef6\u53ef\u590d\u7528\u6027\u592a\u5dee\uff0c\u56e0\u4e3a\u8fd9\u79cd\u8d2f\u7a7f\u6240\u6709\u6a21\u5757\u7684\u4ee3\u7801\u786c\u7f16\u7801\u65b9\u5f0f\uff0c\u4f7f\u5f97\u5927\u90e8\u5206\u6a21\u5757\u90fd\u4f9d\u8d56 conf.py \u8fd9\u4e2a\u6587\u4ef6\u3002","title":"\u9759\u6001\u914d\u7f6e"},{"location":"guidelines/configuration/#_3","text":"\u6240\u4ee5\uff0c\u66f4\u597d\u7684\u65b9\u5f0f\u662f: - \u6a21\u5757\u7684\u914d\u7f6e\u90fd\u662f\u53ef\u4ee5\u7075\u6d3b\u914d\u7f6e\u7684\uff0c\u4e0d\u53d7\u5916\u90e8\u914d\u7f6e\u6587\u4ef6\u7684\u5f71\u54cd - \u7a0b\u5e8f\u7684\u914d\u7f6e\u4e5f\u662f\u53ef\u4ee5\u7075\u6d3b\u63a7\u5236\u7684\u3002 \u5e38\u89c1\u7684\u914d\u7f6e\u7ba1\u7406\u5de5\u5177\u6709\uff1a cofigureparser \uff08python\u5185\u7f6e\uff09\uff0c Dynaconf \uff0c python-dotenv \uff0c **Hydra**\u7b49\u3002 Dynaconf \uff08 pypi \uff0c \u5b98\u7f51 \uff09\u662f\u4e00\u4e2a\u7075\u6d3b\u7684\u4e2d\u5fc3\u914d\u7f6e\u7ba1\u7406\u5de5\u5177\uff0c\u80fd\u591f\u4ece\u4e0d\u540c\u7684\u914d\u7f6e\u6570\u636e\u5b58\u50a8\u65b9\u5f0f\u4e2d\u8bfb\u53d6\u914d\u7f6e\uff0c\u4f8b\u5982 .py \uff0c .redis \uff0c .ini \uff0c .json \u6587\u4ef6\uff0c\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u7b49\u7b49\u3002 \u5176\u5177\u6709\u5982\u4e0b\u7279\u70b9\uff1a \u52a0\u8f7d\u591a\u4e2a\u914d\u7f6e\u6e90 \u914d\u7f6e\u5206\u5c42 Django Flask \u6269\u5c55 \u652f\u6301 Redis \u548c Vault \u5728\u9879\u76ee\u4e2d\u65b0\u5efa\u914d\u7f6e\u6587\u4ef6 settings.yml ## setting foo : 1 bar : 2 \u65b0\u5efa\u914d\u7f6e\u6a21\u5757 config.py ## config.py from dynaconf import Dynaconf settings = Dynaconf ( settings_files = [ 'settings.yml' ]) \u65b0\u5efa\u4e00\u4e2a app.py \u6587\u4ef6\uff0c\u4f7f\u7528\u914d\u7f6e ## app.py from config import settings print ( settings . FOO ) print ( settings . BAR ) \u7136\u540e\u8fd0\u884c python app.py \u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u80fd\u591f\u81ea\u52a8\u83b7\u53d6 settings.yml \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u503c\u3002 \u589e\u52a0\u672c\u5730\u914d\u7f6e\u6587\u4ef6 settings.local.yml ## setting.local foo : 10 bar : 20 \u518d\u6b21\u8fd0\u884c python app.py \uff0c\u7a0b\u5e8f\u4f1a\u81ea\u52a8\u83b7\u53d6 settings.local.yml \u3002 \u8fd9\u662f\u56e0\u4e3a Dynaconf \u5728\u521d\u59cb\u5316\u662f\u4f20\u5165\u4e86\u914d\u7f6e\u6587\u4ef6\u683c\u5f0f\u4e3a settings.yml \uff0c\u5728\u52a0\u8f7d\u914d\u7f6e\u65f6\uff0c\u4f1a\u540c\u65f6\u67e5\u627e settings.local.yml \u7684\u914d\u7f6e\u6587\u4ef6\u3002 \u5e76\u5c06\u4e24\u4e2a\u914d\u7f6e\u6587\u4ef6\u7684\u5185\u5bb9\u5408\u5e76\uff0c\u5982\u679c\u5b58\u5728\u76f8\u540c\u53d8\u91cf\uff0c settings.local.yml \u4f1a\u8986\u76d6 settings.yml \u4e2d\u7684\u914d\u7f6e\u3002","title":"\u52a8\u6001\u914d\u7f6e"},{"location":"guidelines/configuration/#_4","text":".toml - Dynaconf \u9ed8\u8ba4\u548c\u63a8\u8350\u7684\u683c\u5f0f. .yaml|.yml - \u63a8\u8350\u7528\u4e8eDjango\u9879\u76ee. .json - \u7528\u4e8e\u91cd\u7528\u73b0\u6709\u6216\u5bfc\u51fa\u7684\u8bbe\u7f6e .ini - \u7528\u4e8e\u91cd\u7528\u65e7\u8bbe\u7f6e .py - \u4e0d\u63a8\u8350 \u4f46\u652f\u6301\u5411\u540e\u517c\u5bb9 .env - \u7528\u4e8e\u81ea\u52a8\u52a0\u8f7d\u73af\u5883\u53d8\u91cf\u3002","title":"\u652f\u6301\u7684\u6587\u4ef6\u7c7b\u578b"},{"location":"guidelines/document/","text":"\u6587\u6863\u7ba1\u7406 \u00b6 \u9879\u76ee\u6587\u6863\u7528\u6765\u8bf4\u660e\u548c\u8bb0\u5f55\u9879\u76ee\u7684\u4fe1\u606f\uff0c\u6709\u52a9\u4e8e\u5f00\u53d1\u4eba\u5458\u3001\u7ba1\u7406\u4eba\u5458\u3001\u4f7f\u7528\u8005\u7684\u4ea4\u6d41\u548c\u6c9f\u901a\u3002\u5728 Python \u9879\u76ee\u4e2d \u4e00\u822c\u901a\u8fc7 Mkdocs \u548c sphinx \u6765 \u6784\u5efa\u9879\u76ee\u6587\u6863\u3002\u4e24\u8005\u90fd\u652f\u6301 markdown \u6807\u8bb0\u7684\u6587\u4ef6\uff0c\u4f46\u540e\u8005\u4e5f\u652f\u6301 reStructuredText \u6807\u8bb0\u6587\u4ef6\u3002 Readme \u00b6 **Readme**\u4e0e\u6587\u6863\u7ba1\u7406\u4e2d\u7684\u6587\u6863\u662f\u4e0d\u540c\u7684\uff0c\u5404\u81ea\u6709\u5404\u81ea\u7684\u4f5c\u7528\u3002 Readme \uff1a\u8fd9\u5e94\u8be5\u662f\u6bcf\u4e2a\u9879\u76ee\u90fd\u5e94\u8be5\u6709\u7684\u4e00\u4e2a\u6587\u4ef6\uff0c\u76ee\u7684\u662f\u80fd\u7b80\u8981\u63cf\u8ff0\u8be5\u9879\u76ee\u7684\u4fe1\u606f\uff0c\u8ba9\u8bfb\u8005\u5feb\u901f\u4e86\u89e3\u8fd9\u4e2a\u9879\u76ee\u3002Readme\u8d1f\u8d23\u7b80\u5355\u4ecb\u7ecd\u9879\u76ee\u80cc\u666f\u3001\u8f6f\u4ef6\u529f\u80fd\u3001\u7b80\u5355\u7684\u4f7f\u7528\u8bf4\u660e\u3001\u5e38\u89c1\u95ee\u9898\u7b49\u7b49\u4fe1\u606f\u3002 \u6587\u6863\uff08docs\uff09\uff1a\u6587\u6863\u8d1f\u8d23\u8bb0\u5f55\u6574\u4e2a\u9879\u76ee\u7684\u5177\u4f53\u4fe1\u606f\uff0c\u5305\u62ec\u9879\u76ee\u7ed3\u6784\u3001\u6a21\u5757\u529f\u80fd\u5b9e\u73b0\u3001\u5f00\u53d1\u65e5\u5fd7\u3001\u7248\u672c\u63a7\u5236\u7b49\u7b49\u3002 MkDocs \u00b6 MkDocs\u662f\u4e00\u4e2a\u5feb\u901f\u3001\u7b80\u5355\u3001\u534e\u4e3d\u7684\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u9002\u7528\u4e8e\u6784\u5efa\u9879\u76ee\u6587\u6863\u3002\u6587\u6863\u6e90\u6587\u4ef6\u4ee5Markdown\u7f16\u5199\uff0c\u5e76\u4f7f\u7528\u4e00\u4e2aYAML\u6587\u4ef6\u6765\u8fdb\u884c\u914d\u7f6e\u3002 MkDocs\u751f\u6210\u5b8c\u5168\u9759\u6001\u7684HTML\u7f51\u7ad9\uff0c\u4f60\u53ef\u4ee5\u5c06\u5176\u90e8\u7f72\u5230GitHub pages\u3001Amzzon S3\u6216\u4f60\u81ea\u5df1\u9009\u62e9\u7684\u5176\u5b83\u4efb\u610f\u5730\u65b9\u3002 MkDocs\u6709\u4e00\u5806\u5f88\u597d\u770b\u7684\u4e3b\u9898\u3002 \u5b98\u65b9\u5185\u7f6e\u4e86\u4e24\u4e2a\u4e3b\u9898\uff1a mkdocs \u548c readthedocs \uff0c \u4e5f\u53ef\u4ee5\u4ece MkDocs wiki \u4e2d\u9009\u62e9\u7b2c\u4e09\u65b9\u4e3b\u9898\uff0c \u6216\u8005 \u81ea\u5b9a\u4e49\u4e3b\u9898 \u3002\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93 mkdocs-material \u6765\u4f7f\u7528\u66f4\u591a\u66f4\u597d\u770b\u7684\u4e3b\u9898\u5e93\u4ee5\u53ca\u66f4\u5f3a\u5927\u7684\u63d2\u4ef6\u3002 MkDocs\u5b98\u7f51 MkDocs\u5b98\u65b9\u4e2d\u6587\u6587\u6863 \u7279\u70b9\uff1a YAML \u5355\u6587\u4ef6\u914d\u7f6e \u751f\u6210\u9759\u6001\u7ad9\u70b9 \u652f\u6301 markdown \u652f\u6301\u81ea\u5b9a\u4e49\u4e3b\u9898 \u652f\u6301 markdown \u6269\u5c55\u6807\u8bb0 \u652f\u6301\u63d2\u4ef6 \u6ce8\uff1a \u672c\u7f51\u7ad9\u4e5f\u662f\u4f7f\u7528\u901a\u8fc7\u7f16\u5199MarkDown\u6587\u4ef6\uff0c\u7136\u540e\u4f7f\u7528MkDocs\u4e0emkdocs-material\u751f\u6210\u7684\u9759\u6001\u7f51\u7ad9\u3002 Sphinx \u00b6 Sphinx \u662f\u4e00\u4e2a \u6587\u6863\u751f\u6210\u5668 \uff0c\u60a8\u4e5f\u53ef\u4ee5\u628a\u5b83\u770b\u6210\u4e00\u79cd\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u5c06\u4e00\u7ec4\u7eaf\u6587\u672c\u6e90\u6587\u4ef6\u8f6c\u6362\u6210\u5404\u79cd\u8f93\u51fa\u683c\u5f0f\uff0c\u5e76\u4e14\u81ea\u52a8\u751f\u6210\u4ea4\u53c9\u5f15\u7528\u3001\u7d22\u5f15\u7b49\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u60a8\u7684\u76ee\u5f55\u5305\u542b\u4e00\u5806 reStructuredText \u6216 Markdown \u6587\u6863\uff0c\u90a3\u4e48 Sphinx \u5c31\u80fd\u751f\u6210\u4e00\u7cfb\u5217HTML\u6587\u4ef6\uff0cPDF\u6587\u4ef6\uff08\u901a\u8fc7LaTeX\uff09\uff0c\u624b\u518c\u9875\u7b49\u3002 Sphinx \u4e13\u6ce8\u4e8e\u6587\u6863\uff0c\u5c24\u5176\u662f handwritten documentation \uff0c\u7136\u800c\uff0cSphinx \u4e5f\u53ef\u4ee5\u7528\u6765\u751f\u6210\u535a\u5ba2\u3001\u4e3b\u9875\u751a\u81f3\u4e66\u7c4d\u3002Sphinx \u7684\u5927\u90e8\u5206\u529f\u80fd\u6765\u81ea\u4e8e reStructuredText \uff0c\u5b83\u662f\u4e00\u79cd\u7eaf\u6587\u672c\u6807\u8bb0\u683c\u5f0f\uff0c\u6709\u7740\u4e30\u5bcc\u7684\u529f\u80fd\u548c \u663e\u8457\u7684\u6269\u5c55\u80fd\u529b \u3002\u4f8b\u5982 Google Python\u98ce\u683c\u6307\u5357\u4e2d\u6587\u7248 \u5c31\u662f\u4f7f\u7528 Sphinx \u4e0e reStructuredText \u6587\u6863\u751f\u6210\u7684\u7f51\u7ad9\u3002 Sphinx\u5b98\u7f51 Sphinx\u5b98\u65b9\u4e2d\u6587\u6587\u6863 \u7279\u70b9\uff1a \u5355\u4e2a Python \u6587\u4ef6\u914d\u7f6e \u751f\u6210 HTML \u3001 ePub \u7b49\u591a\u79cd\u683c\u5f0f \u652f\u6301 markdown \u548c reStructuredText \u652f\u6301\u81ea\u5b9a\u4e49\u4e3b\u9898 \u652f\u6301\u6269\u5c55","title":"\u6587\u6863\u7ba1\u7406"},{"location":"guidelines/document/#_1","text":"\u9879\u76ee\u6587\u6863\u7528\u6765\u8bf4\u660e\u548c\u8bb0\u5f55\u9879\u76ee\u7684\u4fe1\u606f\uff0c\u6709\u52a9\u4e8e\u5f00\u53d1\u4eba\u5458\u3001\u7ba1\u7406\u4eba\u5458\u3001\u4f7f\u7528\u8005\u7684\u4ea4\u6d41\u548c\u6c9f\u901a\u3002\u5728 Python \u9879\u76ee\u4e2d \u4e00\u822c\u901a\u8fc7 Mkdocs \u548c sphinx \u6765 \u6784\u5efa\u9879\u76ee\u6587\u6863\u3002\u4e24\u8005\u90fd\u652f\u6301 markdown \u6807\u8bb0\u7684\u6587\u4ef6\uff0c\u4f46\u540e\u8005\u4e5f\u652f\u6301 reStructuredText \u6807\u8bb0\u6587\u4ef6\u3002","title":"\u6587\u6863\u7ba1\u7406"},{"location":"guidelines/document/#readme","text":"**Readme**\u4e0e\u6587\u6863\u7ba1\u7406\u4e2d\u7684\u6587\u6863\u662f\u4e0d\u540c\u7684\uff0c\u5404\u81ea\u6709\u5404\u81ea\u7684\u4f5c\u7528\u3002 Readme \uff1a\u8fd9\u5e94\u8be5\u662f\u6bcf\u4e2a\u9879\u76ee\u90fd\u5e94\u8be5\u6709\u7684\u4e00\u4e2a\u6587\u4ef6\uff0c\u76ee\u7684\u662f\u80fd\u7b80\u8981\u63cf\u8ff0\u8be5\u9879\u76ee\u7684\u4fe1\u606f\uff0c\u8ba9\u8bfb\u8005\u5feb\u901f\u4e86\u89e3\u8fd9\u4e2a\u9879\u76ee\u3002Readme\u8d1f\u8d23\u7b80\u5355\u4ecb\u7ecd\u9879\u76ee\u80cc\u666f\u3001\u8f6f\u4ef6\u529f\u80fd\u3001\u7b80\u5355\u7684\u4f7f\u7528\u8bf4\u660e\u3001\u5e38\u89c1\u95ee\u9898\u7b49\u7b49\u4fe1\u606f\u3002 \u6587\u6863\uff08docs\uff09\uff1a\u6587\u6863\u8d1f\u8d23\u8bb0\u5f55\u6574\u4e2a\u9879\u76ee\u7684\u5177\u4f53\u4fe1\u606f\uff0c\u5305\u62ec\u9879\u76ee\u7ed3\u6784\u3001\u6a21\u5757\u529f\u80fd\u5b9e\u73b0\u3001\u5f00\u53d1\u65e5\u5fd7\u3001\u7248\u672c\u63a7\u5236\u7b49\u7b49\u3002","title":"Readme"},{"location":"guidelines/document/#mkdocs","text":"MkDocs\u662f\u4e00\u4e2a\u5feb\u901f\u3001\u7b80\u5355\u3001\u534e\u4e3d\u7684\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668\uff0c\u9002\u7528\u4e8e\u6784\u5efa\u9879\u76ee\u6587\u6863\u3002\u6587\u6863\u6e90\u6587\u4ef6\u4ee5Markdown\u7f16\u5199\uff0c\u5e76\u4f7f\u7528\u4e00\u4e2aYAML\u6587\u4ef6\u6765\u8fdb\u884c\u914d\u7f6e\u3002 MkDocs\u751f\u6210\u5b8c\u5168\u9759\u6001\u7684HTML\u7f51\u7ad9\uff0c\u4f60\u53ef\u4ee5\u5c06\u5176\u90e8\u7f72\u5230GitHub pages\u3001Amzzon S3\u6216\u4f60\u81ea\u5df1\u9009\u62e9\u7684\u5176\u5b83\u4efb\u610f\u5730\u65b9\u3002 MkDocs\u6709\u4e00\u5806\u5f88\u597d\u770b\u7684\u4e3b\u9898\u3002 \u5b98\u65b9\u5185\u7f6e\u4e86\u4e24\u4e2a\u4e3b\u9898\uff1a mkdocs \u548c readthedocs \uff0c \u4e5f\u53ef\u4ee5\u4ece MkDocs wiki \u4e2d\u9009\u62e9\u7b2c\u4e09\u65b9\u4e3b\u9898\uff0c \u6216\u8005 \u81ea\u5b9a\u4e49\u4e3b\u9898 \u3002\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93 mkdocs-material \u6765\u4f7f\u7528\u66f4\u591a\u66f4\u597d\u770b\u7684\u4e3b\u9898\u5e93\u4ee5\u53ca\u66f4\u5f3a\u5927\u7684\u63d2\u4ef6\u3002 MkDocs\u5b98\u7f51 MkDocs\u5b98\u65b9\u4e2d\u6587\u6587\u6863 \u7279\u70b9\uff1a YAML \u5355\u6587\u4ef6\u914d\u7f6e \u751f\u6210\u9759\u6001\u7ad9\u70b9 \u652f\u6301 markdown \u652f\u6301\u81ea\u5b9a\u4e49\u4e3b\u9898 \u652f\u6301 markdown \u6269\u5c55\u6807\u8bb0 \u652f\u6301\u63d2\u4ef6 \u6ce8\uff1a \u672c\u7f51\u7ad9\u4e5f\u662f\u4f7f\u7528\u901a\u8fc7\u7f16\u5199MarkDown\u6587\u4ef6\uff0c\u7136\u540e\u4f7f\u7528MkDocs\u4e0emkdocs-material\u751f\u6210\u7684\u9759\u6001\u7f51\u7ad9\u3002","title":"MkDocs"},{"location":"guidelines/document/#sphinx","text":"Sphinx \u662f\u4e00\u4e2a \u6587\u6863\u751f\u6210\u5668 \uff0c\u60a8\u4e5f\u53ef\u4ee5\u628a\u5b83\u770b\u6210\u4e00\u79cd\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u5c06\u4e00\u7ec4\u7eaf\u6587\u672c\u6e90\u6587\u4ef6\u8f6c\u6362\u6210\u5404\u79cd\u8f93\u51fa\u683c\u5f0f\uff0c\u5e76\u4e14\u81ea\u52a8\u751f\u6210\u4ea4\u53c9\u5f15\u7528\u3001\u7d22\u5f15\u7b49\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u60a8\u7684\u76ee\u5f55\u5305\u542b\u4e00\u5806 reStructuredText \u6216 Markdown \u6587\u6863\uff0c\u90a3\u4e48 Sphinx \u5c31\u80fd\u751f\u6210\u4e00\u7cfb\u5217HTML\u6587\u4ef6\uff0cPDF\u6587\u4ef6\uff08\u901a\u8fc7LaTeX\uff09\uff0c\u624b\u518c\u9875\u7b49\u3002 Sphinx \u4e13\u6ce8\u4e8e\u6587\u6863\uff0c\u5c24\u5176\u662f handwritten documentation \uff0c\u7136\u800c\uff0cSphinx \u4e5f\u53ef\u4ee5\u7528\u6765\u751f\u6210\u535a\u5ba2\u3001\u4e3b\u9875\u751a\u81f3\u4e66\u7c4d\u3002Sphinx \u7684\u5927\u90e8\u5206\u529f\u80fd\u6765\u81ea\u4e8e reStructuredText \uff0c\u5b83\u662f\u4e00\u79cd\u7eaf\u6587\u672c\u6807\u8bb0\u683c\u5f0f\uff0c\u6709\u7740\u4e30\u5bcc\u7684\u529f\u80fd\u548c \u663e\u8457\u7684\u6269\u5c55\u80fd\u529b \u3002\u4f8b\u5982 Google Python\u98ce\u683c\u6307\u5357\u4e2d\u6587\u7248 \u5c31\u662f\u4f7f\u7528 Sphinx \u4e0e reStructuredText \u6587\u6863\u751f\u6210\u7684\u7f51\u7ad9\u3002 Sphinx\u5b98\u7f51 Sphinx\u5b98\u65b9\u4e2d\u6587\u6587\u6863 \u7279\u70b9\uff1a \u5355\u4e2a Python \u6587\u4ef6\u914d\u7f6e \u751f\u6210 HTML \u3001 ePub \u7b49\u591a\u79cd\u683c\u5f0f \u652f\u6301 markdown \u548c reStructuredText \u652f\u6301\u81ea\u5b9a\u4e49\u4e3b\u9898 \u652f\u6301\u6269\u5c55","title":"Sphinx"},{"location":"guidelines/logging/","text":"\u65e5\u5fd7 \u00b6 \u53c2\u8003\uff1a source \u65e5\u5fd7\u662f\u5bf9\u8f6f\u4ef6\u6267\u884c\u65f6\u6240\u53d1\u751f\u4e8b\u4ef6\u7684\u4e00\u79cd\u8ffd\u8e2a\u65b9\u5f0f\u3002\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u5bf9\u4ed6\u4eec\u7684\u4ee3\u7801\u6dfb\u52a0\u65e5\u5fd7\u8c03\u7528\uff0c\u501f\u6b64\u6765\u6307\u793a\u67d0\u4e8b\u4ef6\u7684\u53d1\u751f\u3002 \u4e00\u4e2a\u4e8b\u4ef6\u901a\u8fc7\u4e00\u4e9b\u5305\u542b\u53d8\u91cf\u6570\u636e\u7684\u63cf\u8ff0\u4fe1\u606f\u6765\u63cf\u8ff0\uff08\u6bd4\u5982\uff1a\u6bcf\u4e2a\u4e8b\u4ef6\u53d1\u751f\u65f6\u7684\u6570\u636e\u90fd\u662f\u4e0d\u540c\u7684\uff09\u3002\u5f00\u53d1\u8005\u8fd8\u4f1a\u533a\u5206\u4e8b\u4ef6\u7684\u91cd\u8981\u6027\uff0c \u91cd\u8981\u6027\u4e5f\u88ab\u79f0\u4e3a \u7b49\u7ea7 \u6216 \u4e25\u91cd\u6027 \u3002\u6709\u4e00\u4e2a\u597d\u7684\u65e5\u5fd7\u5b9e\u8df5\uff0c\u80fd\u8ba9\u5f00\u53d1\u8c03\u8bd5\u6d41\u7a0b\u66f4\u987a\u7545\uff0c\u51fa\u73b0\u95ee\u9898\u80fd\u66f4\u5feb\u901f\u7cbe\u51c6\u5b9a\u4f4d\u3002 \u65e5\u5fd7 \u6a21\u5757\u81ea2.3\u7248\u672c\u5f00\u59cb\u4fbf\u662fPython\u6807\u51c6\u5e93\u7684\u4e00\u90e8\u5206\u3002\u5b83\u88ab\u7b80\u6d01\u7684\u63cf\u8ff0\u5728 PEP 282 \u3002 \u65e5\u5fd7\u7684\u4e24\u4e2a\u76ee\u7684\uff1a \u8bca\u65ad\u65e5\u5fd7 \u8bb0\u5f55\u4e0e\u5e94\u7528\u7a0b\u5e8f\u64cd\u4f5c\u76f8\u5173\u7684\u65e5\u5fd7\u3002\u4f8b\u5982\uff0c\u7528\u6237\u9047\u5230\u7684\u62a5\u9519\u4fe1\u606f\uff0c \u53ef\u901a\u8fc7\u641c\u7d22\u8bca\u65ad\u65e5\u5fd7\u83b7\u5f97\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002 \u5ba1\u8ba1\u65e5\u5fd7 \u4e3a\u5546\u4e1a\u5206\u6790\u800c\u8bb0\u5f55\u7684\u65e5\u5fd7\u3002\u4ece\u5ba1\u8ba1\u65e5\u5fd7\u4e2d\uff0c\u53ef\u63d0\u53d6\u7528\u6237\u7684\u4ea4\u6613\u4fe1\u606f\uff0c \u5e76\u7ed3\u5408\u5176\u4ed6\u7528\u6237\u8d44\u6599\u6784\u6210\u7528\u6237\u62a5\u544a\u6216\u8005\u7528\u6765\u4f18\u5316\u5546\u4e1a\u76ee\u6807\u3002 \u6253\u5370\uff08Print\uff09 \u00b6 \u5f53\u9700\u8981\u5728\u547d\u4ee4\u884c\u5e94\u7528\u4e2d\u663e\u793a\u5e2e\u52a9\u6587\u6863\u65f6\uff0c print \u662f\u4e00\u4e2a\u76f8\u5bf9\u4e8e\u65e5\u5fd7\u66f4\u597d\u7684\u9009\u62e9\u3002 \u800c\u5728\u5176\u4ed6\u65f6\u5019\uff0c\u65e5\u5fd7\u603b\u80fd\u4f18\u4e8e print \uff0c\u7406\u7531\u5982\u4e0b\uff1a \u65e5\u5fd7\u4e8b\u4ef6\u4ea7\u751f\u7684 \u65e5\u5fd7\u8bb0\u5f55 \uff0c\u5305\u542b\u6e05\u6670\u53ef\u7528\u7684\u8bca\u65ad\u4fe1\u606f\uff0c\u5982\u6587\u4ef6\u540d\u79f0\u3001\u8def\u5f84\u3001\u51fd\u6570\u540d\u548c\u884c\u53f7\u7b49\u3002 \u5305\u542b\u65e5\u5fd7\u6a21\u5757\u7684\u5e94\u7528\uff0c\u9ed8\u8ba4\u53ef\u901a\u8fc7\u6839\u8bb0\u5f55\u5668\u5bf9\u5e94\u7528\u7684\u65e5\u5fd7\u6d41\u8fdb\u884c\u8bbf\u95ee\uff0c\u9664\u975e\u60a8\u5c06\u65e5\u5fd7\u8fc7\u6ee4\u4e86\u3002 \u53ef\u901a\u8fc7 logging.Logger.setLevel() \u65b9\u6cd5\u6709\u9009\u62e9\u5730\u8bb0\u5f55\u65e5\u5fd7\uff0c \u6216\u53ef\u901a\u8fc7\u8bbe\u7f6e logging.Logger.disabled \u5c5e\u6027\u4e3a True \u6765\u7981\u7528\u3002 \u914d\u7f6e\u65e5\u5fd7 \u00b6 \u4f7f\u7528**INI**\u683c\u5f0f\u6587\u4ef6\uff1a \u4f18\u70b9 : \u4f7f\u7528 logging.config.listen() \u51fd\u6570\u76d1\u542csocket\uff0c\u53ef\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u66f4\u65b0\u914d\u7f6e \u7f3a\u70b9 : \u901a\u8fc7\u6e90\u7801\u63a7\u5236\u65e5\u5fd7\u914d\u7f6e\u8f83\u5c11\uff08 \u4f8b\u5982 \u5b50\u7c7b\u5316\u5b9a\u5236\u7684\u8fc7\u6ee4\u5668\u6216\u8bb0\u5f55\u5668\uff09\u3002 \u4f7f\u7528**\u5b57\u5178**\u6216**JSON**\u683c\u5f0f\u6587\u4ef6\uff1a \u4f18\u70b9 : \u9664\u4e86\u53ef\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u66f4\u65b0\uff0c\u5728Python 2.6\u4e4b\u540e\uff0c\u8fd8\u53ef\u901a\u8fc7 json \u6a21\u5757\u4ece\u5176\u5b83\u6587\u4ef6\u4e2d\u5bfc\u5165\u914d\u7f6e\u3002 \u7f3a\u70b9 : \u5f88\u96be\u901a\u8fc7\u6e90\u7801\u63a7\u5236\u65e5\u5fd7\u914d\u7f6e\u3002 \u4f7f\u7528**\u6e90\u7801**\uff1a \u4f18\u70b9 : \u5bf9\u914d\u7f6e\u7edd\u5bf9\u7684\u63a7\u5236\u3002 \u7f3a\u70b9 : \u5bf9\u914d\u7f6e\u7684\u66f4\u6539\u9700\u8981\u5bf9\u6e90\u7801\u8fdb\u884c\u4fee\u6539\u3002 \u901a\u8fc7INI\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u7684\u4f8b\u5b50 \u00b6 \u6211\u4eec\u5047\u8bbe\u6587\u4ef6\u540d\u4e3a logging_config.ini \u3002\u5173\u4e8e\u6587\u4ef6\u683c\u5f0f\u7684\u66f4\u591a\u7ec6\u8282\uff0c\u8bf7\u53c2\u89c1 \u65e5\u5fd7\u6307\u5357 \u4e2d\u7684 \u65e5\u5fd7\u914d\u7f6e \u90e8\u5206\u3002 [loggers] keys = root [handlers] keys = stream_handler [formatters] keys = formatter [logger_root] level = DEBUG handlers = stream_handler [handler_stream_handler] class = StreamHandler level = DEBUG formatter = formatter args = (sys.stderr,) [formatter_formatter] format = %(asctime)s %(name)-12s %(levelname)-8s %(message)s \u7136\u540e\u5728\u6e90\u7801\u4e2d\u8c03\u7528 logging.config.fileConfig() \u65b9\u6cd5\uff1a import logging from logging.config import fileConfig fileConfig ( 'logging_config.ini' ) logger = logging . getLogger () logger . debug ( 'often makes a very good meal of %s ' , 'visiting tourists' ) \u901a\u8fc7\u5b57\u5178\u8fdb\u884c\u914d\u7f6e\u7684\u4f8b\u5b50 \u00b6 Python 2.7\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b57\u5178\u5b9e\u73b0\u8be6\u7ec6\u914d\u7f6e\u3002 PEP 391 \u5305\u542b\u4e86\u4e00\u7cfb\u5217\u5b57\u5178\u914d\u7f6e\u7684\u5f3a\u5236\u548c \u975e\u5f3a\u5236\u7684\u5143\u7d20\u3002 import logging from logging.config import dictConfig logging_config = dict ( version = 1 , formatters = { 'f' : { 'format' : ' %(asctime)s %(name)-12s %(levelname)-8s %(message)s ' } }, handlers = { 'h' : { 'class' : 'logging.StreamHandler' , 'formatter' : 'f' , 'level' : logging . DEBUG } }, root = { 'handlers' : [ 'h' ], 'level' : logging . DEBUG , }, ) dictConfig ( logging_config ) logger = logging . getLogger () logger . debug ( 'often makes a very good meal of %s ' , 'visiting tourists' ) \u901a\u8fc7\u6e90\u7801\u76f4\u63a5\u914d\u7f6e\u7684\u4f8b\u5b50 \u00b6 import logging logger = logging . getLogger () handler = logging . StreamHandler () formatter = logging . Formatter ( ' %(asctime)s %(name)-12s %(levelname)-8s %(message)s ' ) handler . setFormatter ( formatter ) logger . addHandler ( handler ) logger . setLevel ( logging . DEBUG ) logger . debug ( 'often makes a very good meal of %s ' , 'visiting tourists' ) logger\u6587\u4ef6\u793a\u4f8b \u00b6 # logger.py # \u521b\u5efaLogger\u5bf9\u8c61\u5b9e\u4f8blogger\uff0c\u7136\u540e\u5176\u4ed6\u6a21\u5757\u53ea\u9700\u8981 from logger import logger # \u901a\u8fc7logger.info(\"\")\u65b9\u6cd5\u8c03\u7528 def create_logger ( log_file , level = logging . DEBUG ): # logging.basicConfig\u51fd\u6570\u5bf9\u65e5\u5fd7\u7684\u8f93\u51fa\u683c\u5f0f\u53ca\u65b9\u5f0f\u505a\u76f8\u5173\u914d\u7f6e logging . basicConfig ( level = level , format = ' %(asctime)s - %(filename)s [line: %(lineno)d ] - %(levelname)s : %(message)s ' ) log = logging . getLogger () log . setLevel ( logging . INFO ) if not os . path . exists ( os . path . dirname ( log_file )): os . makedirs ( os . path . dirname ( log_file )) # \u521b\u5efa\u4e00\u4e2ahandler\uff0c\u7528\u4e8e\u5199\u5165\u65e5\u5fd7\u6587\u4ef6 fh = logging . FileHandler ( log_file , mode = 'w' ) fh . setLevel ( level ) # \u5b9a\u4e49handler\u7684\u8f93\u51fa\u683c\u5f0f formatter = logging . Formatter ( \" %(asctime)s - %(filename)s [line: %(lineno)d ] - %(levelname)s : %(message)s \" ) fh . setFormatter ( formatter ) # \u5c06log\u6dfb\u52a0\u5230handler\u91cc\u9762 log . addHandler ( fh ) return log log_file_dir = 'logs' if not os . path . exists ( log_file_dir ): os . makedirs ( log_file_dir ) rq = time . strftime ( '%Y-%m- %d -%H-%M' , time . localtime ( time . time ())) log_file = os . path . join ( log_file_dir , rq + '.log' ) logger = create_logger ( log_file )","title":"\u65e5\u5fd7"},{"location":"guidelines/logging/#_1","text":"\u53c2\u8003\uff1a source \u65e5\u5fd7\u662f\u5bf9\u8f6f\u4ef6\u6267\u884c\u65f6\u6240\u53d1\u751f\u4e8b\u4ef6\u7684\u4e00\u79cd\u8ffd\u8e2a\u65b9\u5f0f\u3002\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u5bf9\u4ed6\u4eec\u7684\u4ee3\u7801\u6dfb\u52a0\u65e5\u5fd7\u8c03\u7528\uff0c\u501f\u6b64\u6765\u6307\u793a\u67d0\u4e8b\u4ef6\u7684\u53d1\u751f\u3002 \u4e00\u4e2a\u4e8b\u4ef6\u901a\u8fc7\u4e00\u4e9b\u5305\u542b\u53d8\u91cf\u6570\u636e\u7684\u63cf\u8ff0\u4fe1\u606f\u6765\u63cf\u8ff0\uff08\u6bd4\u5982\uff1a\u6bcf\u4e2a\u4e8b\u4ef6\u53d1\u751f\u65f6\u7684\u6570\u636e\u90fd\u662f\u4e0d\u540c\u7684\uff09\u3002\u5f00\u53d1\u8005\u8fd8\u4f1a\u533a\u5206\u4e8b\u4ef6\u7684\u91cd\u8981\u6027\uff0c \u91cd\u8981\u6027\u4e5f\u88ab\u79f0\u4e3a \u7b49\u7ea7 \u6216 \u4e25\u91cd\u6027 \u3002\u6709\u4e00\u4e2a\u597d\u7684\u65e5\u5fd7\u5b9e\u8df5\uff0c\u80fd\u8ba9\u5f00\u53d1\u8c03\u8bd5\u6d41\u7a0b\u66f4\u987a\u7545\uff0c\u51fa\u73b0\u95ee\u9898\u80fd\u66f4\u5feb\u901f\u7cbe\u51c6\u5b9a\u4f4d\u3002 \u65e5\u5fd7 \u6a21\u5757\u81ea2.3\u7248\u672c\u5f00\u59cb\u4fbf\u662fPython\u6807\u51c6\u5e93\u7684\u4e00\u90e8\u5206\u3002\u5b83\u88ab\u7b80\u6d01\u7684\u63cf\u8ff0\u5728 PEP 282 \u3002 \u65e5\u5fd7\u7684\u4e24\u4e2a\u76ee\u7684\uff1a \u8bca\u65ad\u65e5\u5fd7 \u8bb0\u5f55\u4e0e\u5e94\u7528\u7a0b\u5e8f\u64cd\u4f5c\u76f8\u5173\u7684\u65e5\u5fd7\u3002\u4f8b\u5982\uff0c\u7528\u6237\u9047\u5230\u7684\u62a5\u9519\u4fe1\u606f\uff0c \u53ef\u901a\u8fc7\u641c\u7d22\u8bca\u65ad\u65e5\u5fd7\u83b7\u5f97\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002 \u5ba1\u8ba1\u65e5\u5fd7 \u4e3a\u5546\u4e1a\u5206\u6790\u800c\u8bb0\u5f55\u7684\u65e5\u5fd7\u3002\u4ece\u5ba1\u8ba1\u65e5\u5fd7\u4e2d\uff0c\u53ef\u63d0\u53d6\u7528\u6237\u7684\u4ea4\u6613\u4fe1\u606f\uff0c \u5e76\u7ed3\u5408\u5176\u4ed6\u7528\u6237\u8d44\u6599\u6784\u6210\u7528\u6237\u62a5\u544a\u6216\u8005\u7528\u6765\u4f18\u5316\u5546\u4e1a\u76ee\u6807\u3002","title":"\u65e5\u5fd7"},{"location":"guidelines/logging/#print","text":"\u5f53\u9700\u8981\u5728\u547d\u4ee4\u884c\u5e94\u7528\u4e2d\u663e\u793a\u5e2e\u52a9\u6587\u6863\u65f6\uff0c print \u662f\u4e00\u4e2a\u76f8\u5bf9\u4e8e\u65e5\u5fd7\u66f4\u597d\u7684\u9009\u62e9\u3002 \u800c\u5728\u5176\u4ed6\u65f6\u5019\uff0c\u65e5\u5fd7\u603b\u80fd\u4f18\u4e8e print \uff0c\u7406\u7531\u5982\u4e0b\uff1a \u65e5\u5fd7\u4e8b\u4ef6\u4ea7\u751f\u7684 \u65e5\u5fd7\u8bb0\u5f55 \uff0c\u5305\u542b\u6e05\u6670\u53ef\u7528\u7684\u8bca\u65ad\u4fe1\u606f\uff0c\u5982\u6587\u4ef6\u540d\u79f0\u3001\u8def\u5f84\u3001\u51fd\u6570\u540d\u548c\u884c\u53f7\u7b49\u3002 \u5305\u542b\u65e5\u5fd7\u6a21\u5757\u7684\u5e94\u7528\uff0c\u9ed8\u8ba4\u53ef\u901a\u8fc7\u6839\u8bb0\u5f55\u5668\u5bf9\u5e94\u7528\u7684\u65e5\u5fd7\u6d41\u8fdb\u884c\u8bbf\u95ee\uff0c\u9664\u975e\u60a8\u5c06\u65e5\u5fd7\u8fc7\u6ee4\u4e86\u3002 \u53ef\u901a\u8fc7 logging.Logger.setLevel() \u65b9\u6cd5\u6709\u9009\u62e9\u5730\u8bb0\u5f55\u65e5\u5fd7\uff0c \u6216\u53ef\u901a\u8fc7\u8bbe\u7f6e logging.Logger.disabled \u5c5e\u6027\u4e3a True \u6765\u7981\u7528\u3002","title":"\u6253\u5370\uff08Print\uff09"},{"location":"guidelines/logging/#_2","text":"\u4f7f\u7528**INI**\u683c\u5f0f\u6587\u4ef6\uff1a \u4f18\u70b9 : \u4f7f\u7528 logging.config.listen() \u51fd\u6570\u76d1\u542csocket\uff0c\u53ef\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u66f4\u65b0\u914d\u7f6e \u7f3a\u70b9 : \u901a\u8fc7\u6e90\u7801\u63a7\u5236\u65e5\u5fd7\u914d\u7f6e\u8f83\u5c11\uff08 \u4f8b\u5982 \u5b50\u7c7b\u5316\u5b9a\u5236\u7684\u8fc7\u6ee4\u5668\u6216\u8bb0\u5f55\u5668\uff09\u3002 \u4f7f\u7528**\u5b57\u5178**\u6216**JSON**\u683c\u5f0f\u6587\u4ef6\uff1a \u4f18\u70b9 : \u9664\u4e86\u53ef\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u66f4\u65b0\uff0c\u5728Python 2.6\u4e4b\u540e\uff0c\u8fd8\u53ef\u901a\u8fc7 json \u6a21\u5757\u4ece\u5176\u5b83\u6587\u4ef6\u4e2d\u5bfc\u5165\u914d\u7f6e\u3002 \u7f3a\u70b9 : \u5f88\u96be\u901a\u8fc7\u6e90\u7801\u63a7\u5236\u65e5\u5fd7\u914d\u7f6e\u3002 \u4f7f\u7528**\u6e90\u7801**\uff1a \u4f18\u70b9 : \u5bf9\u914d\u7f6e\u7edd\u5bf9\u7684\u63a7\u5236\u3002 \u7f3a\u70b9 : \u5bf9\u914d\u7f6e\u7684\u66f4\u6539\u9700\u8981\u5bf9\u6e90\u7801\u8fdb\u884c\u4fee\u6539\u3002","title":"\u914d\u7f6e\u65e5\u5fd7"},{"location":"guidelines/logging/#ini","text":"\u6211\u4eec\u5047\u8bbe\u6587\u4ef6\u540d\u4e3a logging_config.ini \u3002\u5173\u4e8e\u6587\u4ef6\u683c\u5f0f\u7684\u66f4\u591a\u7ec6\u8282\uff0c\u8bf7\u53c2\u89c1 \u65e5\u5fd7\u6307\u5357 \u4e2d\u7684 \u65e5\u5fd7\u914d\u7f6e \u90e8\u5206\u3002 [loggers] keys = root [handlers] keys = stream_handler [formatters] keys = formatter [logger_root] level = DEBUG handlers = stream_handler [handler_stream_handler] class = StreamHandler level = DEBUG formatter = formatter args = (sys.stderr,) [formatter_formatter] format = %(asctime)s %(name)-12s %(levelname)-8s %(message)s \u7136\u540e\u5728\u6e90\u7801\u4e2d\u8c03\u7528 logging.config.fileConfig() \u65b9\u6cd5\uff1a import logging from logging.config import fileConfig fileConfig ( 'logging_config.ini' ) logger = logging . getLogger () logger . debug ( 'often makes a very good meal of %s ' , 'visiting tourists' )","title":"\u901a\u8fc7INI\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u7684\u4f8b\u5b50"},{"location":"guidelines/logging/#_3","text":"Python 2.7\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b57\u5178\u5b9e\u73b0\u8be6\u7ec6\u914d\u7f6e\u3002 PEP 391 \u5305\u542b\u4e86\u4e00\u7cfb\u5217\u5b57\u5178\u914d\u7f6e\u7684\u5f3a\u5236\u548c \u975e\u5f3a\u5236\u7684\u5143\u7d20\u3002 import logging from logging.config import dictConfig logging_config = dict ( version = 1 , formatters = { 'f' : { 'format' : ' %(asctime)s %(name)-12s %(levelname)-8s %(message)s ' } }, handlers = { 'h' : { 'class' : 'logging.StreamHandler' , 'formatter' : 'f' , 'level' : logging . DEBUG } }, root = { 'handlers' : [ 'h' ], 'level' : logging . DEBUG , }, ) dictConfig ( logging_config ) logger = logging . getLogger () logger . debug ( 'often makes a very good meal of %s ' , 'visiting tourists' )","title":"\u901a\u8fc7\u5b57\u5178\u8fdb\u884c\u914d\u7f6e\u7684\u4f8b\u5b50"},{"location":"guidelines/logging/#_4","text":"import logging logger = logging . getLogger () handler = logging . StreamHandler () formatter = logging . Formatter ( ' %(asctime)s %(name)-12s %(levelname)-8s %(message)s ' ) handler . setFormatter ( formatter ) logger . addHandler ( handler ) logger . setLevel ( logging . DEBUG ) logger . debug ( 'often makes a very good meal of %s ' , 'visiting tourists' )","title":"\u901a\u8fc7\u6e90\u7801\u76f4\u63a5\u914d\u7f6e\u7684\u4f8b\u5b50"},{"location":"guidelines/logging/#logger","text":"# logger.py # \u521b\u5efaLogger\u5bf9\u8c61\u5b9e\u4f8blogger\uff0c\u7136\u540e\u5176\u4ed6\u6a21\u5757\u53ea\u9700\u8981 from logger import logger # \u901a\u8fc7logger.info(\"\")\u65b9\u6cd5\u8c03\u7528 def create_logger ( log_file , level = logging . DEBUG ): # logging.basicConfig\u51fd\u6570\u5bf9\u65e5\u5fd7\u7684\u8f93\u51fa\u683c\u5f0f\u53ca\u65b9\u5f0f\u505a\u76f8\u5173\u914d\u7f6e logging . basicConfig ( level = level , format = ' %(asctime)s - %(filename)s [line: %(lineno)d ] - %(levelname)s : %(message)s ' ) log = logging . getLogger () log . setLevel ( logging . INFO ) if not os . path . exists ( os . path . dirname ( log_file )): os . makedirs ( os . path . dirname ( log_file )) # \u521b\u5efa\u4e00\u4e2ahandler\uff0c\u7528\u4e8e\u5199\u5165\u65e5\u5fd7\u6587\u4ef6 fh = logging . FileHandler ( log_file , mode = 'w' ) fh . setLevel ( level ) # \u5b9a\u4e49handler\u7684\u8f93\u51fa\u683c\u5f0f formatter = logging . Formatter ( \" %(asctime)s - %(filename)s [line: %(lineno)d ] - %(levelname)s : %(message)s \" ) fh . setFormatter ( formatter ) # \u5c06log\u6dfb\u52a0\u5230handler\u91cc\u9762 log . addHandler ( fh ) return log log_file_dir = 'logs' if not os . path . exists ( log_file_dir ): os . makedirs ( log_file_dir ) rq = time . strftime ( '%Y-%m- %d -%H-%M' , time . localtime ( time . time ())) log_file = os . path . join ( log_file_dir , rq + '.log' ) logger = create_logger ( log_file )","title":"logger\u6587\u4ef6\u793a\u4f8b"},{"location":"guidelines/program_design/","text":"\u8bbe\u8ba1\u6a21\u5f0f \u00b6 \u53c2\u8003\uff1a Python Design Patterns DRY\u539f\u5219 \u00b6 DRY \uff08Don't repeat yourself\uff09\uff1a 1 \u5728\u4e00\u4e2a\u7cfb\u7edf\u4e2d\uff0c\u6bcf\u4e00\u5904\u77e5\u8bc6\u90fd\u5fc5\u987b\u5355\u4e00\u3001\u660e\u786e\u3001\u6743\u5a01\u5730\u8868\u8fbe\u3002 DRY\uff0c\u4e0d\u4ec5\u4ec5\u9650\u5b9a\u4e8e\u201c \u4e0d\u8981\u590d\u5236\u7c98\u8d34\u6e90\u7801 \u3002\u5b83\u9488\u5bf9\u7684\u662f\u4f60\u5bf9**\u77e5\u8bc6**\u548c**\u610f\u56fe**\u7684\u590d\u5236\uff0c\u5b83\u5f3a\u8c03\u7684\u662f\uff0c\u5728\u4e24\u4e2a\u5730\u65b9\u8868\u8fbe\u7684\u4e1c\u897f\u5176\u5b9e\u662f\u76f8\u540c\u7684\uff0c\u53ea\u662f\u8868\u8fbe\u65b9\u5f0f\u6709\u53ef\u80fd\u5b8c\u5168\u4e0d\u540c\u3002 \u5f53\u4ee3\u7801\u7684\u67d0\u4e2a\u5355\u4e00\u65b9\u9762\u5fc5\u987b\u6539\u53d8\u65f6\uff0c\u4f60\u662f\u5426\u53d1\u73b0\u81ea\u5df1\u5728\u591a\u4e2a\u5730\u65b9\u4ee5\u591a\u79cd\u4e0d\u540c\u7684\u683c\u5f0f\u8fdb\u884c\u4e86\u53d8\u66f4\uff1f\u6709\u6ca1\u6709\u540c\u65f6\u4fee\u6539\u6e90\u4ee3\u7801\u548c\u6587\u6863\uff0c\u6216\u662f\u540c\u65f6\u53d8\u66f4\u6570\u636e\u5e93Schema\u548c\u4ee3\u7801\u4e2d\u76f8\u5173\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4ea6\u6216...\uff1f\u5982\u679c\u662f\uff0c\u5219\u4f60\u7684\u4ee3\u7801\u4e0d\u6ee1\u8db3DRY\u3002 ETC \u539f\u5219 \u00b6 ETC \uff08Easy to Change\uff09 \u4e3a\u4ec0\u4e48\u89e3\u8026\u5f88\u597d\uff1f\u56e0\u4e3a\u901a\u8fc7\u9694\u79bb\u5173\u6ce8\u7126\u70b9\uff0c\u53ef\u8ba9\u6bcf\u4e00\u90e8\u5206\u90fd\u5bb9\u6613\u53d8\u66f4\u2014\u2014\u6b64\u8c13ETC\u3002 \u4e3a\u4ec0\u4e48\u5355\u4e00\u804c\u8d23\u539f\u5219\u5f88\u6709\u7528\uff1f\u56e0\u4e3a\u4e00\u4e2a\u9700\u6c42\u53d8\u5316\u4ec5\u4f53\u73b0\u4e3a\u67d0\u4e2a\u5355\u4e00\u6a21\u5757\u7684\u4e00\u4e2a\u5bf9\u5e94\u53d8\u5316\u2014\u2014\u6b64\u8c13ETC\u3002 \u4e3a\u4ec0\u4e48\u547d\u540d\u5f88\u91cd\u8981\uff1f\u56e0\u4e3a\u597d\u7684\u547d\u540d\u53ef\u4ee5\u4f7f\u5f97\u4ee3\u7801\u66f4\u5bb9\u6613\u9605\u8bfb\uff0c\u800c\u4f60\u9700\u8981\u901a\u8fc7\u9605\u8bfb\u4ee3\u7801\u6765\u8fdb\u884c\u53d8\u66f4\u2014\u2014\u6b64\u8c13ETC\u3002 ETC\u662f\u4e00\u79cd\u4ef7\u503c\u89c2\u5ff5\uff0c\u800c\u4e0d\u662f\u4e00\u6761\u786e\u5b9a\u7684\u89c4\u5219 \u00b6 \u4ef7\u503c\u89c2\u5ff5\u662f\u5e2e\u52a9\u4f60\u505a\u51b3\u5b9a\u7684\uff1a\u5e94\u8be5\u505a\u8fd9\u4e2a\uff0c\u8fd8\u662f\u505a\u90a3\u4e2a\uff1f\u5f53\u4f60\u5728\u8f6f\u4ef6\u9886\u57df\u601d\u8003\u65f6\uff0c\u4f60\u5e94\u8be5\u8ba9\u5b83\u6f02\u6d6e\u5728\u610f\u8bc6\u601d\u7ef4\u4e4b\u4e0b\uff0c\u6307\u5f15\u4f60\u6b63\u786e\u7684\u65b9\u5411\u3002\u90a3\u4e48\u5982\u4f55\u505a\u5230\uff1f 1 2 \u6709\u610f\u8bc6\u5730\u5f3a\u5316\u81ea\u5df1\uff0c\u65f6\u5e38\u5730\u6709\u610f\u8bc6\u5730\u95ee\u81ea\u5df1\uff1a\u201c\u521a\u624d\u505a\u7684\u4e8b\u60c5\u662f\u8ba9\u6574\u4e2a\u7cfb\u7edf\u5bb9\u6613\u6539\u53d8\u8fd8\u662f\u66f4\u96be\u6539\u53d8\uff1f\u201d \u5f53\u4f60\u4fdd\u5b58\u6587\u4ef6\u7684\u65f6\u5019\u95ee\u4e00\u904d\uff0c\u5199\u6d4b\u8bd5\u7684\u65f6\u5019\u95ee\u4e00\u904d\uff0c\u5199\u6587\u6863\u7684\u65f6\u5019\u95ee\u4e00\u904d\uff0c\u4fee\u590dBug\u7684\u65f6\u5019\u4e5f\u95ee\u4e00\u904d\u3002 \u5f53\u4f60\u65e0\u6cd5\u786e\u5b9a\u8fd9\u6837\u505a\u662f\u4f7f\u5f97\u7cfb\u7edf\u5bb9\u6613\u6539\u53d8\u8fd8\u662f\u66f4\u96be\u65f6\u600e\u4e48\u505a \u8bd5\u7740\u8ba9\u4f60\u5199\u7684\u4e1c\u897f\u53ef\u4ee5\u66ff\u6362\u3002\u8fd9\u6837\u65e0\u8bba\u53d1\u751f\u4ec0\u4e48\uff0c\u8fd9\u5757\u4ee3\u7801\u90fd\u4e0d\u4f1a\u6210\u4e3a\u4f60\u7684\u969c\u788d\u3002\u60f3\u7740\u4e00\u76f4\u4fdd\u6301\u4ee3\u7801\u7684\u89e3\u8026\u548c\u5185\u805a\uff0c\u5f53\u7136\u8fd9\u4e5f\u662f\u4f60\u4e00\u76f4\u5e94\u8be5\u8fd9\u6837\u505a\u3002 \u628a\u5b83\u5f53\u4f5c\u57f9\u517b\u76f4\u89c9\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u5728\u5de5\u7a0b\u65e5\u5fd7\u4e2d\u8bb0\u5f55\u4f60\u9762\u4e34\u7684\u5904\u5883\uff1a\u4f60\u6709\u54ea\u4e9b\u9009\u62e9\u4ee5\u53ca\u5173\u4e8e\u6539\u53d8\u7684\u731c\u6d4b\u3002\u5728\u6e90\u7801\u4e2d\u7559\u4e00\u4e2a\u6807\u7b7e\uff0c\u4ee5\u4fbf\u4ee5\u540e\u4fee\u6539\u4ee3\u7801\u65f6\u8fdb\u884c\u56de\u987e\u5e76\u7ed9\u81ea\u5df1\u7559\u4e0b\u53cd\u9988\u8bb0\u5f55\u3002 \u5f85\u66f4\u65b0 \u00b6","title":"\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"guidelines/program_design/#_1","text":"\u53c2\u8003\uff1a Python Design Patterns","title":"\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"guidelines/program_design/#dry","text":"DRY \uff08Don't repeat yourself\uff09\uff1a 1 \u5728\u4e00\u4e2a\u7cfb\u7edf\u4e2d\uff0c\u6bcf\u4e00\u5904\u77e5\u8bc6\u90fd\u5fc5\u987b\u5355\u4e00\u3001\u660e\u786e\u3001\u6743\u5a01\u5730\u8868\u8fbe\u3002 DRY\uff0c\u4e0d\u4ec5\u4ec5\u9650\u5b9a\u4e8e\u201c \u4e0d\u8981\u590d\u5236\u7c98\u8d34\u6e90\u7801 \u3002\u5b83\u9488\u5bf9\u7684\u662f\u4f60\u5bf9**\u77e5\u8bc6**\u548c**\u610f\u56fe**\u7684\u590d\u5236\uff0c\u5b83\u5f3a\u8c03\u7684\u662f\uff0c\u5728\u4e24\u4e2a\u5730\u65b9\u8868\u8fbe\u7684\u4e1c\u897f\u5176\u5b9e\u662f\u76f8\u540c\u7684\uff0c\u53ea\u662f\u8868\u8fbe\u65b9\u5f0f\u6709\u53ef\u80fd\u5b8c\u5168\u4e0d\u540c\u3002 \u5f53\u4ee3\u7801\u7684\u67d0\u4e2a\u5355\u4e00\u65b9\u9762\u5fc5\u987b\u6539\u53d8\u65f6\uff0c\u4f60\u662f\u5426\u53d1\u73b0\u81ea\u5df1\u5728\u591a\u4e2a\u5730\u65b9\u4ee5\u591a\u79cd\u4e0d\u540c\u7684\u683c\u5f0f\u8fdb\u884c\u4e86\u53d8\u66f4\uff1f\u6709\u6ca1\u6709\u540c\u65f6\u4fee\u6539\u6e90\u4ee3\u7801\u548c\u6587\u6863\uff0c\u6216\u662f\u540c\u65f6\u53d8\u66f4\u6570\u636e\u5e93Schema\u548c\u4ee3\u7801\u4e2d\u76f8\u5173\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4ea6\u6216...\uff1f\u5982\u679c\u662f\uff0c\u5219\u4f60\u7684\u4ee3\u7801\u4e0d\u6ee1\u8db3DRY\u3002","title":"DRY\u539f\u5219"},{"location":"guidelines/program_design/#etc","text":"ETC \uff08Easy to Change\uff09 \u4e3a\u4ec0\u4e48\u89e3\u8026\u5f88\u597d\uff1f\u56e0\u4e3a\u901a\u8fc7\u9694\u79bb\u5173\u6ce8\u7126\u70b9\uff0c\u53ef\u8ba9\u6bcf\u4e00\u90e8\u5206\u90fd\u5bb9\u6613\u53d8\u66f4\u2014\u2014\u6b64\u8c13ETC\u3002 \u4e3a\u4ec0\u4e48\u5355\u4e00\u804c\u8d23\u539f\u5219\u5f88\u6709\u7528\uff1f\u56e0\u4e3a\u4e00\u4e2a\u9700\u6c42\u53d8\u5316\u4ec5\u4f53\u73b0\u4e3a\u67d0\u4e2a\u5355\u4e00\u6a21\u5757\u7684\u4e00\u4e2a\u5bf9\u5e94\u53d8\u5316\u2014\u2014\u6b64\u8c13ETC\u3002 \u4e3a\u4ec0\u4e48\u547d\u540d\u5f88\u91cd\u8981\uff1f\u56e0\u4e3a\u597d\u7684\u547d\u540d\u53ef\u4ee5\u4f7f\u5f97\u4ee3\u7801\u66f4\u5bb9\u6613\u9605\u8bfb\uff0c\u800c\u4f60\u9700\u8981\u901a\u8fc7\u9605\u8bfb\u4ee3\u7801\u6765\u8fdb\u884c\u53d8\u66f4\u2014\u2014\u6b64\u8c13ETC\u3002","title":"ETC \u539f\u5219"},{"location":"guidelines/program_design/#etc_1","text":"\u4ef7\u503c\u89c2\u5ff5\u662f\u5e2e\u52a9\u4f60\u505a\u51b3\u5b9a\u7684\uff1a\u5e94\u8be5\u505a\u8fd9\u4e2a\uff0c\u8fd8\u662f\u505a\u90a3\u4e2a\uff1f\u5f53\u4f60\u5728\u8f6f\u4ef6\u9886\u57df\u601d\u8003\u65f6\uff0c\u4f60\u5e94\u8be5\u8ba9\u5b83\u6f02\u6d6e\u5728\u610f\u8bc6\u601d\u7ef4\u4e4b\u4e0b\uff0c\u6307\u5f15\u4f60\u6b63\u786e\u7684\u65b9\u5411\u3002\u90a3\u4e48\u5982\u4f55\u505a\u5230\uff1f 1 2 \u6709\u610f\u8bc6\u5730\u5f3a\u5316\u81ea\u5df1\uff0c\u65f6\u5e38\u5730\u6709\u610f\u8bc6\u5730\u95ee\u81ea\u5df1\uff1a\u201c\u521a\u624d\u505a\u7684\u4e8b\u60c5\u662f\u8ba9\u6574\u4e2a\u7cfb\u7edf\u5bb9\u6613\u6539\u53d8\u8fd8\u662f\u66f4\u96be\u6539\u53d8\uff1f\u201d \u5f53\u4f60\u4fdd\u5b58\u6587\u4ef6\u7684\u65f6\u5019\u95ee\u4e00\u904d\uff0c\u5199\u6d4b\u8bd5\u7684\u65f6\u5019\u95ee\u4e00\u904d\uff0c\u5199\u6587\u6863\u7684\u65f6\u5019\u95ee\u4e00\u904d\uff0c\u4fee\u590dBug\u7684\u65f6\u5019\u4e5f\u95ee\u4e00\u904d\u3002 \u5f53\u4f60\u65e0\u6cd5\u786e\u5b9a\u8fd9\u6837\u505a\u662f\u4f7f\u5f97\u7cfb\u7edf\u5bb9\u6613\u6539\u53d8\u8fd8\u662f\u66f4\u96be\u65f6\u600e\u4e48\u505a \u8bd5\u7740\u8ba9\u4f60\u5199\u7684\u4e1c\u897f\u53ef\u4ee5\u66ff\u6362\u3002\u8fd9\u6837\u65e0\u8bba\u53d1\u751f\u4ec0\u4e48\uff0c\u8fd9\u5757\u4ee3\u7801\u90fd\u4e0d\u4f1a\u6210\u4e3a\u4f60\u7684\u969c\u788d\u3002\u60f3\u7740\u4e00\u76f4\u4fdd\u6301\u4ee3\u7801\u7684\u89e3\u8026\u548c\u5185\u805a\uff0c\u5f53\u7136\u8fd9\u4e5f\u662f\u4f60\u4e00\u76f4\u5e94\u8be5\u8fd9\u6837\u505a\u3002 \u628a\u5b83\u5f53\u4f5c\u57f9\u517b\u76f4\u89c9\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u5728\u5de5\u7a0b\u65e5\u5fd7\u4e2d\u8bb0\u5f55\u4f60\u9762\u4e34\u7684\u5904\u5883\uff1a\u4f60\u6709\u54ea\u4e9b\u9009\u62e9\u4ee5\u53ca\u5173\u4e8e\u6539\u53d8\u7684\u731c\u6d4b\u3002\u5728\u6e90\u7801\u4e2d\u7559\u4e00\u4e2a\u6807\u7b7e\uff0c\u4ee5\u4fbf\u4ee5\u540e\u4fee\u6539\u4ee3\u7801\u65f6\u8fdb\u884c\u56de\u987e\u5e76\u7ed9\u81ea\u5df1\u7559\u4e0b\u53cd\u9988\u8bb0\u5f55\u3002","title":"ETC\u662f\u4e00\u79cd\u4ef7\u503c\u89c2\u5ff5\uff0c\u800c\u4e0d\u662f\u4e00\u6761\u786e\u5b9a\u7684\u89c4\u5219"},{"location":"guidelines/program_design/#_2","text":"","title":"\u5f85\u66f4\u65b0"},{"location":"guidelines/project_structure/","text":"\u9879\u76ee\u7ed3\u6784 \u00b6 \u524d\u8a00 \u00b6 \u53c2\u8003\uff1a Python\u6700\u4f73\u5b9e\u8df5\u6307\u5357\u4e2d\u6587\u7248 \u201c\u7ed3\u6784\u5316\u201d\u7684\u5b9a\u4e49\u662f\u60a8\u5173\u6ce8\u4e8e\u600e\u6837\u4f7f\u60a8\u7684\u9879\u76ee\u6700\u597d\u5730\u6ee1\u8db3\u5b83\u7684\u5bf9\u8c61\u6027\uff0c\u6211\u4eec\u9700\u8981\u53bb\u8003\u8651\u5982\u4f55\u66f4\u597d\u5730\u5229\u7528Python\u7684\u7279\u6027\u6765\u521b\u9020\u7b80\u6d01\u3001\u9ad8\u6548\u7684\u4ee3\u7801\u3002\u5728\u5b9e\u8df5\u5c42\u9762\uff0c\u201c\u7ed3\u6784\u5316\u201d\u610f\u5473\u7740\u901a\u8fc7\u7f16\u5199\u7b80\u6d01\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u6b63\u5982\u6587\u4ef6\u7cfb\u7edf\u4e2d\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u7ec4\u7ec7\u4e00\u6837\uff0c \u4ee3\u7801\u5e94\u8be5\u4f7f\u903b\u8f91\u548c\u4f9d\u8d56\u6e05\u6670\u3002 \u5728\u4e00\u4e2a\u5065\u5eb7\u7684\u5f00\u53d1\u5468\u671f\u4e2d\uff0c\u4ee3\u7801\u98ce\u683c\uff0cAPI\u8bbe\u8ba1\u548c\u81ea\u52a8\u5316\u662f\u975e\u5e38\u5173\u952e\u7684\u3002\u540c\u6837\u7684\uff0c\u5bf9\u4e8e\u5de5\u7a0b\u7684\u67b6\u6784\u3001\u4ed3\u5e93\u7684\u7ed3\u6784\u4e5f\u662f\u5173\u952e\u7684\u4e00\u90e8\u5206\u3002 \u5f53\u5176\u4ed6\u5de5\u7a0b\u5e08\u67e5\u770b\u6216\u8005\u63a5\u624b\u60a8\u7684\u5de5\u7a0b\uff08\u4ed3\u5e93\uff09\u65f6\uff0c\u4ed6\u4eec\u4f1a\u770b\u5230\u8fd9\u4e9b: - \u5de5\u7a0b\u7684\u540d\u5b57 - \u5de5\u7a0b\u7684\u63cf\u8ff0 - \u4e00\u7cfb\u5217\u7684\u6587\u4ef6 \u53ea\u6709\u5f53\u4ed6\u4eec\u6eda\u52a8\u5230\u76ee\u5f55\u4e0b\u65b9\u65f6\u624d\u4f1a\u770b\u5230\u60a8\u5de5\u7a0b\uff08\u4ed3\u5e93\uff09\u7684README\u3002 \u5982\u679c\u60a8\u7684\u5de5\u7a0b\uff08\u4ed3\u5e93\uff09\u7684\u76ee\u5f55\u662f\u4e00\u56e2\u7cdf\uff0c\u6ca1\u6709\u6e05\u6670\u7684\u7ed3\u6784\uff0c\u4ed6\u4eec\u53ef\u80fd\u8981\u5230\u5904\u5bfb\u627e\u624d\u80fd\u627e\u5230\u60a8\u5199\u7684\u6f02\u4eae\u7684\u6587\u6863\u3002 \u6837\u4f8b\uff1a Sample \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 setup.py \u251c\u2500\u2500 requirements.txt \u251c\u2500\u2500 example \u2502 \u2514\u2500\u2500 example.py \u2502 \u2514\u2500\u2500 __init__.py \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 example.doc \u2514\u2500\u2500 tests \u2502 \u2514\u2500\u2500 test_example.py \u7ed3\u6784\u662f\u4e00\u628a\u94a5\u5319 \u00b6 \u5f97\u76ca\u4e8ePython\u63d0\u4f9b\u7684\u5bfc\u5165\u4e0e\u7ba1\u7406\u6a21\u5757\u7684\u65b9\u5f0f\uff0c\u7ed3\u6784\u5316Python\u9879\u76ee\u53d8\u5f97\u76f8\u5bf9\u7b80\u5355\u3002 \u8fd9\u91cc\u8bf4\u7684\u7b80\u5355\uff0c\u6307\u7684\u662f\u7ed3\u6784\u5316\u8fc7\u7a0b\u6ca1\u6709\u592a\u591a\u7ea6\u675f\u9650\u5236\u800c\u4e14\u6a21\u5757\u5bfc\u5165\u529f\u80fd\u5bb9\u6613\u638c\u63e1\u3002 \u56e0\u800c\u60a8\u53ea\u5269\u4e0b\u67b6\u6784\u6027\u7684\u5de5\u4f5c\uff0c\u5305\u62ec\u8bbe\u8ba1\u3001\u5b9e\u73b0\u9879\u76ee\u5404\u4e2a\u6a21\u5757\uff0c\u5e76\u6574\u7406\u6e05\u4ed6\u4eec\u4e4b\u95f4 \u7684\u4ea4\u4e92\u5173\u7cfb\u3002 \u5bb9\u6613\u7ed3\u6784\u5316\u7684\u9879\u76ee\u540c\u6837\u610f\u5473\u7740\u5b83\u7684\u7ed3\u6784\u5316\u5bb9\u6613\u505a\u5f97\u7cdf\u7cd5\u3002\u7cdf\u7cd5\u7ed3\u6784\u7684\u7279\u5f81\u5305\u62ec\uff1a \u591a\u91cd\u4e14\u6df7\u4e71\u7684\u5faa\u73af\u4f9d\u8d56\u5173\u7cfb \uff1a\u4f8b\u5982\uff0cStudent\u7c7b\u4e2d\u9700\u8981Teacher\u7c7b\uff0c\u800c\u540c\u6837\u7684Teacher\u7c7b\u9700\u8981\u5f15\u5165Student\u7c7b\uff0c\u8fd9\u5c31\u662f\u4e00\u79cd\u5faa\u73af\u4f9d\u8d56\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b,\u60a8\u5f97\u501f\u52a9\u4e00\u4e9b\u4e0d\u600e\u4e48\u9760\u8c31\u7684 \u5c0f\u6280\u5de7\uff0c\u6bd4\u5982\u5728\u65b9\u6cd5\u6216\u51fd\u6570\u5185\u90e8\u4f7f\u7528import\u8bed\u53e5\u3002\uff08 \u53c2\u8003\u89e3\u51b3\u529e\u6cd5 \uff09 \u9690\u542b\u8026\u5408 \uff1a\u7531\u4e8eStudent\u7c7b\u4e0eTeacher\u7c7b\u4f1a\u76f8\u4f1a\u5f71\u54cd\uff0c\u5404\u81ea\u7684\u6539\u53d8\u90fd\u53ef\u80fd\u4f1a\u5f15\u8d77\u5bf9\u65b9\u7684\u6539\u53d8\u3002\u8fd9\u6837\u7684\u60c5\u51b5\u610f\u5473\u7740 Teacher\u7c7b\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u592a\u591a\u5173\u4e8eStudent\u7c7b\u7684\u5047\u8bbe\u5173\u8054\uff08\u76f8\u53cd\u4ea6\u662f\u5982\u6b64\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u5c06\u8fd9\u4e24\u4e2a\u7c7b\u7684\u5173\u7cfb\u8fdb\u884c\u89e3\u8026\uff0c\u4f8b\u5982\u6dfb\u52a0\u4e00\u4e2a\u8bfe\u7a0b\u7c7b\u6216\u8005\u73ed\u7ea7\u7c7b\u6765\u5c06\u4e24\u8005\u8054\u7cfb\u8d77\u6765\u3002 \u5927\u91cf\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\u6216\u4e0a\u4e0b\u6587 \uff1a\u5927\u91cf\u7684\u4f7f\u7528\u53ef\u4ee5\u88ab\u4fee\u6539\u800c\u4e14\u662f\u80fd\u88ab\u4e0d\u540c\u5f15\u7528\u6216\u8005\u5bf9\u8c61\u4fee\u6539\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u51c6\u786e\u7684\u4f20\u9012 class \uff0c id \u8fd9\u6837\u786e\u5207\u7684\u53d8\u91cf\uff0c\u90a3\u51fa\u73b0bug\u7684\u65f6\u5019\u60a8\u5c31\u9700\u8981\u5f7b\u5e95\u68c0\u67e5\u5168\u5c40\u53d8\u91cf\u7684**\u6240\u6709\u5165\u53e3**\uff0c\u6765\u7406\u89e3\u4e3a\u5565\u4f1a\u53d1\u751f\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\u4e24\u4e2a\u8001\u5e08\u4e3a\u5565\u4f1a\u5728\u540c\u4e00\u4e2a\u73ed\u7ea7\u6559\u540c\u4e00\u95e8\u8bfe\u3002 \u9762\u6761\u5f0f\u4ee3\u7801 (Spaghetti code) \uff1a\u591a\u9875\u5d4c\u5957\u7684if\u8bed\u53e5\u4e0efor\u5faa\u73af\uff0c\u5305\u542b\u5927\u91cf\u590d\u5236-\u7c98\u8d34 \u7684\u8fc7\u7a0b\u4ee3\u7801\uff0c\u4e14\u6ca1\u6709\u5408\u9002\u7684\u5206\u5272\u2014\u2014\u8fd9\u6837\u7684\u4ee3\u7801\u88ab\u79f0\u4e3a\u9762\u6761\u5f0f\u4ee3\u7801\u3002Python\u4e2d\u6709\u610f\u601d \u7684\u7f29\u8fdb\u6392\u7248(\u6700\u5177\u4e89\u8bae\u7684\u7279\u6027\u4e4b\u4e00)\u4f7f\u9762\u6761\u5f0f\u4ee3\u7801\u5f88\u96be\u7ef4\u6301\uff0c\u5c24\u5176\u662f\u5728\u7eaf\u6587\u672c\u7f16\u8f91\u5668\u4e2d\uff0c\u5982vim\u7b49\u3002 \u6df7\u6c8c\u4ee3\u7801 \uff1a\u8fd9\u7c7b\u4ee3\u7801\u5305\u542b\u4e0a\u767e\u6bb5\u76f8\u4f3c\u7684\u903b\u8f91\u788e\u7247\uff0c\u901a\u5e38\u662f\u7f3a\u4e4f \u5408\u9002\u7ed3\u6784\u7684\u7c7b\u6216\u5bf9\u8c61\u3002\u5f53\u4f60\u65e0\u6cd5\u6e05\u6670\u5b9a\u4e491\u4e2a\u7c7b\u6216\u8005\u5bf9\u8c61\u65f6\uff0c\u4e0d\u77e5\u9053\u662f\u5e94\u8be5\u5b9a\u4e49\u65b0\u7684\u7c7b\u8fd8\u662f\u7ee7\u627f\u539f\u6709\u7684\u7c7b\u3001\u6216\u8005\u662f\u5426\u9700\u8981\u4f7f\u7528\u65b9\u6cd5\u91cd\u8f7d\u662f\uff0c\u4e5f\u8bb8\u60a8\u5df2\u7ecf\u9677\u5165\u4e86\u6df7\u6c8c\u4ee3\u7801\u4e2d\u3002 \u5de5\u7a0b\u7ed3\u6784 \u00b6 \u53c2\u8003 \uff1a Python \u9879\u76ee\u5de5\u7a0b\u5316\u5f00\u53d1\u6307\u5357 \u7b80\u5355\u7ed3\u6784 \u00b6 packaging_tutorial \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 example_pkg \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 example.py \u251c\u2500\u2500 setup.py \u2514\u2500\u2500 tests \u9879\u76ee\u7ed3\u6784\u4ee5\u6839\u76ee\u5f55\u5f00\u59cb\uff0c\u4f5c\u4e3a\u9879\u76ee\u7684\u73af\u5883\u3002 \u5f53\u6709\u591a\u4e2a\u540c\u7ea7\u5305\u65f6\uff0c\u5b83\u4eec\u90fd\u662f\u6241\u5e73\u7684\u6563\u843d\u5728\u9879\u76ee\u6839\u76ee\u5f55\u3002\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u53ef\u80fd\u8fd8\u5b58\u5728\u5176\u4ed6\u975e\u5305\u76ee\u5f55\uff0c\u5982 data \u3001 docs \u7b49\u3002\u5982\u679c\u9700\u8981\u672c\u5730\u5f15\u7528\u7b2c\u4e09\u65b9\u5e93\uff0c\u4e5f\u9700\u8981\u653e\u5230\u6839\u76ee\u5f55\uff0c\u4f46\u7b2c\u4e09\u65b9\u5305\u5e76\u4e0d\u662f\u9879\u76ee\u7684\u5b50\u5305\uff0c\u800c\u662f\u5b83\u7684\u4e00\u4e2a\u5f15\u7528\u3002\u8fd9\u6837\u505a\u4f1a\u9020\u6210\u804c\u8d23\u6df7\u4e71\u3002\u5982\u4e0b\uff1a tutorial \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 data | \u2514\u2500\u2500 user.json \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 history.md \u251c\u2500\u2500 user \u2502 \u2514\u2500\u2500 __init__.py \u251c\u2500\u2500 views \u2502 \u2514\u2500\u2500 __init__.py \u251c\u2500\u2500 requests # \u8fd9\u662f\u9700\u8981\u672c\u5730\u6253\u5305\u7684\u7b2c\u4e09\u65b9\u5305 \u2514\u2500\u2500 request.py \u2502 \u2514\u2500\u2500 __init__.py \u251c\u2500\u2500 setup.py \u2514\u2500\u2500 tests \u5f53\u591a\u4e2a\u76ee\u5f55\u6241\u5e73\u7684\u5206\u5e03\u5728\u9879\u76ee\u6839\u76ee\u5f55\u65f6\uff0c\u5b83\u4eec\u626e\u6f14\u8005\u4e0d\u540c\u7684\u529f\u80fd\uff0c\u5728\u5f00\u53d1\u4e0a\uff0c\u4f1a\u5e26\u4e86\u4e00\u5b9a\u7684\u6df7\u4e71\u3002\u800c\u4e14\u5728\u6253\u5305\u548c\u6d4b\u8bd5\u4e0a\u4e5f\u4f1a\u5e26\u6765\u4e00\u4e9b\u4e0d\u4fbf\u3002 \u5728\u6253\u5305\u4e0a\uff0c\u9700\u8981\u63d0\u4f9b \u66f4\u591a\u7684\u914d\u7f6e \u6392\u9664\u4e0d\u5fc5\u8981\u7684\u76ee\u5f55\uff0c\u5982 docs \u6216\u8005\u5176\u4ed6\u4e0d\u9700\u8981\u6253\u5305\u4ec5\u9879\u76ee\u4e2d\u7684\u4e1c\u897f\u3002 \u5f53\u4f7f\u7528\u53ef\u7f16\u8f91\u5b89\u88c5\uff08 pip install -e . \uff09 \u65f6\uff0c\u4f1a\u5c06\u9879\u76ee\u6839\u76ee\u5f55\u4e2d\u7684\u6240\u6709\u4e1c\u897f\u5b89\u88c5\u5230\u73af\u5883\u4e2d\uff0c\u5305\u62ec\u4e00\u4e9b\u4e0d\u9700\u8981\u7684\u3002 src \u7ed3\u6784 \u00b6 \u4ee5\u4e0b\u7684src\u7ed3\u6784\u662f\u793e\u533a\u9010\u6e10\u9075\u5b88\u7684\u4e00\u4e2a\u6807\u51c6\u3002\u867d\u7136\u793e\u533a\u4e2d\u6709\u5927\u91cf\u8001\u7684\u9879\u76ee\u4f9d\u7136\u91c7\u7528\u7b80\u5355\u5e03\u5c40\uff0c\u4f46\u65b0\u9879\u76ee**\u63a8\u8350**\u4f7f\u7528 src \u7ed3\u6784\u3002\u5982\u4e0b\u9762\u8fd9\u4e2a\u793a\u4f8b\u9879\u76ee\u7ed3\u6784\uff1a sampleproject \u251c\u2500\u2500 data \u2502 \u2514\u2500\u2500 user.json \u251c\u2500\u2500 bin \u2502 \u2514\u2500\u2500 start.bat \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 history.md \u251c\u2500\u2500 setup.py \u251c\u2500\u2500 src \u2502 \u251c\u2500\u2500 requests \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 sample \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 user \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 views \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 main.py \u251c\u2500\u2500 tests \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 user \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 views \u2502 \u2514\u2500\u2500 __init__.py \u2514\u2500\u2500 conf.ini \u2514\u2500\u2500 settings.py \u9879\u76ee\u7684\u5305\u7ed3\u6784\u5f88\u6e05\u6670\uff0c\u5728\u73af\u5883\u4e2d\u53ea\u9700\u8981\u5f15\u5165 src \u76ee\u5f55\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u5bfc\u5165\u9879\u76ee\u6e90\u4ee3\u7801\u3002\u901a\u8fc7 pip install -e . \u53ef\u7f16\u8f91\u5b89\u88c5\uff0c\u4e5f\u53ea\u4f1a\u5b89\u88c5 src \u4e2d\u7684\u5305\u3002\u7ba1\u7406\u8d77\u6765\u66f4\u52a0\u6e05\u6670\u3002 README \u00b6 \u8fd9\u5e94\u8be5\u662f\u6bcf\u4e2a\u9879\u76ee\u90fd\u5e94\u8be5\u6709\u7684\u4e00\u4e2a\u6587\u4ef6\uff0c\u76ee\u7684\u662f\u80fd\u7b80\u8981\u63cf\u8ff0\u8be5\u9879\u76ee\u7684\u4fe1\u606f\uff0c\u8ba9\u8bfb\u8005\u5feb\u901f\u4e86\u89e3\u8fd9\u4e2a\u9879\u76ee\u3002 \u5b83\u9700\u8981\u8bf4\u660e\u4ee5\u4e0b\u51e0\u4e2a\u4e8b\u9879: 1 2 3 4 5 1. \u8f6f\u4ef6\u5b9a\u4f4d\uff0c\u8f6f\u4ef6\u7684\u57fa\u672c\u529f\u80fd\u3002 2. \u8fd0\u884c\u4ee3\u7801\u7684\u65b9\u6cd5: \u5b89\u88c5\u73af\u5883\u3001\u542f\u52a8\u547d\u4ee4\u7b49\u3002 3. \u7b80\u8981\u7684\u4f7f\u7528\u8bf4\u660e\u3002 4. \u4ee3\u7801\u76ee\u5f55\u7ed3\u6784\u8bf4\u660e\uff0c\u66f4\u8be6\u7ec6\u70b9\u53ef\u4ee5\u8bf4\u660e\u8f6f\u4ef6\u7684\u57fa\u672c\u539f\u7406\u3002 5. \u5e38\u89c1\u95ee\u9898\u8bf4\u660e\u3002 \u5728\u8f6f\u4ef6\u5f00\u53d1\u521d\u671f\uff0c\u7531\u4e8e\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4ee5\u4e0a\u5185\u5bb9\u53ef\u80fd\u4e0d\u660e\u786e\u6216\u8005\u53d1\u751f\u53d8\u5316\uff0c\u5e76\u4e0d\u662f\u4e00\u5b9a\u8981\u5728\u4e00\u5f00\u59cb\u5c31\u5c06\u6240\u6709\u4fe1\u606f\u90fd\u8865\u5168\u3002\u4f46\u662f\u5728\u9879\u76ee\u5b8c\u7ed3\u7684\u65f6\u5019\uff0c\u662f\u9700\u8981\u64b0\u5199\u8fd9\u6837\u7684\u4e00\u4e2a\u6587\u6863\u7684\u3002 requirements.txt \u00b6 \u8fd9\u4e2a\u6587\u4ef6\u5b58\u5728\u7684\u76ee\u7684\u662f: \u65b9\u4fbf\u5f00\u53d1\u8005\u7ef4\u62a4\u8f6f\u4ef6\u7684\u5305\u4f9d\u8d56\u3002\u5c06\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u65b0\u589e\u7684\u5305\u6dfb\u52a0\u8fdb\u8fd9\u4e2a\u5217\u8868\u4e2d\uff0c\u907f\u514d\u5728 setup.py \u5b89\u88c5\u4f9d\u8d56\u65f6\u6f0f\u6389\u8f6f\u4ef6\u5305\u3002 \u65b9\u4fbf\u8bfb\u8005\u660e\u786e\u9879\u76ee\u4f7f\u7528\u4e86\u54ea\u4e9bPython\u5305\u3002 \u8fd9\u4e2a\u6587\u4ef6\u7684\u683c\u5f0f\u662f\u6bcf\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u5305\u4f9d\u8d56\u7684\u8bf4\u660e\uff0c\u901a\u5e38\u662f numpy>=2.20.1 \u8fd9\u79cd\u683c\u5f0f\uff0c\u8981\u6c42\u662f\u8fd9\u4e2a\u683c\u5f0f\u80fd\u88ab pip \u8bc6\u522b\uff0c \u8fd9\u6837\u5c31\u53ef\u4ee5\u7b80\u5355\u7684\u901a\u8fc7 pip install -r requirements.txt \u6765\u628a\u6240\u6709Python\u5305\u4f9d\u8d56\u90fd\u88c5\u597d\u4e86\u3002 \u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 pip freeze > requirements.txt \u547d\u4ee4\u5c06\u4f60\u5f53\u524d\u7684\u73af\u5883\u6240\u5b89\u88c5\u7684\u5305\u751f\u6210 requirements.txt \u5177\u4f53\u683c\u5f0f\u8bf4\u660e\uff0c\u8bf7\u67e5\u770b\u5b98\u65b9\u6587\u6863 Requirements numpy >= 2.20 pandas docopt == 0.6.1 tqdm >= 3.4, <= 4.5 ... setup \u00b6 \u4e00\u822c\u6765\u8bf4\uff0c\u7528 setup.py \u6765\u7ba1\u7406\u4ee3\u7801\u7684\u6253\u5305\u3001\u5b89\u88c5\u3001\u90e8\u7f72\u95ee\u9898\u3002\u4e1a\u754c\u6807\u51c6\u7684\u5199\u6cd5\u662f\u7528Python\u6d41\u884c\u7684\u6253\u5305\u5de5\u5177 setuptools \u6765\u7ba1\u7406\u8fd9\u4e9b\u4e8b\u60c5\u3002 \u8fd9\u79cd\u65b9\u5f0f\u666e\u904d\u5e94\u7528\u4e8e\u5f00\u6e90\u9879\u76ee\u4e2d\u3002\u4e0d\u8fc7\u8fd9\u91cc\u7684\u6838\u5fc3\u601d\u60f3\u4e0d\u662f\u7528\u6807\u51c6\u5316\u7684\u5de5\u5177\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u800c\u662f\u8bf4\uff0c \u4e00\u4e2a\u9879\u76ee\u4e00\u5b9a\u8981\u6709\u4e00\u4e2a\u5b89\u88c5\u90e8\u7f72\u5de5\u5177\uff0c\u80fd\u5feb\u901f\u4fbf\u6377\u7684\u5728\u4e00\u53f0\u65b0\u673a\u5668\u4e0a\u5c06\u73af\u5883\u88c5\u597d\u3001\u4ee3\u7801\u90e8\u7f72\u597d\u548c\u5c06\u7a0b\u5e8f\u8fd0\u884c\u8d77\u6765\u3002 setuptools \u7684\u6587\u6863\u6bd4\u8f83\u5e9e\u5927\uff0c\u521a\u63a5\u89e6\u7684\u8bdd\uff0c\u53ef\u80fd\u4e0d\u592a\u597d\u627e\u5230\u5207\u5165\u70b9\u3002\u5b66\u4e60\u6280\u672f\u7684\u65b9\u5f0f\u5c31\u662f\u770b\u4ed6\u4eba\u662f\u600e\u4e48\u7528\u7684\uff0c \u53ef\u4ee5\u53c2\u8003\u4e00\u4e0bPython\u7684\u4e00\u4e2aWeb\u6846\u67b6 Flask \u662f\u5982\u4f55\u5199\u7684: Flask setup.py from setuptools import setup # Metadata goes in setup.cfg. These are here for GitHub's dependency graph. setup ( name = \"Flask\" , install_requires = [ \"Werkzeug >= 2.2.2\" , \"Jinja2 >= 3.0\" , \"itsdangerous >= 2.0\" , \"click >= 8.0\" , \"importlib-metadata >= 3.6.0; python_version < '3.10'\" , ], extras_require = { \"async\" : [ \"asgiref >= 3.2\" ], \"dotenv\" : [ \"python-dotenv\" ], }, ) \u6a21\u5757 \u00b6 \u53c2\u8003 \uff1a Python\u6700\u4f73\u5b9e\u8df5\u6307\u5357--\u6a21\u5757 \u6a21\u5757 \u00b6 Python\u6a21\u5757\u662f\u6700\u4e3b\u8981\u7684\u62bd\u8c61\u5c42\u4e4b\u4e00\uff0c\u5e76\u4e14\u5f88\u53ef\u80fd\u662f\u6700\u81ea\u7136\u7684\u4e00\u4e2a\u3002\u62bd\u8c61\u5c42\u5141\u8bb8\u5c06\u4ee3\u7801\u5206\u4e3a \u4e0d\u540c\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u5305\u542b\u76f8\u5173\u7684\u6570\u636e\u4e0e\u529f\u80fd\u3002 \u4f8b\u5982\u5728\u9879\u76ee\u4e2d\uff0c\u4e00\u5c42\u63a7\u5236\u7528\u6237\u64cd\u4f5c\u76f8\u5173\u63a5\u53e3\uff0c\u53e6\u4e00\u5c42\u5904\u7406\u5e95\u5c42\u6570\u636e\u64cd\u4f5c\u3002\u6700\u81ea\u7136\u5206\u5f00\u8fd9\u4e24 \u5c42\u7684\u65b9\u5f0f\u662f\uff0c\u5728\u4e00\u4efd\u6587\u4ef6\u91cc\u91cd\u7ec4\u6240\u6709\u529f\u80fd\u63a5\u53e3\uff0c\u5e76\u5c06\u6240\u6709\u5e95\u5c42\u64cd\u4f5c\u5c01\u88c5\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\u4e2d\u3002 \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u63a5\u53e3\u6587\u4ef6\u9700\u8981\u5bfc\u5165\u5c01\u88c5\u5e95\u5c42\u64cd\u4f5c\u7684\u6587\u4ef6\uff0c\u53ef\u901a\u8fc7 import \u548c from ... import \u8bed\u53e5\u5b8c\u6210\u3002\u4e00\u65e6\u60a8\u4f7f\u7528 import \u8bed\u53e5\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u6a21\u5757\u3002 \u65e2\u53ef\u4ee5\u662f\u5185\u7f6e\u7684\u6a21\u5757\u5305\u62ec os \u548c sys \uff0c\u4e5f\u53ef\u4ee5\u662f\u5df2\u7ecf\u5b89\u88c5\u7684\u7b2c\u4e09\u65b9\u7684\u6a21\u5757\uff0c\u6216\u8005\u9879\u76ee \u5185\u90e8\u7684\u6a21\u5757\u3002 \u4e3a\u9075\u5b88\u98ce\u683c\u6307\u5357\u4e2d\u7684\u89c4\u5b9a\uff0c\u6a21\u5757\u540d\u79f0\u8981\u77ed\u3001\u4f7f\u7528\u5c0f\u5199\uff0c\u5e76\u907f\u514d\u4f7f\u7528\u7279\u6b8a\u7b26\u53f7\uff0c\u6bd4\u5982\u70b9(.) \u548c\u95ee\u53f7(?)\u3002\u5982 my.spam.py \u8fd9\u6837\u7684\u540d\u5b57\u662f\u5fc5\u987b\u4e0d\u80fd\u7528\u7684\uff01\u8be5\u65b9\u5f0f\u547d\u540d\u5c06\u59a8\u788d Python\u7684\u6a21\u5757\u67e5\u627e\u529f\u80fd\u3002\u5c31 my.spam.py \u6765\u8bf4\uff0cPython \u8ba4\u4e3a\u9700\u8981\u5728 my \u6587\u4ef6\u5939 \u4e2d\u627e\u5230 spam.py \u6587\u4ef6\uff0c\u5b9e\u9645\u5e76\u4e0d\u662f\u8fd9\u6837\u3002\u5982\u679c\u613f\u610f\u60a8\u53ef\u4ee5\u5c06\u6a21\u5757\u547d\u540d\u4e3a my_spam.py \uff0c \u4e0d\u8fc7\u5e76\u4e0d\u63a8\u8350\u5728\u6a21\u5757\u540d\u4e2d\u4f7f\u7528\u4e0b\u5212\u7ebf\u3002\u4f46\u662f\uff0c\u5728\u6a21\u5757\u540d\u79f0\u4e2d\u4f7f\u7528\u5176\u4ed6\u5b57\u7b26\uff08\u7a7a\u683c\u6216\u8fde\u5b57\u53f7\uff09 \u5c06\u963b\u6b62\u5bfc\u5165\uff08 - \u662f\u51cf\u6cd5\u8fd0\u7b97\u7b26\uff09\uff0c\u56e0\u6b64\u8bf7\u5c3d\u91cf\u4fdd\u6301\u6a21\u5757\u540d\u79f0\u7b80\u5355\uff0c\u4ee5\u65e0\u9700\u5206\u5f00\u5355\u8bcd\u3002 \u6700\u91cd\u8981\u7684\u662f\uff0c\u4e0d\u8981\u4f7f\u7528\u4e0b\u5212\u7ebf\u547d\u540d\u7a7a\u95f4\uff0c\u800c\u662f\u4f7f\u7528\u5b50\u6a21\u5757\u3002 # OK import library.plugin.foo # not OK import library.foo_plugin \u9664\u4e86\u4ee5\u4e0a\u7684\u547d\u540d\u9650\u5236\u5916\uff0cPython\u6587\u4ef6\u6210\u4e3a\u6a21\u5757\u6ca1\u6709\u5176\u4ed6\u7279\u6b8a\u7684\u8981\u6c42\uff0c\u4f46\u4e3a\u4e86\u5408\u7406\u5730\u4f7f\u7528\u8fd9 \u4e2a\u89c2\u5ff5\u5e76\u907f\u514d\u95ee\u9898\uff0c\u60a8\u9700\u8981\u7406\u89e3import\u7684\u539f\u7406\u673a\u5236\u3002\u5177\u4f53\u6765\u8bf4\uff0c import modu \u8bed\u53e5\u5c06 \u5bfb\u627e\u5408\u9002\u7684\u6587\u4ef6\uff0c\u5373\u8c03\u7528\u76ee\u5f55\u4e0b\u7684 modu.py \u6587\u4ef6\uff08\u5982\u679c\u8be5\u6587\u4ef6\u5b58\u5728\uff09\u3002\u5982\u679c\u6ca1\u6709 \u627e\u5230\u8fd9\u4efd\u6587\u4ef6\uff0cPython\u89e3\u91ca\u5668\u9012\u5f52\u5730\u5728 \"PYTHONPATH\" \u73af\u5883\u53d8\u91cf\u4e2d\u67e5\u627e\u8be5\u6587\u4ef6\uff0c\u5982\u679c\u4ecd\u6ca1 \u6709\u627e\u5230\uff0c\u5c06\u629b\u51fa ImportError \u5f02\u5e38\u3002 \u4e00\u65e6\u627e\u5230 modu.py \uff0cPython\u89e3\u91ca\u5668\u5c06\u5728\u9694\u79bb\u7684\u4f5c\u7528\u57df\u5185\u6267\u884c\u8fd9\u4e2a\u6a21\u5757\u3002\u6240\u6709\u9876\u5c42 \u8bed\u53e5\u90fd\u4f1a\u88ab\u6267\u884c\uff0c\u5305\u62ec\u5176\u4ed6\u7684\u5f15\u7528\u3002\u65b9\u6cd5\u4e0e\u7c7b\u7684\u5b9a\u4e49\u5c06\u4f1a\u5b58\u50a8\u5230\u6a21\u5757\u7684\u5b57\u5178\u4e2d\u3002\u7136\u540e\uff0c\u8fd9\u4e2a \u6a21\u5757\u7684\u53d8\u91cf\u3001\u65b9\u6cd5\u548c\u7c7b\u901a\u8fc7\u547d\u540d\u7a7a\u95f4\u66b4\u9732\u7ed9\u8c03\u7528\u65b9\uff0c\u8fd9\u662fPython\u4e2d\u7279\u522b\u6709\u7528\u548c\u5f3a\u5927\u7684\u6838\u5fc3\u6982\u5ff5\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528import\u8bed\u53e5\u7684\u7279\u6b8a\u5f62\u5f0f from modu import * \u6a21\u62df\u66f4\u6807\u51c6\u7684\u884c\u4e3a\u3002\u4f46 import * \u901a\u5e38 \u88ab\u8ba4\u4e3a\u662f\u4e0d\u597d\u7684\u505a\u6cd5\u3002 \u4f7f\u7528 from modu import * \u7684\u4ee3\u7801\u8f83\u96be\u9605\u8bfb\u800c\u4e14\u4f9d\u8d56\u72ec\u7acb\u6027\u4e0d\u8db3 \u3002 \u4f7f\u7528 from modu import func \u80fd\u7cbe\u786e\u5b9a\u4f4d\u60a8\u60f3\u5bfc\u5165\u7684\u65b9\u6cd5\u5e76\u5c06\u5176\u653e\u5230\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u4e2d\u3002 \u6bd4 from modu import * \u8981\u597d\u4e9b\uff0c\u56e0\u4e3a\u5b83\u660e\u786e\u5730\u6307\u660e\u5f80\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u4e2d\u5bfc\u5165\u4e86\u4ec0\u4e48\u65b9\u6cd5\uff0c\u5b83\u548c import modu \u76f8\u6bd4\u552f\u4e00\u7684\u4f18\u70b9\u662f\u4e4b\u540e\u4f7f\u7528\u65b9\u6cd5\u65f6\u53ef\u4ee5\u5c11\u6253\u70b9\u513f\u5b57\u3002 \u9664\u4e86\u7b80\u5355\u7684\u5355\u6587\u4ef6\u9879\u76ee\u5916\uff0c\u5176\u4ed6\u9879\u76ee\u9700\u8981\u80fd\u591f\u660e\u786e\u6307\u51fa\u7c7b\u548c\u65b9\u6cd5 \u7684\u51fa\u5904\uff0c\u4f8b\u5982\u4f7f\u7528 modu.func \u8bed\u53e5\uff0c\u8fd9\u5c06\u663e\u8457\u63d0\u5347\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u6613\u7406\u89e3\u6027\u3002 # bad from modu import * x = sqrt ( 4 ) # sqrt\u662f\u6a21\u5757modu\u7684\u4e00\u90e8\u5206\u4e48\uff1f\u6216\u662f\u5185\u5efa\u51fd\u6570\u4e48\uff1f\u4e0a\u6587\u5b9a\u4e49\u4e86\u4e48\uff1f # ok from modu import sqrt x = sqrt ( 4 ) # \u5982\u679c\u5728import\u8bed\u53e5\u4e0e\u8fd9\u6761\u8bed\u53e5\u4e4b\u95f4\uff0csqrt\u6ca1\u6709\u88ab\u91cd\u590d\u5b9a\u4e49\uff0c\u5b83\u4e5f\u8bb8\u662f\u6a21\u5757modu\u7684\u4e00\u90e8\u5206\u3002 # good import modu x = modu . sqrt ( 4 ) # sqrt\u663e\u7136\u662f\u5c5e\u4e8e\u6a21\u5757modu\u7684\u3002 \u5305 \u00b6 Python\u63d0\u4f9b\u975e\u5e38\u7b80\u5355\u7684\u5305\u7ba1\u7406\u7cfb\u7edf\uff0c\u5373\u7b80\u5355\u5730\u5c06\u6a21\u5757\u7ba1\u7406\u673a\u5236\u6269\u5c55\u5230\u4e00\u4e2a\u76ee\u5f55\u4e0a(\u76ee\u5f55\u6269\u5c55\u4e3a\u5305)\u3002\u4efb\u610f\u5305\u542b __init__.py \u6587\u4ef6\u7684\u76ee\u5f55\u90fd\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2aPython\u5305\u3002\u5bfc\u5165\u4e00\u4e2a\u5305\u91cc\u4e0d\u540c \u6a21\u5757\u7684\u65b9\u5f0f\u548c\u666e\u901a\u7684\u5bfc\u5165\u6a21\u5757\u65b9\u5f0f\u76f8\u4f3c\uff0c\u7279\u522b\u7684\u5730\u65b9\u662f __init__.py \u6587\u4ef6\u5c06\u96c6\u5408 \u6240\u6709\u5305\u8303\u56f4\u5185\u7684\u5b9a\u4e49\u3002 pack/ \u76ee\u5f55\u4e0b\u7684 modu.py \u6587\u4ef6\u901a\u8fc7 import pack.modu \u8bed\u53e5\u5bfc\u5165\u3002 \u8be5\u8bed\u53e5\u4f1a\u5728 pack \u76ee\u5f55\u4e0b\u5bfb\u627e __init__.py \u6587\u4ef6\uff0c\u5e76\u6267\u884c\u5176\u4e2d\u6240\u6709\u9876\u5c42 \u8bed\u53e5\u3002\u4ee5\u4e0a\u64cd\u4f5c\u4e4b\u540e\uff0c modu.py \u5185\u5b9a\u4e49\u7684\u6240\u6709\u53d8\u91cf\u3001\u65b9\u6cd5\u548c\u7c7b\u5728 pack.modu \u547d\u540d\u7a7a \u95f4\u4e2d\u5747\u53ef\u770b\u5230\u3002 \u4e00\u4e2a\u5e38\u89c1\u7684\u95ee\u9898\u662f\u5f80 __init__.py \u4e2d\u52a0\u4e86\u8fc7\u591a\u4ee3\u7801\uff0c\u968f\u7740\u9879\u76ee\u7684\u590d\u6742\u5ea6\u589e\u957f\uff0c \u76ee\u5f55\u7ed3\u6784\u8d8a\u6765\u8d8a\u6df1\uff0c\u5b50\u5305\u548c\u66f4\u6df1\u5d4c\u5957\u7684\u5b50\u5305\u53ef\u80fd\u4f1a\u51fa\u73b0\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5bfc\u5165\u591a\u5c42\u5d4c\u5957 \u7684\u5b50\u5305\u4e2d\u7684\u67d0\u4e2a\u90e8\u4ef6\u9700\u8981\u6267\u884c\u6240\u6709\u901a\u8fc7\u8def\u5f84\u91cc\u78b0\u5230\u7684 __init__.py \u6587\u4ef6\u3002\u5982\u679c\u5305\u5185\u7684\u6a21\u5757\u548c\u5b50\u5305\u6ca1\u6709\u4ee3\u7801\u5171\u4eab\u7684\u9700\u6c42\uff0c\u4f7f\u7528\u7a7a\u767d\u7684 __init__.py \u6587\u4ef6\u662f\u6b63\u5e38 \u751a\u81f3\u597d\u7684\u505a\u6cd5\u3002 \u6700\u540e\uff0c\u5bfc\u5165\u6df1\u5c42\u5d4c\u5957\u7684\u5305\u53ef\u7528\u8fd9\u4e2a\u65b9\u4fbf\u7684\u8bed\u6cd5\uff1a import very.deep.module as mod \u3002 \u8be5\u8bed\u6cd5\u5141\u8bb8\u4f7f\u7528 mod \u66ff\u4ee3\u5197\u957f\u7684 very.deep.module \u3002 \u5e38\u89c1\u6a21\u5757 \u00b6 utils \u00b6 utils\u6a21\u5757\uff0c\u987e\u540d\u601d\u4e49\uff0c\u4e00\u822c\u7528\u4e8e\u5b58\u653e\u4e00\u4e9b\u901a\u7528\u7684\u5de5\u5177\u51fd\u6570\uff0c\u901a\u8fc7\u6a21\u5757\u8c03\u7528\u5b9e\u73b0\u51fd\u6570\u590d\u7528\uff0c\u51cf\u5c11\u4ee3\u7801\u91cd\u590d\uff0c\u540c\u65f6\u5728\u4e3b\u7a0b\u5e8f\u4e2d\u9690\u85cf\u7a0b\u5e8f\u7ec6\u8282\u3002\u4f8b\u5982\uff1a print_format(str) \uff0c print_time() \uff0c compute_date() \u7b49\u7b49\u3002 \u4ec0\u4e48\u6837\u7684\u51fd\u6570\u9002\u5408\u653e\u5728utils\uff1f \u5de5\u5177\u7c7b\u51fd\u6570 \uff0c\u53ea\u8d1f\u8d23\u67d0\u4e00\u4e2a\u7279\u5b9a\u7684\u529f\u80fd\uff0c\u4e14\u4e0d\u4f9d\u9644\u4e8e\u67d0\u4e00\u4e2a\u7279\u5b9a\u7684\u7c7b\u6216\u8005\u5bf9\u8c61\u3002\u7b80\u800c\u8a00\u4e4b\u5c31\u662f**\u72ec\u7acb\u7684**\uff0c \u4e0a\u4e0b\u6587\u65e0\u5173\u7684 \uff0c\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\u4e0e\u4e3b\u7a0b\u5e8f\u4e2d\u81ea\u5b9a\u4e49\u7684\u7c7b\u548c\u5bf9\u8c61\u65e0\u5173\uff0c\u5426\u5219\u5e94\u8be5\u5199\u5728\u5bf9\u4e8e\u7684\u7c7b\u6a21\u5757\u4e2d\u3002 \u4f8b\u5982,\u6570\u636e\u8bfb\u53d6\u51fd\u6570 load_dataset(filepath) \uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u7684\u683c\u5f0f\u5fc5\u5b9a\u4e0e dataset \u9700\u8981\u7684\u683c\u5f0f\u76f8\u5173\uff0c\u65e0\u8bba\u8fd4\u56de\u7684\u662f\u4e00\u4e2a dataset \u5b9e\u4f8b\u5bf9\u8c61\u8fd8\u662f\u5217\u8868\u6216\u8005\u5b57\u5178\uff0c\u4e00\u65e6\u6570\u636e\u96c6\u5b9a\u4e49\u53d1\u751f\u53d8\u5316\uff0c\u52bf\u5fc5\u9700\u8981\u4fee\u6539\u8fd9\u4e2a\u51fd\u6570\uff0c\u56e0\u6b64\u8fd9\u4e2a\u51fd\u6570\u5e94\u8be5\u4ece\u5c5e\u4e0e dataset \uff0c\u5199\u5728 dataset \u6a21\u5757\u4e2d\uff0c\u800c\u4e0d\u662futils\u4e2d\u3002 \u5f53utils\u6a21\u5757\u4e2d\u7684\u51fd\u6570\u5f88\u591a\u65f6\uff0c\u6216\u8005\u4f60\u611f\u5230\u81c3\u80bf\u65f6\uff0c\u6bd4\u5982\u4ee3\u7801\u884c\u6570\u5df2\u7ecf\u8d85\u8fc7400\u884c\u6216\u8005\u51fd\u6570\u4e2a\u6570\u8d85\u8fc715\u4e2a\uff0c\u8fd9\u65f6\u5019\u4f60\u5e94\u8be5\u8003\u8651\u5c06\u5176\u62c6\u5206\u6210\u82e5\u5e72\u4e2a\u8fd9\u6837\u7684\u6a21\u5757\u4e86\u3002\u5b89\u88c5\u529f\u80fd\u7ec6\u5206\uff0c\u5c06\u62c6\u5206\u7684 a_utils.py \uff0c b_utils.py \u5c01\u88c5\u5728\u4e00\u4e2autils\u5305\uff0c\u8ba9\u540e\u4f7f\u7528 from utils import a_utils \u53bb\u8c03\u7528\u8fd9\u4e9b\u51fd\u6570\u3002 \u9ad8\u9636\u6280\u5de7 \uff1a\u4f7f\u7528utils\u5305\u4e2d\u7684__init__\u6a21\u5757\u5c06\u8fd9\u4e9b\u5b50\u6a21\u5757\u4e2d\u7684\u51fd\u6570\u90fd\u52a0\u8f7d\u8fdb\u6765\uff0c\u7136\u540e\u50cf\u4e4b\u524d\u4e00\u6837\u4f7f\u7528 import utils \u53bb\u8c03\u7528\u8fd9\u4e9b\u51fd\u6570\u3002 \u4f46\u662f\u4e0d\u5efa\u8bae\u4f7f\u7528 \u3002 constants \u00b6 \u5168\u5c40\u5e38\u91cf\u6a21\u5757\uff0c\u7528\u4e8e\u5b58\u653e\u6574\u4e2a\u5305\u751a\u81f3\u6574\u4e2a\u9879\u76ee\u5de5\u7a0b\u7684\u5168\u5c40\u53d8\u91cf\u3002\u4f8b\u5982\uff1a\u6570\u636e\uff0c\u65e5\u5fd7\u7b49\u6587\u4ef6\u5939\u6240\u5728\u8def\u5f84\uff1b\u7279\u5b9a\u7684\u6570\u636e\u3002 \u867d\u7136\u4e0d\u5efa\u8bae\u5c06\u9879\u76ee\u7684\u542f\u52a8\u914d\u7f6e\u53c2\u6570\u4e5f\u5b58\u653e\u5728\u8fd9\u4e2a\u6a21\u5757\u5f53\u4e2d\uff0c\u4f46\u662f\u7531\u4e8e\u4e00\u4e9b\u9879\u76ee\u6bd4\u8f83\u5c0f\uff0c\u56e0\u6b64\u5f00\u53d1\u8005\u4f1a\u53ea\u4f7f\u75281\u4e2a\u5168\u5c40\u5e38\u91cf\u6a21\u5757\u6765\u8d1f\u8d23\u6574\u4e2a\u9879\u76ee\uff0c\u4e00\u4e9b\u9879\u76ee\u7684\u542f\u52a8\u914d\u7f6e\u9009\u9879\u4e5f\u5b58\u653e\u5176\u4e2d\u3002\u4f8b\u5982\u5728\u4e00\u4e9b\u6df1\u5ea6\u5b66\u6821\u5f00\u6e90\u9879\u76ee\u7ecf\u5e38\u53ef\u89c1\uff1a\u5c06\u6a21\u578b\u8fd0\u884c\u53c2\u6570\u90fd\u5b9a\u4e49\u5728constant\u4e2d\uff0c\u5982 batch_size \uff0c learning_rate \u7b49\u7b49\u3002 configs & settings & options \u00b6 \u53c2\u8003 \uff1a Configure some options in the settings \u7a0b\u5e8f\u6240\u6709\u7684\u53ef\u53d8\u9879\u53eb\u505aSettings\u3002\u4e2d\u6587\u8bd1\u4f5c\u8bbe\u7f6e\u3002\u6240\u6709\u7684\u8bbe\u7f6e\u90fd\u662f\u201c\u53ef\u9009\u9879\u201d\uff0cOption\uff08\u9009\u9879\uff0c\u4e0d\u662f\u671f\u6743\uff09\uff0c\u56e0\u4e3a\u5728\u7a0b\u5e8f\u4e16\u754c\u91cc\u6ca1\u6709\u771f\u7684\u5f00\u653e\u5f0f\u95ee\u9898\u53ea\u6709\u9009\u62e9\u9898\uff08Option\uff09\u3002\u6539\u53d8\u53ef\u9009\u9879\u7684\u8fc7\u7a0b\u53eb\u505aConfigure\u914d\u7f6e\uff08\u52a8\u8bcd\uff09\u3002 configs\u4e0esettings\u4e24\u8005\u6ca1\u6709\u592a\u5927\u7684\u533a\u522b\uff0c\u4e14\u4e0d\u540c\u6846\u67b6\u3001\u8f6f\u4ef6\u6709\u7684\u4f7f\u7528configs\uff0c\u6709\u7684\u4f7f\u7528settings\uff0c\u968f\u9879\u76ee\u800c\u5b9a\u3002 \u603b\u800c\u8a00\u4e4b\uff0c\u9879\u76ee\u8bbe\u7f6e\u3001\u914d\u7f6e\u6a21\u5757\uff0c\u4e00\u822c\u7528\u4e8e\u7cfb\u7edf\u5168\u5c40\u73af\u5883\u7684\u8bbe\u7f6e\uff0c\u4f8b\u5982\u6570\u636e\u5e93\u8fde\u63a5\u914d\u7f6e\uff0c\u670d\u52a1\u5668IP\u914d\u7f6e\u7b49\u7b49 \u3002","title":"\u9879\u76ee\u7ed3\u6784"},{"location":"guidelines/project_structure/#_1","text":"","title":"\u9879\u76ee\u7ed3\u6784"},{"location":"guidelines/project_structure/#_2","text":"\u53c2\u8003\uff1a Python\u6700\u4f73\u5b9e\u8df5\u6307\u5357\u4e2d\u6587\u7248 \u201c\u7ed3\u6784\u5316\u201d\u7684\u5b9a\u4e49\u662f\u60a8\u5173\u6ce8\u4e8e\u600e\u6837\u4f7f\u60a8\u7684\u9879\u76ee\u6700\u597d\u5730\u6ee1\u8db3\u5b83\u7684\u5bf9\u8c61\u6027\uff0c\u6211\u4eec\u9700\u8981\u53bb\u8003\u8651\u5982\u4f55\u66f4\u597d\u5730\u5229\u7528Python\u7684\u7279\u6027\u6765\u521b\u9020\u7b80\u6d01\u3001\u9ad8\u6548\u7684\u4ee3\u7801\u3002\u5728\u5b9e\u8df5\u5c42\u9762\uff0c\u201c\u7ed3\u6784\u5316\u201d\u610f\u5473\u7740\u901a\u8fc7\u7f16\u5199\u7b80\u6d01\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u6b63\u5982\u6587\u4ef6\u7cfb\u7edf\u4e2d\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u7ec4\u7ec7\u4e00\u6837\uff0c \u4ee3\u7801\u5e94\u8be5\u4f7f\u903b\u8f91\u548c\u4f9d\u8d56\u6e05\u6670\u3002 \u5728\u4e00\u4e2a\u5065\u5eb7\u7684\u5f00\u53d1\u5468\u671f\u4e2d\uff0c\u4ee3\u7801\u98ce\u683c\uff0cAPI\u8bbe\u8ba1\u548c\u81ea\u52a8\u5316\u662f\u975e\u5e38\u5173\u952e\u7684\u3002\u540c\u6837\u7684\uff0c\u5bf9\u4e8e\u5de5\u7a0b\u7684\u67b6\u6784\u3001\u4ed3\u5e93\u7684\u7ed3\u6784\u4e5f\u662f\u5173\u952e\u7684\u4e00\u90e8\u5206\u3002 \u5f53\u5176\u4ed6\u5de5\u7a0b\u5e08\u67e5\u770b\u6216\u8005\u63a5\u624b\u60a8\u7684\u5de5\u7a0b\uff08\u4ed3\u5e93\uff09\u65f6\uff0c\u4ed6\u4eec\u4f1a\u770b\u5230\u8fd9\u4e9b: - \u5de5\u7a0b\u7684\u540d\u5b57 - \u5de5\u7a0b\u7684\u63cf\u8ff0 - \u4e00\u7cfb\u5217\u7684\u6587\u4ef6 \u53ea\u6709\u5f53\u4ed6\u4eec\u6eda\u52a8\u5230\u76ee\u5f55\u4e0b\u65b9\u65f6\u624d\u4f1a\u770b\u5230\u60a8\u5de5\u7a0b\uff08\u4ed3\u5e93\uff09\u7684README\u3002 \u5982\u679c\u60a8\u7684\u5de5\u7a0b\uff08\u4ed3\u5e93\uff09\u7684\u76ee\u5f55\u662f\u4e00\u56e2\u7cdf\uff0c\u6ca1\u6709\u6e05\u6670\u7684\u7ed3\u6784\uff0c\u4ed6\u4eec\u53ef\u80fd\u8981\u5230\u5904\u5bfb\u627e\u624d\u80fd\u627e\u5230\u60a8\u5199\u7684\u6f02\u4eae\u7684\u6587\u6863\u3002 \u6837\u4f8b\uff1a Sample \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 setup.py \u251c\u2500\u2500 requirements.txt \u251c\u2500\u2500 example \u2502 \u2514\u2500\u2500 example.py \u2502 \u2514\u2500\u2500 __init__.py \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 example.doc \u2514\u2500\u2500 tests \u2502 \u2514\u2500\u2500 test_example.py","title":"\u524d\u8a00"},{"location":"guidelines/project_structure/#_3","text":"\u5f97\u76ca\u4e8ePython\u63d0\u4f9b\u7684\u5bfc\u5165\u4e0e\u7ba1\u7406\u6a21\u5757\u7684\u65b9\u5f0f\uff0c\u7ed3\u6784\u5316Python\u9879\u76ee\u53d8\u5f97\u76f8\u5bf9\u7b80\u5355\u3002 \u8fd9\u91cc\u8bf4\u7684\u7b80\u5355\uff0c\u6307\u7684\u662f\u7ed3\u6784\u5316\u8fc7\u7a0b\u6ca1\u6709\u592a\u591a\u7ea6\u675f\u9650\u5236\u800c\u4e14\u6a21\u5757\u5bfc\u5165\u529f\u80fd\u5bb9\u6613\u638c\u63e1\u3002 \u56e0\u800c\u60a8\u53ea\u5269\u4e0b\u67b6\u6784\u6027\u7684\u5de5\u4f5c\uff0c\u5305\u62ec\u8bbe\u8ba1\u3001\u5b9e\u73b0\u9879\u76ee\u5404\u4e2a\u6a21\u5757\uff0c\u5e76\u6574\u7406\u6e05\u4ed6\u4eec\u4e4b\u95f4 \u7684\u4ea4\u4e92\u5173\u7cfb\u3002 \u5bb9\u6613\u7ed3\u6784\u5316\u7684\u9879\u76ee\u540c\u6837\u610f\u5473\u7740\u5b83\u7684\u7ed3\u6784\u5316\u5bb9\u6613\u505a\u5f97\u7cdf\u7cd5\u3002\u7cdf\u7cd5\u7ed3\u6784\u7684\u7279\u5f81\u5305\u62ec\uff1a \u591a\u91cd\u4e14\u6df7\u4e71\u7684\u5faa\u73af\u4f9d\u8d56\u5173\u7cfb \uff1a\u4f8b\u5982\uff0cStudent\u7c7b\u4e2d\u9700\u8981Teacher\u7c7b\uff0c\u800c\u540c\u6837\u7684Teacher\u7c7b\u9700\u8981\u5f15\u5165Student\u7c7b\uff0c\u8fd9\u5c31\u662f\u4e00\u79cd\u5faa\u73af\u4f9d\u8d56\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b,\u60a8\u5f97\u501f\u52a9\u4e00\u4e9b\u4e0d\u600e\u4e48\u9760\u8c31\u7684 \u5c0f\u6280\u5de7\uff0c\u6bd4\u5982\u5728\u65b9\u6cd5\u6216\u51fd\u6570\u5185\u90e8\u4f7f\u7528import\u8bed\u53e5\u3002\uff08 \u53c2\u8003\u89e3\u51b3\u529e\u6cd5 \uff09 \u9690\u542b\u8026\u5408 \uff1a\u7531\u4e8eStudent\u7c7b\u4e0eTeacher\u7c7b\u4f1a\u76f8\u4f1a\u5f71\u54cd\uff0c\u5404\u81ea\u7684\u6539\u53d8\u90fd\u53ef\u80fd\u4f1a\u5f15\u8d77\u5bf9\u65b9\u7684\u6539\u53d8\u3002\u8fd9\u6837\u7684\u60c5\u51b5\u610f\u5473\u7740 Teacher\u7c7b\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u592a\u591a\u5173\u4e8eStudent\u7c7b\u7684\u5047\u8bbe\u5173\u8054\uff08\u76f8\u53cd\u4ea6\u662f\u5982\u6b64\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u5c06\u8fd9\u4e24\u4e2a\u7c7b\u7684\u5173\u7cfb\u8fdb\u884c\u89e3\u8026\uff0c\u4f8b\u5982\u6dfb\u52a0\u4e00\u4e2a\u8bfe\u7a0b\u7c7b\u6216\u8005\u73ed\u7ea7\u7c7b\u6765\u5c06\u4e24\u8005\u8054\u7cfb\u8d77\u6765\u3002 \u5927\u91cf\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\u6216\u4e0a\u4e0b\u6587 \uff1a\u5927\u91cf\u7684\u4f7f\u7528\u53ef\u4ee5\u88ab\u4fee\u6539\u800c\u4e14\u662f\u80fd\u88ab\u4e0d\u540c\u5f15\u7528\u6216\u8005\u5bf9\u8c61\u4fee\u6539\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u51c6\u786e\u7684\u4f20\u9012 class \uff0c id \u8fd9\u6837\u786e\u5207\u7684\u53d8\u91cf\uff0c\u90a3\u51fa\u73b0bug\u7684\u65f6\u5019\u60a8\u5c31\u9700\u8981\u5f7b\u5e95\u68c0\u67e5\u5168\u5c40\u53d8\u91cf\u7684**\u6240\u6709\u5165\u53e3**\uff0c\u6765\u7406\u89e3\u4e3a\u5565\u4f1a\u53d1\u751f\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\u4e24\u4e2a\u8001\u5e08\u4e3a\u5565\u4f1a\u5728\u540c\u4e00\u4e2a\u73ed\u7ea7\u6559\u540c\u4e00\u95e8\u8bfe\u3002 \u9762\u6761\u5f0f\u4ee3\u7801 (Spaghetti code) \uff1a\u591a\u9875\u5d4c\u5957\u7684if\u8bed\u53e5\u4e0efor\u5faa\u73af\uff0c\u5305\u542b\u5927\u91cf\u590d\u5236-\u7c98\u8d34 \u7684\u8fc7\u7a0b\u4ee3\u7801\uff0c\u4e14\u6ca1\u6709\u5408\u9002\u7684\u5206\u5272\u2014\u2014\u8fd9\u6837\u7684\u4ee3\u7801\u88ab\u79f0\u4e3a\u9762\u6761\u5f0f\u4ee3\u7801\u3002Python\u4e2d\u6709\u610f\u601d \u7684\u7f29\u8fdb\u6392\u7248(\u6700\u5177\u4e89\u8bae\u7684\u7279\u6027\u4e4b\u4e00)\u4f7f\u9762\u6761\u5f0f\u4ee3\u7801\u5f88\u96be\u7ef4\u6301\uff0c\u5c24\u5176\u662f\u5728\u7eaf\u6587\u672c\u7f16\u8f91\u5668\u4e2d\uff0c\u5982vim\u7b49\u3002 \u6df7\u6c8c\u4ee3\u7801 \uff1a\u8fd9\u7c7b\u4ee3\u7801\u5305\u542b\u4e0a\u767e\u6bb5\u76f8\u4f3c\u7684\u903b\u8f91\u788e\u7247\uff0c\u901a\u5e38\u662f\u7f3a\u4e4f \u5408\u9002\u7ed3\u6784\u7684\u7c7b\u6216\u5bf9\u8c61\u3002\u5f53\u4f60\u65e0\u6cd5\u6e05\u6670\u5b9a\u4e491\u4e2a\u7c7b\u6216\u8005\u5bf9\u8c61\u65f6\uff0c\u4e0d\u77e5\u9053\u662f\u5e94\u8be5\u5b9a\u4e49\u65b0\u7684\u7c7b\u8fd8\u662f\u7ee7\u627f\u539f\u6709\u7684\u7c7b\u3001\u6216\u8005\u662f\u5426\u9700\u8981\u4f7f\u7528\u65b9\u6cd5\u91cd\u8f7d\u662f\uff0c\u4e5f\u8bb8\u60a8\u5df2\u7ecf\u9677\u5165\u4e86\u6df7\u6c8c\u4ee3\u7801\u4e2d\u3002","title":"\u7ed3\u6784\u662f\u4e00\u628a\u94a5\u5319"},{"location":"guidelines/project_structure/#_4","text":"\u53c2\u8003 \uff1a Python \u9879\u76ee\u5de5\u7a0b\u5316\u5f00\u53d1\u6307\u5357","title":"\u5de5\u7a0b\u7ed3\u6784"},{"location":"guidelines/project_structure/#_5","text":"packaging_tutorial \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 example_pkg \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 example.py \u251c\u2500\u2500 setup.py \u2514\u2500\u2500 tests \u9879\u76ee\u7ed3\u6784\u4ee5\u6839\u76ee\u5f55\u5f00\u59cb\uff0c\u4f5c\u4e3a\u9879\u76ee\u7684\u73af\u5883\u3002 \u5f53\u6709\u591a\u4e2a\u540c\u7ea7\u5305\u65f6\uff0c\u5b83\u4eec\u90fd\u662f\u6241\u5e73\u7684\u6563\u843d\u5728\u9879\u76ee\u6839\u76ee\u5f55\u3002\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u53ef\u80fd\u8fd8\u5b58\u5728\u5176\u4ed6\u975e\u5305\u76ee\u5f55\uff0c\u5982 data \u3001 docs \u7b49\u3002\u5982\u679c\u9700\u8981\u672c\u5730\u5f15\u7528\u7b2c\u4e09\u65b9\u5e93\uff0c\u4e5f\u9700\u8981\u653e\u5230\u6839\u76ee\u5f55\uff0c\u4f46\u7b2c\u4e09\u65b9\u5305\u5e76\u4e0d\u662f\u9879\u76ee\u7684\u5b50\u5305\uff0c\u800c\u662f\u5b83\u7684\u4e00\u4e2a\u5f15\u7528\u3002\u8fd9\u6837\u505a\u4f1a\u9020\u6210\u804c\u8d23\u6df7\u4e71\u3002\u5982\u4e0b\uff1a tutorial \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 data | \u2514\u2500\u2500 user.json \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 history.md \u251c\u2500\u2500 user \u2502 \u2514\u2500\u2500 __init__.py \u251c\u2500\u2500 views \u2502 \u2514\u2500\u2500 __init__.py \u251c\u2500\u2500 requests # \u8fd9\u662f\u9700\u8981\u672c\u5730\u6253\u5305\u7684\u7b2c\u4e09\u65b9\u5305 \u2514\u2500\u2500 request.py \u2502 \u2514\u2500\u2500 __init__.py \u251c\u2500\u2500 setup.py \u2514\u2500\u2500 tests \u5f53\u591a\u4e2a\u76ee\u5f55\u6241\u5e73\u7684\u5206\u5e03\u5728\u9879\u76ee\u6839\u76ee\u5f55\u65f6\uff0c\u5b83\u4eec\u626e\u6f14\u8005\u4e0d\u540c\u7684\u529f\u80fd\uff0c\u5728\u5f00\u53d1\u4e0a\uff0c\u4f1a\u5e26\u4e86\u4e00\u5b9a\u7684\u6df7\u4e71\u3002\u800c\u4e14\u5728\u6253\u5305\u548c\u6d4b\u8bd5\u4e0a\u4e5f\u4f1a\u5e26\u6765\u4e00\u4e9b\u4e0d\u4fbf\u3002 \u5728\u6253\u5305\u4e0a\uff0c\u9700\u8981\u63d0\u4f9b \u66f4\u591a\u7684\u914d\u7f6e \u6392\u9664\u4e0d\u5fc5\u8981\u7684\u76ee\u5f55\uff0c\u5982 docs \u6216\u8005\u5176\u4ed6\u4e0d\u9700\u8981\u6253\u5305\u4ec5\u9879\u76ee\u4e2d\u7684\u4e1c\u897f\u3002 \u5f53\u4f7f\u7528\u53ef\u7f16\u8f91\u5b89\u88c5\uff08 pip install -e . \uff09 \u65f6\uff0c\u4f1a\u5c06\u9879\u76ee\u6839\u76ee\u5f55\u4e2d\u7684\u6240\u6709\u4e1c\u897f\u5b89\u88c5\u5230\u73af\u5883\u4e2d\uff0c\u5305\u62ec\u4e00\u4e9b\u4e0d\u9700\u8981\u7684\u3002","title":"\u7b80\u5355\u7ed3\u6784"},{"location":"guidelines/project_structure/#src","text":"\u4ee5\u4e0b\u7684src\u7ed3\u6784\u662f\u793e\u533a\u9010\u6e10\u9075\u5b88\u7684\u4e00\u4e2a\u6807\u51c6\u3002\u867d\u7136\u793e\u533a\u4e2d\u6709\u5927\u91cf\u8001\u7684\u9879\u76ee\u4f9d\u7136\u91c7\u7528\u7b80\u5355\u5e03\u5c40\uff0c\u4f46\u65b0\u9879\u76ee**\u63a8\u8350**\u4f7f\u7528 src \u7ed3\u6784\u3002\u5982\u4e0b\u9762\u8fd9\u4e2a\u793a\u4f8b\u9879\u76ee\u7ed3\u6784\uff1a sampleproject \u251c\u2500\u2500 data \u2502 \u2514\u2500\u2500 user.json \u251c\u2500\u2500 bin \u2502 \u2514\u2500\u2500 start.bat \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 history.md \u251c\u2500\u2500 setup.py \u251c\u2500\u2500 src \u2502 \u251c\u2500\u2500 requests \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 sample \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 user \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 views \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 main.py \u251c\u2500\u2500 tests \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 user \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 views \u2502 \u2514\u2500\u2500 __init__.py \u2514\u2500\u2500 conf.ini \u2514\u2500\u2500 settings.py \u9879\u76ee\u7684\u5305\u7ed3\u6784\u5f88\u6e05\u6670\uff0c\u5728\u73af\u5883\u4e2d\u53ea\u9700\u8981\u5f15\u5165 src \u76ee\u5f55\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u5bfc\u5165\u9879\u76ee\u6e90\u4ee3\u7801\u3002\u901a\u8fc7 pip install -e . \u53ef\u7f16\u8f91\u5b89\u88c5\uff0c\u4e5f\u53ea\u4f1a\u5b89\u88c5 src \u4e2d\u7684\u5305\u3002\u7ba1\u7406\u8d77\u6765\u66f4\u52a0\u6e05\u6670\u3002","title":"src \u7ed3\u6784"},{"location":"guidelines/project_structure/#readme","text":"\u8fd9\u5e94\u8be5\u662f\u6bcf\u4e2a\u9879\u76ee\u90fd\u5e94\u8be5\u6709\u7684\u4e00\u4e2a\u6587\u4ef6\uff0c\u76ee\u7684\u662f\u80fd\u7b80\u8981\u63cf\u8ff0\u8be5\u9879\u76ee\u7684\u4fe1\u606f\uff0c\u8ba9\u8bfb\u8005\u5feb\u901f\u4e86\u89e3\u8fd9\u4e2a\u9879\u76ee\u3002 \u5b83\u9700\u8981\u8bf4\u660e\u4ee5\u4e0b\u51e0\u4e2a\u4e8b\u9879: 1 2 3 4 5 1. \u8f6f\u4ef6\u5b9a\u4f4d\uff0c\u8f6f\u4ef6\u7684\u57fa\u672c\u529f\u80fd\u3002 2. \u8fd0\u884c\u4ee3\u7801\u7684\u65b9\u6cd5: \u5b89\u88c5\u73af\u5883\u3001\u542f\u52a8\u547d\u4ee4\u7b49\u3002 3. \u7b80\u8981\u7684\u4f7f\u7528\u8bf4\u660e\u3002 4. \u4ee3\u7801\u76ee\u5f55\u7ed3\u6784\u8bf4\u660e\uff0c\u66f4\u8be6\u7ec6\u70b9\u53ef\u4ee5\u8bf4\u660e\u8f6f\u4ef6\u7684\u57fa\u672c\u539f\u7406\u3002 5. \u5e38\u89c1\u95ee\u9898\u8bf4\u660e\u3002 \u5728\u8f6f\u4ef6\u5f00\u53d1\u521d\u671f\uff0c\u7531\u4e8e\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4ee5\u4e0a\u5185\u5bb9\u53ef\u80fd\u4e0d\u660e\u786e\u6216\u8005\u53d1\u751f\u53d8\u5316\uff0c\u5e76\u4e0d\u662f\u4e00\u5b9a\u8981\u5728\u4e00\u5f00\u59cb\u5c31\u5c06\u6240\u6709\u4fe1\u606f\u90fd\u8865\u5168\u3002\u4f46\u662f\u5728\u9879\u76ee\u5b8c\u7ed3\u7684\u65f6\u5019\uff0c\u662f\u9700\u8981\u64b0\u5199\u8fd9\u6837\u7684\u4e00\u4e2a\u6587\u6863\u7684\u3002","title":"README"},{"location":"guidelines/project_structure/#requirementstxt","text":"\u8fd9\u4e2a\u6587\u4ef6\u5b58\u5728\u7684\u76ee\u7684\u662f: \u65b9\u4fbf\u5f00\u53d1\u8005\u7ef4\u62a4\u8f6f\u4ef6\u7684\u5305\u4f9d\u8d56\u3002\u5c06\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u65b0\u589e\u7684\u5305\u6dfb\u52a0\u8fdb\u8fd9\u4e2a\u5217\u8868\u4e2d\uff0c\u907f\u514d\u5728 setup.py \u5b89\u88c5\u4f9d\u8d56\u65f6\u6f0f\u6389\u8f6f\u4ef6\u5305\u3002 \u65b9\u4fbf\u8bfb\u8005\u660e\u786e\u9879\u76ee\u4f7f\u7528\u4e86\u54ea\u4e9bPython\u5305\u3002 \u8fd9\u4e2a\u6587\u4ef6\u7684\u683c\u5f0f\u662f\u6bcf\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u5305\u4f9d\u8d56\u7684\u8bf4\u660e\uff0c\u901a\u5e38\u662f numpy>=2.20.1 \u8fd9\u79cd\u683c\u5f0f\uff0c\u8981\u6c42\u662f\u8fd9\u4e2a\u683c\u5f0f\u80fd\u88ab pip \u8bc6\u522b\uff0c \u8fd9\u6837\u5c31\u53ef\u4ee5\u7b80\u5355\u7684\u901a\u8fc7 pip install -r requirements.txt \u6765\u628a\u6240\u6709Python\u5305\u4f9d\u8d56\u90fd\u88c5\u597d\u4e86\u3002 \u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 pip freeze > requirements.txt \u547d\u4ee4\u5c06\u4f60\u5f53\u524d\u7684\u73af\u5883\u6240\u5b89\u88c5\u7684\u5305\u751f\u6210 requirements.txt \u5177\u4f53\u683c\u5f0f\u8bf4\u660e\uff0c\u8bf7\u67e5\u770b\u5b98\u65b9\u6587\u6863 Requirements numpy >= 2.20 pandas docopt == 0.6.1 tqdm >= 3.4, <= 4.5 ...","title":"requirements.txt"},{"location":"guidelines/project_structure/#setup","text":"\u4e00\u822c\u6765\u8bf4\uff0c\u7528 setup.py \u6765\u7ba1\u7406\u4ee3\u7801\u7684\u6253\u5305\u3001\u5b89\u88c5\u3001\u90e8\u7f72\u95ee\u9898\u3002\u4e1a\u754c\u6807\u51c6\u7684\u5199\u6cd5\u662f\u7528Python\u6d41\u884c\u7684\u6253\u5305\u5de5\u5177 setuptools \u6765\u7ba1\u7406\u8fd9\u4e9b\u4e8b\u60c5\u3002 \u8fd9\u79cd\u65b9\u5f0f\u666e\u904d\u5e94\u7528\u4e8e\u5f00\u6e90\u9879\u76ee\u4e2d\u3002\u4e0d\u8fc7\u8fd9\u91cc\u7684\u6838\u5fc3\u601d\u60f3\u4e0d\u662f\u7528\u6807\u51c6\u5316\u7684\u5de5\u5177\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u800c\u662f\u8bf4\uff0c \u4e00\u4e2a\u9879\u76ee\u4e00\u5b9a\u8981\u6709\u4e00\u4e2a\u5b89\u88c5\u90e8\u7f72\u5de5\u5177\uff0c\u80fd\u5feb\u901f\u4fbf\u6377\u7684\u5728\u4e00\u53f0\u65b0\u673a\u5668\u4e0a\u5c06\u73af\u5883\u88c5\u597d\u3001\u4ee3\u7801\u90e8\u7f72\u597d\u548c\u5c06\u7a0b\u5e8f\u8fd0\u884c\u8d77\u6765\u3002 setuptools \u7684\u6587\u6863\u6bd4\u8f83\u5e9e\u5927\uff0c\u521a\u63a5\u89e6\u7684\u8bdd\uff0c\u53ef\u80fd\u4e0d\u592a\u597d\u627e\u5230\u5207\u5165\u70b9\u3002\u5b66\u4e60\u6280\u672f\u7684\u65b9\u5f0f\u5c31\u662f\u770b\u4ed6\u4eba\u662f\u600e\u4e48\u7528\u7684\uff0c \u53ef\u4ee5\u53c2\u8003\u4e00\u4e0bPython\u7684\u4e00\u4e2aWeb\u6846\u67b6 Flask \u662f\u5982\u4f55\u5199\u7684: Flask setup.py from setuptools import setup # Metadata goes in setup.cfg. These are here for GitHub's dependency graph. setup ( name = \"Flask\" , install_requires = [ \"Werkzeug >= 2.2.2\" , \"Jinja2 >= 3.0\" , \"itsdangerous >= 2.0\" , \"click >= 8.0\" , \"importlib-metadata >= 3.6.0; python_version < '3.10'\" , ], extras_require = { \"async\" : [ \"asgiref >= 3.2\" ], \"dotenv\" : [ \"python-dotenv\" ], }, )","title":"setup"},{"location":"guidelines/project_structure/#_6","text":"\u53c2\u8003 \uff1a Python\u6700\u4f73\u5b9e\u8df5\u6307\u5357--\u6a21\u5757","title":"\u6a21\u5757"},{"location":"guidelines/project_structure/#_7","text":"Python\u6a21\u5757\u662f\u6700\u4e3b\u8981\u7684\u62bd\u8c61\u5c42\u4e4b\u4e00\uff0c\u5e76\u4e14\u5f88\u53ef\u80fd\u662f\u6700\u81ea\u7136\u7684\u4e00\u4e2a\u3002\u62bd\u8c61\u5c42\u5141\u8bb8\u5c06\u4ee3\u7801\u5206\u4e3a \u4e0d\u540c\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u5305\u542b\u76f8\u5173\u7684\u6570\u636e\u4e0e\u529f\u80fd\u3002 \u4f8b\u5982\u5728\u9879\u76ee\u4e2d\uff0c\u4e00\u5c42\u63a7\u5236\u7528\u6237\u64cd\u4f5c\u76f8\u5173\u63a5\u53e3\uff0c\u53e6\u4e00\u5c42\u5904\u7406\u5e95\u5c42\u6570\u636e\u64cd\u4f5c\u3002\u6700\u81ea\u7136\u5206\u5f00\u8fd9\u4e24 \u5c42\u7684\u65b9\u5f0f\u662f\uff0c\u5728\u4e00\u4efd\u6587\u4ef6\u91cc\u91cd\u7ec4\u6240\u6709\u529f\u80fd\u63a5\u53e3\uff0c\u5e76\u5c06\u6240\u6709\u5e95\u5c42\u64cd\u4f5c\u5c01\u88c5\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\u4e2d\u3002 \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u63a5\u53e3\u6587\u4ef6\u9700\u8981\u5bfc\u5165\u5c01\u88c5\u5e95\u5c42\u64cd\u4f5c\u7684\u6587\u4ef6\uff0c\u53ef\u901a\u8fc7 import \u548c from ... import \u8bed\u53e5\u5b8c\u6210\u3002\u4e00\u65e6\u60a8\u4f7f\u7528 import \u8bed\u53e5\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u6a21\u5757\u3002 \u65e2\u53ef\u4ee5\u662f\u5185\u7f6e\u7684\u6a21\u5757\u5305\u62ec os \u548c sys \uff0c\u4e5f\u53ef\u4ee5\u662f\u5df2\u7ecf\u5b89\u88c5\u7684\u7b2c\u4e09\u65b9\u7684\u6a21\u5757\uff0c\u6216\u8005\u9879\u76ee \u5185\u90e8\u7684\u6a21\u5757\u3002 \u4e3a\u9075\u5b88\u98ce\u683c\u6307\u5357\u4e2d\u7684\u89c4\u5b9a\uff0c\u6a21\u5757\u540d\u79f0\u8981\u77ed\u3001\u4f7f\u7528\u5c0f\u5199\uff0c\u5e76\u907f\u514d\u4f7f\u7528\u7279\u6b8a\u7b26\u53f7\uff0c\u6bd4\u5982\u70b9(.) \u548c\u95ee\u53f7(?)\u3002\u5982 my.spam.py \u8fd9\u6837\u7684\u540d\u5b57\u662f\u5fc5\u987b\u4e0d\u80fd\u7528\u7684\uff01\u8be5\u65b9\u5f0f\u547d\u540d\u5c06\u59a8\u788d Python\u7684\u6a21\u5757\u67e5\u627e\u529f\u80fd\u3002\u5c31 my.spam.py \u6765\u8bf4\uff0cPython \u8ba4\u4e3a\u9700\u8981\u5728 my \u6587\u4ef6\u5939 \u4e2d\u627e\u5230 spam.py \u6587\u4ef6\uff0c\u5b9e\u9645\u5e76\u4e0d\u662f\u8fd9\u6837\u3002\u5982\u679c\u613f\u610f\u60a8\u53ef\u4ee5\u5c06\u6a21\u5757\u547d\u540d\u4e3a my_spam.py \uff0c \u4e0d\u8fc7\u5e76\u4e0d\u63a8\u8350\u5728\u6a21\u5757\u540d\u4e2d\u4f7f\u7528\u4e0b\u5212\u7ebf\u3002\u4f46\u662f\uff0c\u5728\u6a21\u5757\u540d\u79f0\u4e2d\u4f7f\u7528\u5176\u4ed6\u5b57\u7b26\uff08\u7a7a\u683c\u6216\u8fde\u5b57\u53f7\uff09 \u5c06\u963b\u6b62\u5bfc\u5165\uff08 - \u662f\u51cf\u6cd5\u8fd0\u7b97\u7b26\uff09\uff0c\u56e0\u6b64\u8bf7\u5c3d\u91cf\u4fdd\u6301\u6a21\u5757\u540d\u79f0\u7b80\u5355\uff0c\u4ee5\u65e0\u9700\u5206\u5f00\u5355\u8bcd\u3002 \u6700\u91cd\u8981\u7684\u662f\uff0c\u4e0d\u8981\u4f7f\u7528\u4e0b\u5212\u7ebf\u547d\u540d\u7a7a\u95f4\uff0c\u800c\u662f\u4f7f\u7528\u5b50\u6a21\u5757\u3002 # OK import library.plugin.foo # not OK import library.foo_plugin \u9664\u4e86\u4ee5\u4e0a\u7684\u547d\u540d\u9650\u5236\u5916\uff0cPython\u6587\u4ef6\u6210\u4e3a\u6a21\u5757\u6ca1\u6709\u5176\u4ed6\u7279\u6b8a\u7684\u8981\u6c42\uff0c\u4f46\u4e3a\u4e86\u5408\u7406\u5730\u4f7f\u7528\u8fd9 \u4e2a\u89c2\u5ff5\u5e76\u907f\u514d\u95ee\u9898\uff0c\u60a8\u9700\u8981\u7406\u89e3import\u7684\u539f\u7406\u673a\u5236\u3002\u5177\u4f53\u6765\u8bf4\uff0c import modu \u8bed\u53e5\u5c06 \u5bfb\u627e\u5408\u9002\u7684\u6587\u4ef6\uff0c\u5373\u8c03\u7528\u76ee\u5f55\u4e0b\u7684 modu.py \u6587\u4ef6\uff08\u5982\u679c\u8be5\u6587\u4ef6\u5b58\u5728\uff09\u3002\u5982\u679c\u6ca1\u6709 \u627e\u5230\u8fd9\u4efd\u6587\u4ef6\uff0cPython\u89e3\u91ca\u5668\u9012\u5f52\u5730\u5728 \"PYTHONPATH\" \u73af\u5883\u53d8\u91cf\u4e2d\u67e5\u627e\u8be5\u6587\u4ef6\uff0c\u5982\u679c\u4ecd\u6ca1 \u6709\u627e\u5230\uff0c\u5c06\u629b\u51fa ImportError \u5f02\u5e38\u3002 \u4e00\u65e6\u627e\u5230 modu.py \uff0cPython\u89e3\u91ca\u5668\u5c06\u5728\u9694\u79bb\u7684\u4f5c\u7528\u57df\u5185\u6267\u884c\u8fd9\u4e2a\u6a21\u5757\u3002\u6240\u6709\u9876\u5c42 \u8bed\u53e5\u90fd\u4f1a\u88ab\u6267\u884c\uff0c\u5305\u62ec\u5176\u4ed6\u7684\u5f15\u7528\u3002\u65b9\u6cd5\u4e0e\u7c7b\u7684\u5b9a\u4e49\u5c06\u4f1a\u5b58\u50a8\u5230\u6a21\u5757\u7684\u5b57\u5178\u4e2d\u3002\u7136\u540e\uff0c\u8fd9\u4e2a \u6a21\u5757\u7684\u53d8\u91cf\u3001\u65b9\u6cd5\u548c\u7c7b\u901a\u8fc7\u547d\u540d\u7a7a\u95f4\u66b4\u9732\u7ed9\u8c03\u7528\u65b9\uff0c\u8fd9\u662fPython\u4e2d\u7279\u522b\u6709\u7528\u548c\u5f3a\u5927\u7684\u6838\u5fc3\u6982\u5ff5\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528import\u8bed\u53e5\u7684\u7279\u6b8a\u5f62\u5f0f from modu import * \u6a21\u62df\u66f4\u6807\u51c6\u7684\u884c\u4e3a\u3002\u4f46 import * \u901a\u5e38 \u88ab\u8ba4\u4e3a\u662f\u4e0d\u597d\u7684\u505a\u6cd5\u3002 \u4f7f\u7528 from modu import * \u7684\u4ee3\u7801\u8f83\u96be\u9605\u8bfb\u800c\u4e14\u4f9d\u8d56\u72ec\u7acb\u6027\u4e0d\u8db3 \u3002 \u4f7f\u7528 from modu import func \u80fd\u7cbe\u786e\u5b9a\u4f4d\u60a8\u60f3\u5bfc\u5165\u7684\u65b9\u6cd5\u5e76\u5c06\u5176\u653e\u5230\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u4e2d\u3002 \u6bd4 from modu import * \u8981\u597d\u4e9b\uff0c\u56e0\u4e3a\u5b83\u660e\u786e\u5730\u6307\u660e\u5f80\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u4e2d\u5bfc\u5165\u4e86\u4ec0\u4e48\u65b9\u6cd5\uff0c\u5b83\u548c import modu \u76f8\u6bd4\u552f\u4e00\u7684\u4f18\u70b9\u662f\u4e4b\u540e\u4f7f\u7528\u65b9\u6cd5\u65f6\u53ef\u4ee5\u5c11\u6253\u70b9\u513f\u5b57\u3002 \u9664\u4e86\u7b80\u5355\u7684\u5355\u6587\u4ef6\u9879\u76ee\u5916\uff0c\u5176\u4ed6\u9879\u76ee\u9700\u8981\u80fd\u591f\u660e\u786e\u6307\u51fa\u7c7b\u548c\u65b9\u6cd5 \u7684\u51fa\u5904\uff0c\u4f8b\u5982\u4f7f\u7528 modu.func \u8bed\u53e5\uff0c\u8fd9\u5c06\u663e\u8457\u63d0\u5347\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u6613\u7406\u89e3\u6027\u3002 # bad from modu import * x = sqrt ( 4 ) # sqrt\u662f\u6a21\u5757modu\u7684\u4e00\u90e8\u5206\u4e48\uff1f\u6216\u662f\u5185\u5efa\u51fd\u6570\u4e48\uff1f\u4e0a\u6587\u5b9a\u4e49\u4e86\u4e48\uff1f # ok from modu import sqrt x = sqrt ( 4 ) # \u5982\u679c\u5728import\u8bed\u53e5\u4e0e\u8fd9\u6761\u8bed\u53e5\u4e4b\u95f4\uff0csqrt\u6ca1\u6709\u88ab\u91cd\u590d\u5b9a\u4e49\uff0c\u5b83\u4e5f\u8bb8\u662f\u6a21\u5757modu\u7684\u4e00\u90e8\u5206\u3002 # good import modu x = modu . sqrt ( 4 ) # sqrt\u663e\u7136\u662f\u5c5e\u4e8e\u6a21\u5757modu\u7684\u3002","title":"\u6a21\u5757"},{"location":"guidelines/project_structure/#_8","text":"Python\u63d0\u4f9b\u975e\u5e38\u7b80\u5355\u7684\u5305\u7ba1\u7406\u7cfb\u7edf\uff0c\u5373\u7b80\u5355\u5730\u5c06\u6a21\u5757\u7ba1\u7406\u673a\u5236\u6269\u5c55\u5230\u4e00\u4e2a\u76ee\u5f55\u4e0a(\u76ee\u5f55\u6269\u5c55\u4e3a\u5305)\u3002\u4efb\u610f\u5305\u542b __init__.py \u6587\u4ef6\u7684\u76ee\u5f55\u90fd\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2aPython\u5305\u3002\u5bfc\u5165\u4e00\u4e2a\u5305\u91cc\u4e0d\u540c \u6a21\u5757\u7684\u65b9\u5f0f\u548c\u666e\u901a\u7684\u5bfc\u5165\u6a21\u5757\u65b9\u5f0f\u76f8\u4f3c\uff0c\u7279\u522b\u7684\u5730\u65b9\u662f __init__.py \u6587\u4ef6\u5c06\u96c6\u5408 \u6240\u6709\u5305\u8303\u56f4\u5185\u7684\u5b9a\u4e49\u3002 pack/ \u76ee\u5f55\u4e0b\u7684 modu.py \u6587\u4ef6\u901a\u8fc7 import pack.modu \u8bed\u53e5\u5bfc\u5165\u3002 \u8be5\u8bed\u53e5\u4f1a\u5728 pack \u76ee\u5f55\u4e0b\u5bfb\u627e __init__.py \u6587\u4ef6\uff0c\u5e76\u6267\u884c\u5176\u4e2d\u6240\u6709\u9876\u5c42 \u8bed\u53e5\u3002\u4ee5\u4e0a\u64cd\u4f5c\u4e4b\u540e\uff0c modu.py \u5185\u5b9a\u4e49\u7684\u6240\u6709\u53d8\u91cf\u3001\u65b9\u6cd5\u548c\u7c7b\u5728 pack.modu \u547d\u540d\u7a7a \u95f4\u4e2d\u5747\u53ef\u770b\u5230\u3002 \u4e00\u4e2a\u5e38\u89c1\u7684\u95ee\u9898\u662f\u5f80 __init__.py \u4e2d\u52a0\u4e86\u8fc7\u591a\u4ee3\u7801\uff0c\u968f\u7740\u9879\u76ee\u7684\u590d\u6742\u5ea6\u589e\u957f\uff0c \u76ee\u5f55\u7ed3\u6784\u8d8a\u6765\u8d8a\u6df1\uff0c\u5b50\u5305\u548c\u66f4\u6df1\u5d4c\u5957\u7684\u5b50\u5305\u53ef\u80fd\u4f1a\u51fa\u73b0\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5bfc\u5165\u591a\u5c42\u5d4c\u5957 \u7684\u5b50\u5305\u4e2d\u7684\u67d0\u4e2a\u90e8\u4ef6\u9700\u8981\u6267\u884c\u6240\u6709\u901a\u8fc7\u8def\u5f84\u91cc\u78b0\u5230\u7684 __init__.py \u6587\u4ef6\u3002\u5982\u679c\u5305\u5185\u7684\u6a21\u5757\u548c\u5b50\u5305\u6ca1\u6709\u4ee3\u7801\u5171\u4eab\u7684\u9700\u6c42\uff0c\u4f7f\u7528\u7a7a\u767d\u7684 __init__.py \u6587\u4ef6\u662f\u6b63\u5e38 \u751a\u81f3\u597d\u7684\u505a\u6cd5\u3002 \u6700\u540e\uff0c\u5bfc\u5165\u6df1\u5c42\u5d4c\u5957\u7684\u5305\u53ef\u7528\u8fd9\u4e2a\u65b9\u4fbf\u7684\u8bed\u6cd5\uff1a import very.deep.module as mod \u3002 \u8be5\u8bed\u6cd5\u5141\u8bb8\u4f7f\u7528 mod \u66ff\u4ee3\u5197\u957f\u7684 very.deep.module \u3002","title":"\u5305"},{"location":"guidelines/project_structure/#_9","text":"","title":"\u5e38\u89c1\u6a21\u5757"},{"location":"guidelines/project_structure/#utils","text":"utils\u6a21\u5757\uff0c\u987e\u540d\u601d\u4e49\uff0c\u4e00\u822c\u7528\u4e8e\u5b58\u653e\u4e00\u4e9b\u901a\u7528\u7684\u5de5\u5177\u51fd\u6570\uff0c\u901a\u8fc7\u6a21\u5757\u8c03\u7528\u5b9e\u73b0\u51fd\u6570\u590d\u7528\uff0c\u51cf\u5c11\u4ee3\u7801\u91cd\u590d\uff0c\u540c\u65f6\u5728\u4e3b\u7a0b\u5e8f\u4e2d\u9690\u85cf\u7a0b\u5e8f\u7ec6\u8282\u3002\u4f8b\u5982\uff1a print_format(str) \uff0c print_time() \uff0c compute_date() \u7b49\u7b49\u3002 \u4ec0\u4e48\u6837\u7684\u51fd\u6570\u9002\u5408\u653e\u5728utils\uff1f \u5de5\u5177\u7c7b\u51fd\u6570 \uff0c\u53ea\u8d1f\u8d23\u67d0\u4e00\u4e2a\u7279\u5b9a\u7684\u529f\u80fd\uff0c\u4e14\u4e0d\u4f9d\u9644\u4e8e\u67d0\u4e00\u4e2a\u7279\u5b9a\u7684\u7c7b\u6216\u8005\u5bf9\u8c61\u3002\u7b80\u800c\u8a00\u4e4b\u5c31\u662f**\u72ec\u7acb\u7684**\uff0c \u4e0a\u4e0b\u6587\u65e0\u5173\u7684 \uff0c\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\u4e0e\u4e3b\u7a0b\u5e8f\u4e2d\u81ea\u5b9a\u4e49\u7684\u7c7b\u548c\u5bf9\u8c61\u65e0\u5173\uff0c\u5426\u5219\u5e94\u8be5\u5199\u5728\u5bf9\u4e8e\u7684\u7c7b\u6a21\u5757\u4e2d\u3002 \u4f8b\u5982,\u6570\u636e\u8bfb\u53d6\u51fd\u6570 load_dataset(filepath) \uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u7684\u683c\u5f0f\u5fc5\u5b9a\u4e0e dataset \u9700\u8981\u7684\u683c\u5f0f\u76f8\u5173\uff0c\u65e0\u8bba\u8fd4\u56de\u7684\u662f\u4e00\u4e2a dataset \u5b9e\u4f8b\u5bf9\u8c61\u8fd8\u662f\u5217\u8868\u6216\u8005\u5b57\u5178\uff0c\u4e00\u65e6\u6570\u636e\u96c6\u5b9a\u4e49\u53d1\u751f\u53d8\u5316\uff0c\u52bf\u5fc5\u9700\u8981\u4fee\u6539\u8fd9\u4e2a\u51fd\u6570\uff0c\u56e0\u6b64\u8fd9\u4e2a\u51fd\u6570\u5e94\u8be5\u4ece\u5c5e\u4e0e dataset \uff0c\u5199\u5728 dataset \u6a21\u5757\u4e2d\uff0c\u800c\u4e0d\u662futils\u4e2d\u3002 \u5f53utils\u6a21\u5757\u4e2d\u7684\u51fd\u6570\u5f88\u591a\u65f6\uff0c\u6216\u8005\u4f60\u611f\u5230\u81c3\u80bf\u65f6\uff0c\u6bd4\u5982\u4ee3\u7801\u884c\u6570\u5df2\u7ecf\u8d85\u8fc7400\u884c\u6216\u8005\u51fd\u6570\u4e2a\u6570\u8d85\u8fc715\u4e2a\uff0c\u8fd9\u65f6\u5019\u4f60\u5e94\u8be5\u8003\u8651\u5c06\u5176\u62c6\u5206\u6210\u82e5\u5e72\u4e2a\u8fd9\u6837\u7684\u6a21\u5757\u4e86\u3002\u5b89\u88c5\u529f\u80fd\u7ec6\u5206\uff0c\u5c06\u62c6\u5206\u7684 a_utils.py \uff0c b_utils.py \u5c01\u88c5\u5728\u4e00\u4e2autils\u5305\uff0c\u8ba9\u540e\u4f7f\u7528 from utils import a_utils \u53bb\u8c03\u7528\u8fd9\u4e9b\u51fd\u6570\u3002 \u9ad8\u9636\u6280\u5de7 \uff1a\u4f7f\u7528utils\u5305\u4e2d\u7684__init__\u6a21\u5757\u5c06\u8fd9\u4e9b\u5b50\u6a21\u5757\u4e2d\u7684\u51fd\u6570\u90fd\u52a0\u8f7d\u8fdb\u6765\uff0c\u7136\u540e\u50cf\u4e4b\u524d\u4e00\u6837\u4f7f\u7528 import utils \u53bb\u8c03\u7528\u8fd9\u4e9b\u51fd\u6570\u3002 \u4f46\u662f\u4e0d\u5efa\u8bae\u4f7f\u7528 \u3002","title":"utils"},{"location":"guidelines/project_structure/#constants","text":"\u5168\u5c40\u5e38\u91cf\u6a21\u5757\uff0c\u7528\u4e8e\u5b58\u653e\u6574\u4e2a\u5305\u751a\u81f3\u6574\u4e2a\u9879\u76ee\u5de5\u7a0b\u7684\u5168\u5c40\u53d8\u91cf\u3002\u4f8b\u5982\uff1a\u6570\u636e\uff0c\u65e5\u5fd7\u7b49\u6587\u4ef6\u5939\u6240\u5728\u8def\u5f84\uff1b\u7279\u5b9a\u7684\u6570\u636e\u3002 \u867d\u7136\u4e0d\u5efa\u8bae\u5c06\u9879\u76ee\u7684\u542f\u52a8\u914d\u7f6e\u53c2\u6570\u4e5f\u5b58\u653e\u5728\u8fd9\u4e2a\u6a21\u5757\u5f53\u4e2d\uff0c\u4f46\u662f\u7531\u4e8e\u4e00\u4e9b\u9879\u76ee\u6bd4\u8f83\u5c0f\uff0c\u56e0\u6b64\u5f00\u53d1\u8005\u4f1a\u53ea\u4f7f\u75281\u4e2a\u5168\u5c40\u5e38\u91cf\u6a21\u5757\u6765\u8d1f\u8d23\u6574\u4e2a\u9879\u76ee\uff0c\u4e00\u4e9b\u9879\u76ee\u7684\u542f\u52a8\u914d\u7f6e\u9009\u9879\u4e5f\u5b58\u653e\u5176\u4e2d\u3002\u4f8b\u5982\u5728\u4e00\u4e9b\u6df1\u5ea6\u5b66\u6821\u5f00\u6e90\u9879\u76ee\u7ecf\u5e38\u53ef\u89c1\uff1a\u5c06\u6a21\u578b\u8fd0\u884c\u53c2\u6570\u90fd\u5b9a\u4e49\u5728constant\u4e2d\uff0c\u5982 batch_size \uff0c learning_rate \u7b49\u7b49\u3002","title":"constants"},{"location":"guidelines/project_structure/#configs-settings-options","text":"\u53c2\u8003 \uff1a Configure some options in the settings \u7a0b\u5e8f\u6240\u6709\u7684\u53ef\u53d8\u9879\u53eb\u505aSettings\u3002\u4e2d\u6587\u8bd1\u4f5c\u8bbe\u7f6e\u3002\u6240\u6709\u7684\u8bbe\u7f6e\u90fd\u662f\u201c\u53ef\u9009\u9879\u201d\uff0cOption\uff08\u9009\u9879\uff0c\u4e0d\u662f\u671f\u6743\uff09\uff0c\u56e0\u4e3a\u5728\u7a0b\u5e8f\u4e16\u754c\u91cc\u6ca1\u6709\u771f\u7684\u5f00\u653e\u5f0f\u95ee\u9898\u53ea\u6709\u9009\u62e9\u9898\uff08Option\uff09\u3002\u6539\u53d8\u53ef\u9009\u9879\u7684\u8fc7\u7a0b\u53eb\u505aConfigure\u914d\u7f6e\uff08\u52a8\u8bcd\uff09\u3002 configs\u4e0esettings\u4e24\u8005\u6ca1\u6709\u592a\u5927\u7684\u533a\u522b\uff0c\u4e14\u4e0d\u540c\u6846\u67b6\u3001\u8f6f\u4ef6\u6709\u7684\u4f7f\u7528configs\uff0c\u6709\u7684\u4f7f\u7528settings\uff0c\u968f\u9879\u76ee\u800c\u5b9a\u3002 \u603b\u800c\u8a00\u4e4b\uff0c\u9879\u76ee\u8bbe\u7f6e\u3001\u914d\u7f6e\u6a21\u5757\uff0c\u4e00\u822c\u7528\u4e8e\u7cfb\u7edf\u5168\u5c40\u73af\u5883\u7684\u8bbe\u7f6e\uff0c\u4f8b\u5982\u6570\u636e\u5e93\u8fde\u63a5\u914d\u7f6e\uff0c\u670d\u52a1\u5668IP\u914d\u7f6e\u7b49\u7b49 \u3002","title":"configs &amp; settings &amp; options"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/","text":"Python \u5f00\u53d1\u8bed\u8a00\u89c4\u8303 \u00b6 \u9879\u76ee\u7ed3\u6784 \u00b6 1.\u524d\u8a00 source \u00b6 \u201c\u7ed3\u6784\u5316\u201d\u7684\u5b9a\u4e49\u662f\u60a8\u5173\u6ce8\u4e8e\u600e\u6837\u4f7f\u60a8\u7684\u9879\u76ee\u6700\u597d\u5730\u6ee1\u8db3\u5b83\u7684\u5bf9\u8c61\u6027\uff0c\u6211\u4eec\u9700\u8981\u53bb\u8003\u8651\u5982\u4f55\u66f4\u597d\u5730\u5229\u7528Python\u7684\u7279\u6027\u6765\u521b\u9020\u7b80\u6d01\u3001\u9ad8\u6548\u7684\u4ee3\u7801\u3002\u5728\u5b9e\u8df5\u5c42\u9762\uff0c\u201c\u7ed3\u6784\u5316\u201d\u610f\u5473\u7740\u901a\u8fc7\u7f16\u5199\u7b80\u6d01\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u6b63\u5982\u6587\u4ef6\u7cfb\u7edf\u4e2d\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u7ec4\u7ec7\u4e00\u6837\uff0c \u4ee3\u7801\u5e94\u8be5\u4f7f\u903b\u8f91\u548c\u4f9d\u8d56\u6e05\u6670\u3002 \u5728\u4e00\u4e2a\u5065\u5eb7\u7684\u5f00\u53d1\u5468\u671f\u4e2d\uff0c\u4ee3\u7801\u98ce\u683c\uff0cAPI\u8bbe\u8ba1\u548c\u81ea\u52a8\u5316\u662f\u975e\u5e38\u5173\u952e\u7684\u3002\u540c\u6837\u7684\uff0c\u5bf9\u4e8e\u5de5\u7a0b\u7684\u67b6\u6784\u3001\u4ed3\u5e93\u7684\u7ed3\u6784\u4e5f\u662f\u5173\u952e\u7684\u4e00\u90e8\u5206\u3002 \u5f53\u5176\u4ed6\u5de5\u7a0b\u5e08\u67e5\u770b\u6216\u8005\u63a5\u624b\u60a8\u7684\u5de5\u7a0b\uff08\u4ed3\u5e93\uff09\u65f6\uff0c\u4ed6\u4eec\u4f1a\u770b\u5230\u8fd9\u4e9b: - \u5de5\u7a0b\u7684\u540d\u5b57 - \u5de5\u7a0b\u7684\u63cf\u8ff0 - \u4e00\u7cfb\u5217\u7684\u6587\u4ef6 \u53ea\u6709\u5f53\u4ed6\u4eec\u6eda\u52a8\u5230\u76ee\u5f55\u4e0b\u65b9\u65f6\u624d\u4f1a\u770b\u5230\u60a8\u5de5\u7a0b\uff08\u4ed3\u5e93\uff09\u7684README\u3002 \u5982\u679c\u60a8\u7684\u5de5\u7a0b\uff08\u4ed3\u5e93\uff09\u7684\u76ee\u5f55\u662f\u4e00\u56e2\u7cdf\uff0c\u6ca1\u6709\u6e05\u6670\u7684\u7ed3\u6784\uff0c\u4ed6\u4eec\u53ef\u80fd\u8981\u5230\u5904\u5bfb\u627e\u624d\u80fd\u627e\u5230\u60a8\u5199\u7684\u6f02\u4eae\u7684\u6587\u6863\u3002 \u6837\u4f8b\uff1a Sample \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 setup.py \u251c\u2500\u2500 requirements.txt \u251c\u2500\u2500 example \u2502 \u2514\u2500\u2500 example.py \u2502 \u2514\u2500\u2500 __init__.py \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 example.doc \u2514\u2500\u2500 tests \u2502 \u2514\u2500\u2500 test_example.py 1.1 \u7ed3\u6784\u662f\u4e00\u628a\u94a5\u5319 \u00b6 \u5f97\u76ca\u4e8ePython\u63d0\u4f9b\u7684\u5bfc\u5165\u4e0e\u7ba1\u7406\u6a21\u5757\u7684\u65b9\u5f0f\uff0c\u7ed3\u6784\u5316Python\u9879\u76ee\u53d8\u5f97\u76f8\u5bf9\u7b80\u5355\u3002 \u8fd9\u91cc\u8bf4\u7684\u7b80\u5355\uff0c\u6307\u7684\u662f\u7ed3\u6784\u5316\u8fc7\u7a0b\u6ca1\u6709\u592a\u591a\u7ea6\u675f\u9650\u5236\u800c\u4e14\u6a21\u5757\u5bfc\u5165\u529f\u80fd\u5bb9\u6613\u638c\u63e1\u3002 \u56e0\u800c\u60a8\u53ea\u5269\u4e0b\u67b6\u6784\u6027\u7684\u5de5\u4f5c\uff0c\u5305\u62ec\u8bbe\u8ba1\u3001\u5b9e\u73b0\u9879\u76ee\u5404\u4e2a\u6a21\u5757\uff0c\u5e76\u6574\u7406\u6e05\u4ed6\u4eec\u4e4b\u95f4 \u7684\u4ea4\u4e92\u5173\u7cfb\u3002 \u5bb9\u6613\u7ed3\u6784\u5316\u7684\u9879\u76ee\u540c\u6837\u610f\u5473\u7740\u5b83\u7684\u7ed3\u6784\u5316\u5bb9\u6613\u505a\u5f97\u7cdf\u7cd5\u3002\u7cdf\u7cd5\u7ed3\u6784\u7684\u7279\u5f81\u5305\u62ec\uff1a \u591a\u91cd\u4e14\u6df7\u4e71\u7684\u5faa\u73af\u4f9d\u8d56\u5173\u7cfb\uff1a\u4f8b\u5982\uff0cStudent\u7c7b\u4e2d\u9700\u8981Teacher\u7c7b\uff0c\u800c\u540c\u6837\u7684Teacher\u7c7b\u9700\u8981\u5f15\u5165Student\u7c7b\uff0c\u8fd9\u5c31\u662f\u4e00\u76f4\u5faa\u73af\u4f9d\u8d56\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b,\u60a8\u5f97\u501f\u52a9\u4e00\u4e9b\u4e0d\u600e\u4e48\u9760\u8c31\u7684 \u5c0f\u6280\u5de7\uff0c\u6bd4\u5982\u5728\u65b9\u6cd5\u6216\u51fd\u6570\u5185\u90e8\u4f7f\u7528import\u8bed\u53e5\u3002 \u9690\u542b\u8026\u5408\uff1a\u7531\u4e8eStudent\u7c7b\u4e0eTeacher\u7c7b\u4f1a\u76f8\u4f1a\u5f71\u54cd\uff0c\u5404\u81ea\u7684\u6539\u53d8\u90fd\u53ef\u80fd\u4f1a\u5f15\u8d77\u5bf9\u65b9\u7684\u6539\u53d8\u3002\u8fd9\u6837\u7684\u60c5\u51b5\u610f\u5473\u7740 Teacher\u7c7b\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u592a\u591a\u5173\u4e8eStudent\u7c7b\u7684\u5047\u8bbe\u5173\u8054\uff08\u76f8\u53cd\u4ea6\u662f\u5982\u6b64\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u5c06\u8fd9\u4e24\u4e2a\u7c7b\u7684\u5173\u7cfb\u8fdb\u884c\u89e3\u8026\uff0c\u4f8b\u5982\u6dfb\u52a0\u4e00\u4e2a\u8bfe\u7a0b\u7c7b\u6216\u8005\u73ed\u7ea7\u7c7b\u6765\u5c06\u4e24\u8005\u8054\u7cfb\u8d77\u6765\u3002 \u5927\u91cf\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\u6216\u4e0a\u4e0b\u6587\uff1a\u5927\u91cf\u7684\u4f7f\u7528\u53ef\u4ee5\u88ab\u4fee\u6539\u800c\u4e14\u662f\u80fd\u88ab\u4e0d\u540c\u5f15\u7528\u6216\u8005\u5bf9\u8c61\u4fee\u6539\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u51c6\u786e\u7684\u4f20\u9012 class \uff0c id \u8fd9\u6837\u786e\u5207\u7684\u53d8\u91cf\uff0c\u90a3\u51fa\u73b0bug\u7684\u65f6\u5019\u60a8\u5c31\u9700\u8981\u5f7b\u5e95\u68c0\u67e5\u5168\u5c40\u53d8\u91cf\u7684**\u6240\u6709\u5165\u53e3**\uff0c\u6765\u7406\u89e3\u4e3a\u5565\u4f1a\u53d1\u751f\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\u4e24\u4e2a\u8001\u5e08\u4e3a\u5565\u4f1a\u5728\u540c\u4e00\u4e2a\u73ed\u7ea7\u6559\u540c\u4e00\u95e8\u8bfe\u3002 \u9762\u6761\u5f0f\u4ee3\u7801 (Spaghetti code) \uff1a\u591a\u9875\u5d4c\u5957\u7684if\u8bed\u53e5\u4e0efor\u5faa\u73af\uff0c\u5305\u542b\u5927\u91cf\u590d\u5236-\u7c98\u8d34 \u7684\u8fc7\u7a0b\u4ee3\u7801\uff0c\u4e14\u6ca1\u6709\u5408\u9002\u7684\u5206\u5272\u2014\u2014\u8fd9\u6837\u7684\u4ee3\u7801\u88ab\u79f0\u4e3a\u9762\u6761\u5f0f\u4ee3\u7801\u3002Python\u4e2d\u6709\u610f\u601d \u7684\u7f29\u8fdb\u6392\u7248(\u6700\u5177\u4e89\u8bae\u7684\u7279\u6027\u4e4b\u4e00)\u4f7f\u9762\u6761\u5f0f\u4ee3\u7801\u5f88\u96be\u7ef4\u6301\uff0c\u5c24\u5176\u662f\u5728\u7eaf\u6587\u672c\u7f16\u8f91\u5668\u4e2d\uff0c\u5982vim\u7b49\u3002 \u6df7\u6c8c\u4ee3\u7801\uff1a\u8fd9\u7c7b\u4ee3\u7801\u5305\u542b\u4e0a\u767e\u6bb5\u76f8\u4f3c\u7684\u903b\u8f91\u788e\u7247\uff0c\u901a\u5e38\u662f\u7f3a\u4e4f \u5408\u9002\u7ed3\u6784\u7684\u7c7b\u6216\u5bf9\u8c61\u3002\u5f53\u4f60\u65e0\u6cd5\u6e05\u6670\u5b9a\u4e491\u4e2a\u7c7b\u6216\u8005\u5bf9\u8c61\u65f6\uff0c\u4e0d\u77e5\u9053\u662f\u5e94\u8be5\u5b9a\u4e49\u65b0\u7684\u7c7b\u8fd8\u662f\u7ee7\u627f\u539f\u6709\u7684\u7c7b\u3001\u6216\u8005\u662f\u5426\u9700\u8981\u4f7f\u7528\u65b9\u6cd5\u91cd\u8f7d\u662f\uff0c\u4e5f\u8bb8\u60a8\u5df2\u7ecf\u9677\u5165\u4e86\u6df7\u6c8c\u4ee3\u7801\u4e2d\u3002 2. \u5de5\u7a0b\u7ed3\u6784 source \u00b6 2.1 \u7b80\u5355\u7ed3\u6784 \u00b6 packaging_tutorial \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 example_pkg \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 example.py \u251c\u2500\u2500 setup.py \u2514\u2500\u2500 tests \u9879\u76ee\u7ed3\u6784\u4ee5\u6839\u76ee\u5f55\u5f00\u59cb\uff0c\u4f5c\u4e3a\u9879\u76ee\u7684\u73af\u5883\u3002 \u5f53\u6709\u591a\u4e2a\u540c\u7ea7\u5305\u65f6\uff0c\u5b83\u4eec\u90fd\u662f\u6241\u5e73\u7684\u6563\u843d\u5728\u9879\u76ee\u6839\u76ee\u5f55\u3002\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u53ef\u80fd\u8fd8\u5b58\u5728\u5176\u4ed6\u975e\u5305\u76ee\u5f55\uff0c\u5982 data \u3001 docs \u7b49\u3002\u5982\u679c\u9700\u8981\u672c\u5730\u5f15\u7528\u7b2c\u4e09\u65b9\u5e93\uff0c\u4e5f\u9700\u8981\u653e\u5230\u6839\u76ee\u5f55\uff0c\u4f46\u7b2c\u4e09\u65b9\u5305\u5e76\u4e0d\u662f\u9879\u76ee\u7684\u5b50\u5305\uff0c\u800c\u662f\u5b83\u7684\u4e00\u4e2a\u5f15\u7528\u3002\u8fd9\u6837\u505a\u4f1a\u9020\u6210\u804c\u8d23\u6df7\u4e71\u3002\u5982\u4e0b\uff1a tutorial \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 data | \u2514\u2500\u2500 user.json \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 history.md \u251c\u2500\u2500 user \u2502 \u2514\u2500\u2500 __init__.py \u251c\u2500\u2500 views \u2502 \u2514\u2500\u2500 __init__.py \u251c\u2500\u2500 requests # \u8fd9\u662f\u9700\u8981\u672c\u5730\u6253\u5305\u7684\u7b2c\u4e09\u65b9\u5305 \u2514\u2500\u2500 request.py \u2502 \u2514\u2500\u2500 __init__.py \u251c\u2500\u2500 setup.py \u2514\u2500\u2500 tests \u5f53\u591a\u4e2a\u76ee\u5f55\u6241\u5e73\u7684\u5206\u5e03\u5728\u9879\u76ee\u6839\u76ee\u5f55\u65f6\uff0c\u5b83\u4eec\u626e\u6f14\u8005\u4e0d\u540c\u7684\u529f\u80fd\uff0c\u5728\u5f00\u53d1\u4e0a\uff0c\u4f1a\u5e26\u4e86\u4e00\u5b9a\u7684\u6df7\u4e71\u3002\u800c\u4e14\u5728\u6253\u5305\u548c\u6d4b\u8bd5\u4e0a\u4e5f\u4f1a\u5e26\u6765\u4e00\u4e9b\u4e0d\u4fbf\u3002 \u5728\u6253\u5305\u4e0a\uff0c\u9700\u8981\u63d0\u4f9b \u66f4\u591a\u7684\u914d\u7f6e \u6392\u9664\u4e0d\u5fc5\u8981\u7684\u76ee\u5f55\uff0c\u5982 docs \u6216\u8005\u5176\u4ed6\u4e0d\u9700\u8981\u6253\u5305\u4ec5\u9879\u76ee\u4e2d\u7684\u4e1c\u897f\u3002 \u5f53\u4f7f\u7528\u53ef\u7f16\u8f91\u5b89\u88c5\uff08 pip install -e . \uff09 \u65f6\uff0c\u4f1a\u5c06\u9879\u76ee\u6839\u76ee\u5f55\u4e2d\u7684\u6240\u6709\u4e1c\u897f\u5b89\u88c5\u5230\u73af\u5883\u4e2d\uff0c\u5305\u62ec\u4e00\u4e9b\u4e0d\u9700\u8981\u7684\u3002 2. src \u7ed3\u6784 \u00b6 \u4ee5\u4e0b\u7684src\u7ed3\u6784\u662f\u793e\u533a\u9010\u6e10\u9075\u5b88\u7684\u4e00\u4e2a\u6807\u51c6\u3002\u867d\u7136\u793e\u533a\u4e2d\u6709\u5927\u91cf\u8001\u7684\u9879\u76ee\u4f9d\u7136\u91c7\u7528\u7b80\u5355\u5e03\u5c40\uff0c\u4f46\u65b0\u9879\u76ee**\u63a8\u8350**\u4f7f\u7528 src \u7ed3\u6784\u3002 \u5982\u4e0b\u9762\u8fd9\u4e2a\u793a\u4f8b\u9879\u76ee\u7ed3\u6784\uff1a sampleproject \u251c\u2500\u2500 data \u2502 \u2514\u2500\u2500 user.json \u251c\u2500\u2500 bin \u2502 \u2514\u2500\u2500 start.bat \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 history.md \u251c\u2500\u2500 setup.py \u251c\u2500\u2500 src \u2502 \u251c\u2500\u2500 requests \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 sample \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 user \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 views \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 main.py \u251c\u2500\u2500 tests \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 user \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 views \u2502 \u2514\u2500\u2500 __init__.py \u2514\u2500\u2500 conf.ini \u2514\u2500\u2500 settings.py \u9879\u76ee\u7684\u5305\u7ed3\u6784\u5f88\u6e05\u6670\uff0c\u5728\u73af\u5883\u4e2d\u53ea\u9700\u8981\u5f15\u5165 src \u76ee\u5f55\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u5bfc\u5165\u9879\u76ee\u6e90\u4ee3\u7801\u3002\u901a\u8fc7 pip install -e . \u53ef\u7f16\u8f91\u5b89\u88c5\uff0c\u4e5f\u53ea\u4f1a\u5b89\u88c5 src \u4e2d\u7684\u5305\u3002\u7ba1\u7406\u8d77\u6765\u66f4\u52a0\u6e05\u6670\u3002 READM \u00b6 \u8fd9\u5e94\u8be5\u662f\u6bcf\u4e2a\u9879\u76ee\u90fd\u5e94\u8be5\u6709\u7684\u4e00\u4e2a\u6587\u4ef6\uff0c\u76ee\u7684\u662f\u80fd\u7b80\u8981\u63cf\u8ff0\u8be5\u9879\u76ee\u7684\u4fe1\u606f\uff0c\u8ba9\u8bfb\u8005\u5feb\u901f\u4e86\u89e3\u8fd9\u4e2a\u9879\u76ee\u3002 \u5b83\u9700\u8981\u8bf4\u660e\u4ee5\u4e0b\u51e0\u4e2a\u4e8b\u9879: 1.\u8f6f\u4ef6\u5b9a\u4f4d\uff0c\u8f6f\u4ef6\u7684\u57fa\u672c\u529f\u80fd\u3002 2.\u8fd0\u884c\u4ee3\u7801\u7684\u65b9\u6cd5: \u5b89\u88c5\u73af\u5883\u3001\u542f\u52a8\u547d\u4ee4\u7b49\u3002 3.\u7b80\u8981\u7684\u4f7f\u7528\u8bf4\u660e\u3002 4.\u4ee3\u7801\u76ee\u5f55\u7ed3\u6784\u8bf4\u660e\uff0c\u66f4\u8be6\u7ec6\u70b9\u53ef\u4ee5\u8bf4\u660e\u8f6f\u4ef6\u7684\u57fa\u672c\u539f\u7406\u3002 5.\u5e38\u89c1\u95ee\u9898\u8bf4\u660e\u3002 \u5728\u8f6f\u4ef6\u5f00\u53d1\u521d\u671f\uff0c\u7531\u4e8e\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4ee5\u4e0a\u5185\u5bb9\u53ef\u80fd\u4e0d\u660e\u786e\u6216\u8005\u53d1\u751f\u53d8\u5316\uff0c\u5e76\u4e0d\u662f\u4e00\u5b9a\u8981\u5728\u4e00\u5f00\u59cb\u5c31\u5c06\u6240\u6709\u4fe1\u606f\u90fd\u8865\u5168\u3002\u4f46\u662f\u5728\u9879\u76ee\u5b8c\u7ed3\u7684\u65f6\u5019\uff0c\u662f\u9700\u8981\u64b0\u5199\u8fd9\u6837\u7684\u4e00\u4e2a\u6587\u6863\u7684\u3002 requirements.txt \u00b6 \u8fd9\u4e2a\u6587\u4ef6\u5b58\u5728\u7684\u76ee\u7684\u662f: \u65b9\u4fbf\u5f00\u53d1\u8005\u7ef4\u62a4\u8f6f\u4ef6\u7684\u5305\u4f9d\u8d56\u3002\u5c06\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u65b0\u589e\u7684\u5305\u6dfb\u52a0\u8fdb\u8fd9\u4e2a\u5217\u8868\u4e2d\uff0c\u907f\u514d\u5728 setup.py \u5b89\u88c5\u4f9d\u8d56\u65f6\u6f0f\u6389\u8f6f\u4ef6\u5305\u3002 \u65b9\u4fbf\u8bfb\u8005\u660e\u786e\u9879\u76ee\u4f7f\u7528\u4e86\u54ea\u4e9bPython\u5305\u3002 \u8fd9\u4e2a\u6587\u4ef6\u7684\u683c\u5f0f\u662f\u6bcf\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u5305\u4f9d\u8d56\u7684\u8bf4\u660e\uff0c\u901a\u5e38\u662f numpy>=2.20.1 \u8fd9\u79cd\u683c\u5f0f\uff0c\u8981\u6c42\u662f\u8fd9\u4e2a\u683c\u5f0f\u80fd\u88ab pip \u8bc6\u522b\uff0c \u8fd9\u6837\u5c31\u53ef\u4ee5\u7b80\u5355\u7684\u901a\u8fc7 pip install -r requirements.txt \u6765\u628a\u6240\u6709Python\u5305\u4f9d\u8d56\u90fd\u88c5\u597d\u4e86\u3002 \u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 pip freeze > requirements.txt \u547d\u4ee4\u5c06\u4f60\u5f53\u524d\u7684\u73af\u5883\u6240\u5b89\u88c5\u7684\u5305\u751f\u6210 requirements.txt \u5177\u4f53\u683c\u5f0f\u8bf4\u660e\uff0c\u8bf7\u67e5\u770b\u5b98\u65b9\u6587\u6863 Requirements numpy >= 2.20 pandas docopt == 0.6.1 tqdm >= 3.4, <= 4.5 ... setup \u00b6 \u4e00\u822c\u6765\u8bf4\uff0c\u7528 setup.py \u6765\u7ba1\u7406\u4ee3\u7801\u7684\u6253\u5305\u3001\u5b89\u88c5\u3001\u90e8\u7f72\u95ee\u9898\u3002\u4e1a\u754c\u6807\u51c6\u7684\u5199\u6cd5\u662f\u7528Python\u6d41\u884c\u7684\u6253\u5305\u5de5\u5177 setuptools \u6765\u7ba1\u7406\u8fd9\u4e9b\u4e8b\u60c5\u3002 \u8fd9\u79cd\u65b9\u5f0f\u666e\u904d\u5e94\u7528\u4e8e\u5f00\u6e90\u9879\u76ee\u4e2d\u3002\u4e0d\u8fc7\u8fd9\u91cc\u7684\u6838\u5fc3\u601d\u60f3\u4e0d\u662f\u7528\u6807\u51c6\u5316\u7684\u5de5\u5177\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u800c\u662f\u8bf4\uff0c \u4e00\u4e2a\u9879\u76ee\u4e00\u5b9a\u8981\u6709\u4e00\u4e2a\u5b89\u88c5\u90e8\u7f72\u5de5\u5177\uff0c\u80fd\u5feb\u901f\u4fbf\u6377\u7684\u5728\u4e00\u53f0\u65b0\u673a\u5668\u4e0a\u5c06\u73af\u5883\u88c5\u597d\u3001\u4ee3\u7801\u90e8\u7f72\u597d\u548c\u5c06\u7a0b\u5e8f\u8fd0\u884c\u8d77\u6765\u3002 setuptools \u7684\u6587\u6863\u6bd4\u8f83\u5e9e\u5927\uff0c\u521a\u63a5\u89e6\u7684\u8bdd\uff0c\u53ef\u80fd\u4e0d\u592a\u597d\u627e\u5230\u5207\u5165\u70b9\u3002\u5b66\u4e60\u6280\u672f\u7684\u65b9\u5f0f\u5c31\u662f\u770b\u4ed6\u4eba\u662f\u600e\u4e48\u7528\u7684\uff0c \u53ef\u4ee5\u53c2\u8003\u4e00\u4e0bPython\u7684\u4e00\u4e2aWeb\u6846\u67b6 Flask \u662f\u5982\u4f55\u5199\u7684: Flask setup.py from setuptools import setup # Metadata goes in setup.cfg. These are here for GitHub's dependency graph. setup ( name = \"Flask\" , install_requires = [ \"Werkzeug >= 2.2.2\" , \"Jinja2 >= 3.0\" , \"itsdangerous >= 2.0\" , \"click >= 8.0\" , \"importlib-metadata >= 3.6.0; python_version < '3.10'\" , ], extras_require = { \"async\" : [ \"asgiref >= 3.2\" ], \"dotenv\" : [ \"python-dotenv\" ], }, ) \u914d\u7f6e\u6587\u4ef6 \u00b6 \u914d\u7f6e\u662f\u4e00\u4e2a\u9879\u76ee\u7684\u6838\u5fc3\u9a71\u52a8\uff0c\u53ef\u4ee5\u5728\u4e0d\u66f4\u6539\u6e90\u4ee3\u7801\u6216\u51cf\u5c11\u6e90\u4ee3\u7801\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\u5feb\u901f\u8c03\u6574\u9879\u76ee\u7684\u8fd0\u884c\u3002 \u4f7f\u7528\u4e2d\u5fc3\u914d\u7f6e\u9a71\u52a8\u9879\u76ee\uff0c\u80fd\u8ba9\u9879\u76ee\u7684\u4f7f\u7528\u66f4\u52a0\u7075\u6d3b\uff0c\u8fd0\u7ef4\u5de5\u4f5c\u66f4\u8f7b\u677e\u3002 \u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u91cd\u7528\u6027\uff0c\u4e0d\u518d\u6bcf\u6b21\u90fd\u53bb\u4fee\u6539\u4ee3\u7801\u5185\u90e8 \u8fd9\u610f\u5473\u7740\u5176\u4ed6\u4e0d\u592a\u61c2\u4f60\u4ee3\u7801\u5185\u90e8\u7684\u4eba\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4f60\u7684\u9879\u76ee\uff0c\u53ea\u7528\u6839\u636e\u9700\u6c42\u66f4\u6539\u914d\u7f6e\u5373\u53ef \u6709\u5229\u4e8e\u56e2\u961f\u534f\u4f5c \u6709\u5229\u4e8e\u5b89\u5168\u6570\u636e/\u79d8\u5bc6\u6570\u636e\u7684\u7ba1\u7406 \u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u9a71\u52a8\u9879\u76ee\u7684\u76f8\u5173\u57fa\u7840\u914d\u7f6e\uff0c\u5982\u9ed8\u8ba4 data \u548c logs \u6587\u4ef6\u5939\u7684\u6240\u5728\u8def\u5f84\u548c\u540d\u79f0\uff0cWeb\u9879\u76ee\u76f8\u5173\u914d\u7f6e\uff0c\u6570\u636e\u5e93\u8fde\u63a5\u76f8\u5173\u914d\u7f6e\uff0c\u7b2c\u4e09\u65b9\u5e93\u4f7f\u7528\u914d\u7f6e\u7b49\u3002\u8fd9\u4e9b\u4e0d\u540c\u914d\u7f6e\u53ef\u4ee5\u5206\u522b\u5b58\u653e\u5728\u4e0d\u540c\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u4e14\u6587\u4ef6\u7c7b\u578b\u53ef\u4ee5\u591a\u79cd\u591a\u6837\uff0c\u5982 .py \uff0c .cfg \uff0c .ini \uff0c .yaml \uff0c .json \uff0c .txt \u7b49\u3002\u914d\u7f6e\u6587\u4ef6\u4f7f\u7528\u65b9\u6cd5\u53c2\u8003\u8fd9\u4e2a \u535a\u5ba2 \u3002 \u9759\u6001\u914d\u7f6e source \u00b6 \u5728\u5f88\u591a\u5f00\u6e90\u9879\u76ee\u6216\u8005\u4e00\u4e9b\u8f83\u5c0f\u7684\u9879\u76ee\u4e2d\u5e38\u89c1\u5bf9\u914d\u7f6e\u6587\u4ef6\u7684\u4f7f\u7528\u505a\u6cd5\u662f\uff1a \u914d\u7f6e\u6587\u4ef6\u5199\u5728\u4e00\u4e2a\u6216\u591a\u4e2apython\u6587\u4ef6\u4e2d\uff0c\u6bd4\u5982\u4e0a\u6587\u7684 settings.py \u3002\u9879\u76ee\u4e2d\u54ea\u4e2a\u6a21\u5757\u7528\u5230\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u5c31\u76f4\u63a5\u901a\u8fc7 import settings \u8fd9\u79cd\u5f62\u5f0f\u6765\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u914d\u7f6e\u3002\u8fd9\u79cd\u505a\u6cd5\u4e0d\u592a\u597d\u7684\u65b9\u9762: - \u5217\u8868\u8fd9\u8ba9\u5355\u5143\u6d4b\u8bd5\u53d8\u5f97\u56f0\u96be\uff08\u56e0\u4e3a\u6a21\u5757\u5185\u90e8\u4f9d\u8d56\u4e86\u5916\u90e8\u914d\u7f6e\uff09 - \u53e6\u4e00\u65b9\u9762\u914d\u7f6e\u6587\u4ef6\u4f5c\u4e3a\u7528\u6237\u63a7\u5236\u7a0b\u5e8f\u7684\u63a5\u53e3\uff0c\u5e94\u5f53\u53ef\u4ee5\u7531\u7528\u6237\u81ea\u7531\u6307\u5b9a\u8be5\u6587\u4ef6\u7684\u8def\u5f84\u3002 - \u7a0b\u5e8f\u7ec4\u4ef6\u53ef\u590d\u7528\u6027\u592a\u5dee\uff0c\u56e0\u4e3a\u8fd9\u79cd\u8d2f\u7a7f\u6240\u6709\u6a21\u5757\u7684\u4ee3\u7801\u786c\u7f16\u7801\u65b9\u5f0f\uff0c\u4f7f\u5f97\u5927\u90e8\u5206\u6a21\u5757\u90fd\u4f9d\u8d56 conf.py \u8fd9\u4e2a\u6587\u4ef6\u3002 ## Settings # File config SOURCE_FILE = '/tmp/foo.txt' # Log config LOG_LEVEL = 'DEBUG' LOG_FORMAT = ' %(asctime)s - %(name)s - %(levelname)s - %(message)s ' ## main import config import logging logging . basicConfig ( level = settings . LOG_LEVEL , format = settings . LOG_FORMAT ) ... \u52a8\u6001\u914d\u7f6e \u00b6 \u6240\u4ee5\uff0c\u66f4\u597d\u7684\u65b9\u5f0f\u662f: - \u6a21\u5757\u7684\u914d\u7f6e\u90fd\u662f\u53ef\u4ee5\u7075\u6d3b\u914d\u7f6e\u7684\uff0c\u4e0d\u53d7\u5916\u90e8\u914d\u7f6e\u6587\u4ef6\u7684\u5f71\u54cd - \u7a0b\u5e8f\u7684\u914d\u7f6e\u4e5f\u662f\u53ef\u4ee5\u7075\u6d3b\u63a7\u5236\u7684\u3002 Dynaconf\uff08 pypi \uff0c \u5b98\u7f51 \uff09\u662f\u4e00\u4e2a\u7075\u6d3b\u7684\u4e2d\u5fc3\u914d\u7f6e\u7ba1\u7406\u5de5\u5177\uff0c\u80fd\u591f\u4ece\u4e0d\u540c\u7684\u914d\u7f6e\u6570\u636e\u5b58\u50a8\u65b9\u5f0f\u4e2d\u8bfb\u53d6\u914d\u7f6e\uff0c\u4f8b\u5982 .py \uff0c .redis \uff0c .ini \uff0c .json \u6587\u4ef6\uff0c\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u7b49\u7b49\u3002 \u5176\u5177\u6709\u5982\u4e0b\u7279\u70b9\uff1a \u52a0\u8f7d\u591a\u4e2a\u914d\u7f6e\u6e90 \u914d\u7f6e\u5206\u5c42 Django Flask \u6269\u5c55 \u652f\u6301 Redis \u548c Vault \u5728\u9879\u76ee\u4e2d\u65b0\u5efa\u914d\u7f6e\u6587\u4ef6 settings.yml ## setting foo : 1 bar : 2 \u65b0\u5efa\u914d\u7f6e\u6a21\u5757 config.py ## config.py from dynaconf import Dynaconf settings = Dynaconf ( settings_files = [ 'settings.yml' ]) \u65b0\u5efa\u4e00\u4e2a app.py \u6587\u4ef6\uff0c\u4f7f\u7528\u914d\u7f6e ## app.py from config import settings print ( settings . FOO ) print ( settings . BAR ) \u7136\u540e\u8fd0\u884c python app.py \u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u80fd\u591f\u81ea\u52a8\u83b7\u53d6 settings.yml \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u503c\u3002 \u589e\u52a0\u672c\u5730\u914d\u7f6e\u6587\u4ef6 settings.local.yml ## setting.local foo : 10 bar : 20 \u518d\u6b21\u8fd0\u884c python app.py \uff0c\u7a0b\u5e8f\u4f1a\u81ea\u52a8\u83b7\u53d6 settings.local.yml \u3002 \u8fd9\u662f\u56e0\u4e3a Dynaconf \u5728\u521d\u59cb\u5316\u662f\u4f20\u5165\u4e86\u914d\u7f6e\u6587\u4ef6\u683c\u5f0f\u4e3a settings.yml \uff0c\u5728\u52a0\u8f7d\u914d\u7f6e\u65f6\uff0c\u4f1a\u540c\u65f6\u67e5\u627e settings.local.yml \u7684\u914d\u7f6e\u6587\u4ef6\u3002 \u5e76\u5c06\u4e24\u4e2a\u914d\u7f6e\u6587\u4ef6\u7684\u5185\u5bb9\u5408\u5e76\uff0c\u5982\u679c\u5b58\u5728\u76f8\u540c\u53d8\u91cf\uff0c settings.local.yml \u4f1a\u8986\u76d6 settings.yml \u4e2d\u7684\u914d\u7f6e\u3002 Supported formats \u00b6 .toml - Dynaconf's default and recommended file format. .yaml|.yml - Recommended for Django applications. .json - Useful to reuse existing or exported settings. .ini - Useful to reuse legacy settings. .py - Not Recommended but supported for backwards compatibility. .env - Useful to automate the loading of environment variables. 3. \u6a21\u5757\u4e0e\u5bfc\u5165 source \u00b6 3.1 \u6a21\u5757 \u00b6 Python\u6a21\u5757\u662f\u6700\u4e3b\u8981\u7684\u62bd\u8c61\u5c42\u4e4b\u4e00\uff0c\u5e76\u4e14\u5f88\u53ef\u80fd\u662f\u6700\u81ea\u7136\u7684\u4e00\u4e2a\u3002\u62bd\u8c61\u5c42\u5141\u8bb8\u5c06\u4ee3\u7801\u5206\u4e3a \u4e0d\u540c\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u5305\u542b\u76f8\u5173\u7684\u6570\u636e\u4e0e\u529f\u80fd\u3002 \u4f8b\u5982\u5728\u9879\u76ee\u4e2d\uff0c\u4e00\u5c42\u63a7\u5236\u7528\u6237\u64cd\u4f5c\u76f8\u5173\u63a5\u53e3\uff0c\u53e6\u4e00\u5c42\u5904\u7406\u5e95\u5c42\u6570\u636e\u64cd\u4f5c\u3002\u6700\u81ea\u7136\u5206\u5f00\u8fd9\u4e24 \u5c42\u7684\u65b9\u5f0f\u662f\uff0c\u5728\u4e00\u4efd\u6587\u4ef6\u91cc\u91cd\u7ec4\u6240\u6709\u529f\u80fd\u63a5\u53e3\uff0c\u5e76\u5c06\u6240\u6709\u5e95\u5c42\u64cd\u4f5c\u5c01\u88c5\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\u4e2d\u3002 \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u63a5\u53e3\u6587\u4ef6\u9700\u8981\u5bfc\u5165\u5c01\u88c5\u5e95\u5c42\u64cd\u4f5c\u7684\u6587\u4ef6\uff0c\u53ef\u901a\u8fc7 import \u548c from ... import \u8bed\u53e5\u5b8c\u6210\u3002\u4e00\u65e6\u60a8\u4f7f\u7528 import \u8bed\u53e5\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u6a21\u5757\u3002 \u65e2\u53ef\u4ee5\u662f\u5185\u7f6e\u7684\u6a21\u5757\u5305\u62ec os \u548c sys\uff0c\u4e5f\u53ef\u4ee5\u662f\u5df2\u7ecf\u5b89\u88c5\u7684\u7b2c\u4e09\u65b9\u7684\u6a21\u5757\uff0c\u6216\u8005\u9879\u76ee \u5185\u90e8\u7684\u6a21\u5757\u3002 \u4e3a\u9075\u5b88\u98ce\u683c\u6307\u5357\u4e2d\u7684\u89c4\u5b9a\uff0c\u6a21\u5757\u540d\u79f0\u8981\u77ed\u3001\u4f7f\u7528\u5c0f\u5199\uff0c\u5e76\u907f\u514d\u4f7f\u7528\u7279\u6b8a\u7b26\u53f7\uff0c\u6bd4\u5982\u70b9(.) \u548c\u95ee\u53f7(?)\u3002\u5982 my.spam.py \u8fd9\u6837\u7684\u540d\u5b57\u662f\u5fc5\u987b\u4e0d\u80fd\u7528\u7684\uff01\u8be5\u65b9\u5f0f\u547d\u540d\u5c06\u59a8\u788d Python\u7684\u6a21\u5757\u67e5\u627e\u529f\u80fd\u3002\u5c31 my.spam.py \u6765\u8bf4\uff0cPython \u8ba4\u4e3a\u9700\u8981\u5728 my \u6587\u4ef6\u5939 \u4e2d\u627e\u5230 spam.py \u6587\u4ef6\uff0c\u5b9e\u9645\u5e76\u4e0d\u662f\u8fd9\u6837\u3002\u5982\u679c\u613f\u610f\u60a8\u53ef\u4ee5\u5c06\u6a21\u5757\u547d\u540d\u4e3a my_spam.py \uff0c \u4e0d\u8fc7\u5e76\u4e0d\u63a8\u8350\u5728\u6a21\u5757\u540d\u4e2d\u4f7f\u7528\u4e0b\u5212\u7ebf\u3002\u4f46\u662f\uff0c\u5728\u6a21\u5757\u540d\u79f0\u4e2d\u4f7f\u7528\u5176\u4ed6\u5b57\u7b26\uff08\u7a7a\u683c\u6216\u8fde\u5b57\u53f7\uff09 \u5c06\u963b\u6b62\u5bfc\u5165\uff08 - \u662f\u51cf\u6cd5\u8fd0\u7b97\u7b26\uff09\uff0c\u56e0\u6b64\u8bf7\u5c3d\u91cf\u4fdd\u6301\u6a21\u5757\u540d\u79f0\u7b80\u5355\uff0c\u4ee5\u65e0\u9700\u5206\u5f00\u5355\u8bcd\u3002 \u6700\u91cd\u8981\u7684\u662f\uff0c\u4e0d\u8981\u4f7f\u7528\u4e0b\u5212\u7ebf\u547d\u540d\u7a7a\u95f4\uff0c\u800c\u662f\u4f7f\u7528\u5b50\u6a21\u5757\u3002 # OK import library.plugin.foo # not OK import library.foo_plugin \u9664\u4e86\u4ee5\u4e0a\u7684\u547d\u540d\u9650\u5236\u5916\uff0cPython\u6587\u4ef6\u6210\u4e3a\u6a21\u5757\u6ca1\u6709\u5176\u4ed6\u7279\u6b8a\u7684\u8981\u6c42\uff0c\u4f46\u4e3a\u4e86\u5408\u7406\u5730\u4f7f\u7528\u8fd9 \u4e2a\u89c2\u5ff5\u5e76\u907f\u514d\u95ee\u9898\uff0c\u60a8\u9700\u8981\u7406\u89e3import\u7684\u539f\u7406\u673a\u5236\u3002\u5177\u4f53\u6765\u8bf4\uff0c import modu \u8bed\u53e5\u5c06 \u5bfb\u627e\u5408\u9002\u7684\u6587\u4ef6\uff0c\u5373\u8c03\u7528\u76ee\u5f55\u4e0b\u7684 modu.py \u6587\u4ef6\uff08\u5982\u679c\u8be5\u6587\u4ef6\u5b58\u5728\uff09\u3002\u5982\u679c\u6ca1\u6709 \u627e\u5230\u8fd9\u4efd\u6587\u4ef6\uff0cPython\u89e3\u91ca\u5668\u9012\u5f52\u5730\u5728 \"PYTHONPATH\" \u73af\u5883\u53d8\u91cf\u4e2d\u67e5\u627e\u8be5\u6587\u4ef6\uff0c\u5982\u679c\u4ecd\u6ca1 \u6709\u627e\u5230\uff0c\u5c06\u629b\u51faImportError\u5f02\u5e38\u3002 \u4e00\u65e6\u627e\u5230 modu.py \uff0cPython\u89e3\u91ca\u5668\u5c06\u5728\u9694\u79bb\u7684\u4f5c\u7528\u57df\u5185\u6267\u884c\u8fd9\u4e2a\u6a21\u5757\u3002\u6240\u6709\u9876\u5c42 \u8bed\u53e5\u90fd\u4f1a\u88ab\u6267\u884c\uff0c\u5305\u62ec\u5176\u4ed6\u7684\u5f15\u7528\u3002\u65b9\u6cd5\u4e0e\u7c7b\u7684\u5b9a\u4e49\u5c06\u4f1a\u5b58\u50a8\u5230\u6a21\u5757\u7684\u5b57\u5178\u4e2d\u3002\u7136\u540e\uff0c\u8fd9\u4e2a \u6a21\u5757\u7684\u53d8\u91cf\u3001\u65b9\u6cd5\u548c\u7c7b\u901a\u8fc7\u547d\u540d\u7a7a\u95f4\u66b4\u9732\u7ed9\u8c03\u7528\u65b9\uff0c\u8fd9\u662fPython\u4e2d\u7279\u522b\u6709\u7528\u548c\u5f3a\u5927\u7684\u6838\u5fc3\u6982\u5ff5\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528import\u8bed\u53e5\u7684\u7279\u6b8a\u5f62\u5f0f from modu import * \u6a21\u62df\u66f4\u6807\u51c6\u7684\u884c\u4e3a\u3002\u4f46 import * \u901a\u5e38 \u88ab\u8ba4\u4e3a\u662f\u4e0d\u597d\u7684\u505a\u6cd5\u3002 \u4f7f\u7528 from modu import * \u7684\u4ee3\u7801\u8f83\u96be\u9605\u8bfb\u800c\u4e14\u4f9d\u8d56\u72ec\u7acb\u6027\u4e0d\u8db3 \u3002 \u4f7f\u7528 from modu import func \u80fd\u7cbe\u786e\u5b9a\u4f4d\u60a8\u60f3\u5bfc\u5165\u7684\u65b9\u6cd5\u5e76\u5c06\u5176\u653e\u5230\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u4e2d\u3002 \u6bd4 from modu import * \u8981\u597d\u4e9b\uff0c\u56e0\u4e3a\u5b83\u660e\u786e\u5730\u6307\u660e\u5f80\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u4e2d\u5bfc\u5165\u4e86\u4ec0\u4e48\u65b9\u6cd5\uff0c\u5b83\u548c import modu \u76f8\u6bd4\u552f\u4e00\u7684\u4f18\u70b9\u662f\u4e4b\u540e\u4f7f\u7528\u65b9\u6cd5\u65f6\u53ef\u4ee5\u5c11\u6253\u70b9\u513f\u5b57\u3002 \u9664\u4e86\u7b80\u5355\u7684\u5355\u6587\u4ef6\u9879\u76ee\u5916\uff0c\u5176\u4ed6\u9879\u76ee\u9700\u8981\u80fd\u591f\u660e\u786e\u6307\u51fa\u7c7b\u548c\u65b9\u6cd5 \u7684\u51fa\u5904\uff0c\u4f8b\u5982\u4f7f\u7528 modu.func \u8bed\u53e5\uff0c\u8fd9\u5c06\u663e\u8457\u63d0\u5347\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u6613\u7406\u89e3\u6027\u3002 # bad from modu import * x = sqrt ( 4 ) # sqrt\u662f\u6a21\u5757modu\u7684\u4e00\u90e8\u5206\u4e48\uff1f\u6216\u662f\u5185\u5efa\u51fd\u6570\u4e48\uff1f\u4e0a\u6587\u5b9a\u4e49\u4e86\u4e48\uff1f # ok from modu import sqrt x = sqrt ( 4 ) # \u5982\u679c\u5728import\u8bed\u53e5\u4e0e\u8fd9\u6761\u8bed\u53e5\u4e4b\u95f4\uff0csqrt\u6ca1\u6709\u88ab\u91cd\u590d\u5b9a\u4e49\uff0c\u5b83\u4e5f\u8bb8\u662f\u6a21\u5757modu\u7684\u4e00\u90e8\u5206\u3002 # good import modu x = modu . sqrt ( 4 ) # sqrt\u663e\u7136\u662f\u5c5e\u4e8e\u6a21\u5757modu\u7684\u3002 3.2 \u5305 \u00b6 Python\u63d0\u4f9b\u975e\u5e38\u7b80\u5355\u7684\u5305\u7ba1\u7406\u7cfb\u7edf\uff0c\u5373\u7b80\u5355\u5730\u5c06\u6a21\u5757\u7ba1\u7406\u673a\u5236\u6269\u5c55\u5230\u4e00\u4e2a\u76ee\u5f55\u4e0a(\u76ee\u5f55\u6269 \u5c55\u4e3a\u5305)\u3002 \u4efb\u610f\u5305\u542b __init__.py \u6587\u4ef6\u7684\u76ee\u5f55\u90fd\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2aPython\u5305\u3002\u5bfc\u5165\u4e00\u4e2a\u5305\u91cc\u4e0d\u540c \u6a21\u5757\u7684\u65b9\u5f0f\u548c\u666e\u901a\u7684\u5bfc\u5165\u6a21\u5757\u65b9\u5f0f\u76f8\u4f3c\uff0c\u7279\u522b\u7684\u5730\u65b9\u662f __init__.py \u6587\u4ef6\u5c06\u96c6\u5408 \u6240\u6709\u5305\u8303\u56f4\u5185\u7684\u5b9a\u4e49\u3002 pack/ \u76ee\u5f55\u4e0b\u7684 modu.py \u6587\u4ef6\u901a\u8fc7 import pack.modu \u8bed\u53e5\u5bfc\u5165\u3002 \u8be5\u8bed\u53e5\u4f1a\u5728 pack \u76ee\u5f55\u4e0b\u5bfb\u627e __init__.py \u6587\u4ef6\uff0c\u5e76\u6267\u884c\u5176\u4e2d\u6240\u6709\u9876\u5c42 \u8bed\u53e5\u3002\u4ee5\u4e0a\u64cd\u4f5c\u4e4b\u540e\uff0c modu.py \u5185\u5b9a\u4e49\u7684\u6240\u6709\u53d8\u91cf\u3001\u65b9\u6cd5\u548c\u7c7b\u5728 pack.modu \u547d\u540d\u7a7a \u95f4\u4e2d\u5747\u53ef\u770b\u5230\u3002 \u4e00\u4e2a\u5e38\u89c1\u7684\u95ee\u9898\u662f\u5f80 __init__.py \u4e2d\u52a0\u4e86\u8fc7\u591a\u4ee3\u7801\uff0c\u968f\u7740\u9879\u76ee\u7684\u590d\u6742\u5ea6\u589e\u957f\uff0c \u76ee\u5f55\u7ed3\u6784\u8d8a\u6765\u8d8a\u6df1\uff0c\u5b50\u5305\u548c\u66f4\u6df1\u5d4c\u5957\u7684\u5b50\u5305\u53ef\u80fd\u4f1a\u51fa\u73b0\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5bfc\u5165\u591a\u5c42\u5d4c\u5957 \u7684\u5b50\u5305\u4e2d\u7684\u67d0\u4e2a\u90e8\u4ef6\u9700\u8981\u6267\u884c\u6240\u6709\u901a\u8fc7\u8def\u5f84\u91cc\u78b0\u5230\u7684 __init__.py \u6587\u4ef6\u3002\u5982\u679c \u5305\u5185\u7684\u6a21\u5757\u548c\u5b50\u5305\u6ca1\u6709\u4ee3\u7801\u5171\u4eab\u7684\u9700\u6c42\uff0c\u4f7f\u7528\u7a7a\u767d\u7684 __init__.py \u6587\u4ef6\u662f\u6b63\u5e38 \u751a\u81f3\u597d\u7684\u505a\u6cd5\u3002 \u6700\u540e\uff0c\u5bfc\u5165\u6df1\u5c42\u5d4c\u5957\u7684\u5305\u53ef\u7528\u8fd9\u4e2a\u65b9\u4fbf\u7684\u8bed\u6cd5\uff1a import very.deep.module as mod \u3002 \u8be5\u8bed\u6cd5\u5141\u8bb8\u4f7f\u7528 mod \u66ff\u4ee3\u5197\u957f\u7684 very.deep.module \u3002 3.3 \u5bfc\u5165 source \u00b6 \u5bfc\u5165\u603b\u5e94\u8be5\u653e\u5728\u6587\u4ef6\u9876\u90e8\uff0c\u4f4d\u4e8e\u6a21\u5757\u6ce8\u91ca\u548c\u6587\u6863\u5b57\u7b26\u4e32\u4e4b\u540e\uff0c\u6a21\u5757\u5168\u5c40\u53d8\u91cf\u548c\u5e38\u91cf\u4e4b\u524d\u3002\u5bfc\u5165\u5e94\u8be5\u6309\u7167\u4ece\u6700\u901a\u7528\u5230\u6700\u4e0d\u901a\u7528\u7684\u987a\u5e8f\u5206\u7ec4\uff1a Future \u5bfc\u5165\u8bed\u53e5\uff1a from __future__ import print_function \u6807\u51c6\u5e93\u5bfc\u5165\uff1a import sys \u7b2c\u4e09\u65b9 \u6a21\u5757\u6216\u5305\u5bfc\u5165\uff1a import tensorflow as tf \u4ee3\u7801\u5e93\u5b50\u5305\u5bfc\u5165\uff1a from otherproject.ai import mind \u5df2\u5f03\u7528\uff1a \u4e0e\u6b64\u6587\u4ef6\u5c5e\u4e8e\u540c\u4e00\u9876\u7ea7\u5b50\u5305\u7684\u5e94\u7528\u7a0b\u5e8f\u7279\u5b9a\u5bfc\u5165\u3002\u4f8b\u5982\uff1a from myproject.backend.hgwells import time_machine \u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\u4e4b\u524d\u7684 Google Python \u98ce\u683c\u662f\u8fd9\u4e48\u505a\u7684\uff0c\u4f46\u73b0\u5728\u5df2\u7ecf\u4e0d\u63a8\u8350\u4e86\u3002 \u65b0\u7684\u4ee3\u7801\u4e0d\u8981\u8fd9\u4e48\u505a \u3002\u53ea\u9700\u5c06\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u5b50\u5305\u5bfc\u5165\u4e0e\u5176\u4ed6\u5b50\u5305\u5bfc\u5165\u4e00\u6837\u5bf9\u5f85\u5373\u53ef\u3002 \u5f3a\u70c8\u5efa\u8bae \uff1a - \u4ec5\u5bf9\u5305\u548c\u6a21\u5757\u4f7f\u7528\u5bfc\u5165,\u800c\u4e0d\u5355\u72ec\u5bfc\u5165\u51fd\u6570\u6216\u8005\u7c7b\u3002 typing \u6a21\u5757\u4f8b\u5916 - \u4f7f\u7528\u6a21\u5757\u7684**\u5168\u8def\u5f84\u540d**\u6765\u5bfc\u5165\u6bcf\u4e2a\u6a21\u5757 - \u5bfc\u5165\u65f6\u4e0d\u8981\u4f7f\u7528\u76f8\u5bf9\u540d\u79f0 ( from .x import y )\u3002 \u5373\u4f7f\u6a21\u5757\u5728\u540c\u4e00\u4e2a\u5305\u4e2d, \u4e5f\u8981\u4f7f\u7528\u5b8c\u6574\u5305\u540d\u3002 - \u4ec5\u5f53\u7f29\u5199 z \u662f\u901a\u7528\u7f29\u5199\u65f6\u624d\u53ef\u4f7f\u7528 import y as z .(\u6bd4\u5982 np \u4ee3\u8868 numpy ) \u8bed\u8a00\u89c4\u8303 source \u00b6 \u5f02\u5e38 \u00b6 \u6b63\u5e38\u64cd\u4f5c\u4ee3\u7801\u7684\u63a7\u5236\u6d41\u4e0d\u4f1a\u548c\u9519\u8bef\u5904\u7406\u4ee3\u7801\u6df7\u5728\u4e00\u8d77. \u5f53\u67d0\u79cd\u6761\u4ef6\u53d1\u751f\u65f6, \u5b83\u4e5f\u5141\u8bb8\u63a7\u5236\u6d41\u8df3\u8fc7\u591a\u4e2a\u6846\u67b6. \u4f8b\u5982, \u4e00\u6b65\u8df3\u51faN\u4e2a\u5d4c\u5957\u7684\u51fd\u6570, \u800c\u4e0d\u5fc5\u7ee7\u7eed\u6267\u884c\u9519\u8bef\u7684\u4ee3\u7801. \u4f7f\u7528\u4ee5\u4e0b try ... execpt ... \u8bed\u53e5\u6765\u6355\u83b7\u53ef\u80fd\u53d1\u751f\u7684\u5f02\u5e38\u3002 try : xxx except Exception as e : xxx else : # \u6ca1\u6709\u6355\u83b7\u5230\u5f02\u5e38\u624d\u6267\u884c xxx # \u6216\u8005finally try : xxx except Exception as e : xxx finally : # \u65e0\u8bba\u6709\u6ca1\u6709\u6355\u83b7\u5230\u5f02\u5e38\u90fd\u6267\u884c xxx \u4f7f\u7528\u5f02\u5e38\u5fc5\u987b\u9075\u5b88\u7279\u5b9a\u6761\u4ef6\uff1a \u4f18\u5148\u5408\u7406\u7684\u4f7f\u7528\u5185\u7f6e\u5f02\u5e38\u7c7b\uff0c \u4f8b\u5982 ValueError \uff0c TypeError \uff0c OSError \u7b49\u7b49\u3002 \u4e0d\u8981\u4f7f\u7528 assert \u8bed\u53e5\u6765\u9a8c\u8bc1\u516c\u5171API\u7684\u53c2\u6570\u503c. assert \u662f\u7528\u6765\u4fdd\u8bc1\u5185\u90e8\u6b63\u786e\u6027\u7684,\u800c\u4e0d\u662f\u7528\u6765\u5f3a\u5236\u7ea0\u6b63\u53c2\u6570\u4f7f\u7528\uff0c\u8fd9\u79cd\u60c5\u51b5\u5e94\u8be5\u4f7f\u7528 raise \u8bed\u53e5\u6765\u629b\u51fa\u5f02\u5e38\u3002 \u81ea\u5b9a\u4e49\u5f02\u5e38\u5e94\u7ee7\u627f\u5185\u5efa\u7684 Exception \u7c7b\uff0c\u4e14\u5f02\u5e38\u7c7b\u7684\u547d\u540d\u540e\u7f00\u4e3a**Error**\uff0c \u5982 ReadError \u7b49\u3002 \u6c38\u8fdc\u4e0d\u8981\u4f7f\u7528 except: \u8bed\u53e5\u6765\u6355\u83b7\u6240\u6709\u5f02\u5e38, \u4e5f\u4e0d\u8981\u6355\u83b7 Exception \u6216\u8005 StandardError \u3002 \u5426\u5219python\u4f1a\u6355\u83b7**\u6240\u6709\u5f02\u5e38**\uff08\u5305\u62ec**\u8bed\u6cd5\u9519\u8bef**\uff09\uff0c\u56e0\u6b64\u4f7f\u7528 except: \u6216\u8005 except Exception: \uff0c\u5f88\u5bb9\u6613\u9690\u85cf\u771f\u6b63\u7684**Bug**\uff0c\u5e76\u4e14\u4e0d\u5bb9\u6613\u5b9a\u4f4d\u67e5\u627e\u3002 \u5c3d\u91cf\u51cf\u5c11 try/except \u5757\u4e2d\u7684\u4ee3\u7801\u91cf\u3002 try \u5757\u7684\u4f53\u79ef\u8d8a\u5927, \u671f\u671b\u4e4b\u5916\u7684\u5f02\u5e38\u5c31\u8d8a\u5bb9\u6613\u88ab\u89e6\u53d1. \u8fd9\u79cd\u60c5\u51b5\u4e0b, try/except \u5757\u5c06\u9690\u85cf\u771f\u6b63\u7684\u9519\u8bef \u4f7f\u7528finally\u5b50\u53e5\u6765\u6267\u884c\u90a3\u4e9b\u65e0\u8bbatry\u5757\u4e2d\u6709\u6ca1\u6709\u5f02\u5e38\u90fd\u5e94\u8be5\u88ab\u6267\u884c\u7684\u4ee3\u7801. \u8fd9\u5bf9\u4e8e\u6e05\u7406\u8d44\u6e90\u5e38\u5e38\u5f88\u6709\u7528, \u4f8b\u5982\u5173\u95ed\u6587\u4ef6 #### 4.2 \u5168\u5c40\u53d8\u91cf \u867d\u7136\u5168\u5c40\u53d8\u91cf\u6709\u65f6\u5f88\u65b9\u4fbf\u5f88\u597d\u7528,\u4f46\u662f\u5bfc\u5165\u65f6\u53ef\u80fd\u6539\u53d8\u6a21\u5757\u884c\u4e3a, \u56e0\u4e3a\u5bfc\u5165\u6a21\u5757\u65f6\u4f1a\u5bf9\u6a21\u5757\u7ea7\u53d8\u91cf\u8d4b\u503c\u3002\u4f8b\u5982C\u6a21\u5757\u4eceA\u6a21\u5757\u4e2d\u5bfc\u5165B\u53d8\u91cf\uff0c\u5728C\u6a21\u5757\u4e2d\u4fee\u6539B\u53d8\u91cf\u4f1a\u5f71\u54cdA\u4e2d\u7684B\u53d8\u91cf\uff0c\u4f5c\u7528\u7b49\u540c\u4e8e\u51fd\u6570\u4e2d\u4fee\u6539\u53ef\u53d8\u53c2\u6570\u3002 \u6ce8 \uff1a\u8fd9\u91cc\u7684\u53d8\u91cf\u6307\u7684\u662fpython\u4e2d\u7684\u53ef\u53d8\u7c7b\u578b\u3002 \u9f13\u52b1\u4f7f\u7528\u6a21\u5757\u7ea7\u7684\u5e38\u91cf\uff0c\u4e14\u5e38\u91cf\u547d\u540d\u5fc5\u987b\u5168\u90e8\u5927\u5199\uff0c\u4f7f\u7528 _ \u8fdb\u884c\u5206\u9694\u3002 \u82e5\u5fc5\u987b\u8981\u4f7f\u7528\u5168\u5c40\u53d8\u91cf,\u5e94\u5728\u6a21\u5757\u5185\u58f0\u660e\u5168\u5c40\u53d8\u91cf,\u5e76\u5728\u540d\u79f0\u524d _ \u4f7f\u4e4b\u6210\u4e3a\u6a21\u5757\u5185\u90e8\u53d8\u91cf.\u5916\u90e8\u8bbf\u95ee\u5fc5\u987b\u901a\u8fc7\u6a21\u5757\u7ea7\u7684\u516c\u5171\u51fd\u6570. \u5d4c\u5957/\u5c40\u90e8/\u5185\u90e8\u7c7b\u6216\u51fd\u6570\uff08\u8fdb\u9636\u6280\u5de7\uff09 \u00b6 \u524d\u63d0\uff1a \u7c7b\u53ef\u4ee5\u5b9a\u4e49\u5728\u65b9\u6cd5, \u51fd\u6570\u6216\u8005\u7c7b\u4e2d \u51fd\u6570\u53ef\u4ee5\u5b9a\u4e49\u5728\u65b9\u6cd5\u6216\u51fd\u6570\u4e2d \u4e0d\u53ef\u53d8\u7c7b\u578b\u7684\u53d8\u91cf\u5bf9\u5d4c\u5957\u51fd\u6570\u662f\u53ea\u8bfb\u7684\u3002\u5373\u5185\u5d4c\u51fd\u6570\u53ef\u4ee5\u8bfb\u5916\u90e8\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf,\u4f46\u662f\u65e0\u6cd5\u6539\u5199,\u9664\u975e\u4f7f\u7528 nonlocal \u5bf9\u8be5\u53d8\u91cf\u8fdb\u884c\u58f0\u660e\u3002 \u5185\u5d4c\u51fd\u6570\u548c\u7c7b\u4f1a\u4f7f\u5916\u90e8\u51fd\u6570\u7684**\u53ef\u8bfb\u6027\u53d8\u5dee** \u4f7f\u7528\u5185\u90e8\u7c7b\u6216\u8005\u5185\u5d4c\u51fd\u6570\u53ef\u4ee5\u5ffd\u89c6\u4e00\u4e9b\u8b66\u544a\u3002\u4f46\u662f\u5e94\u8be5\u907f\u514d\u4f7f\u7528\u5185\u5d4c\u51fd\u6570\u6216\u7c7b\uff0c\u9664\u975e\u662f\u60f3\u8986\u76d6\u67d0\u4e9b\u503c\u3002 \u82e5\u60f3\u5bf9\u6a21\u5757\u7684\u7528\u6237\u9690\u85cf\u67d0\u4e2a\u51fd\u6570\uff0c\u4e0d\u8981\u91c7\u7528\u5d4c\u5957\u5b83\u6765\u9690\u85cf\uff0c\u5e94\u8be5\u5728\u9700\u8981\u88ab\u9690\u85cf\u7684\u65b9\u6cd5\u7684\u6a21\u5757\u7ea7\u540d\u79f0\u52a0 _ \u524d\u7f00,\u8fd9\u6837\u5b83\u4f9d\u7136\u662f\u53ef\u4ee5\u88ab\u6d4b\u8bd5\u7684\u3002 # test 1 def func (): i = 1 l = [ 1 , 2 ] def anonymous_func (): # i is readable only # \u56e0\u6b64\u5bf9i\u7684\u64cd\u4f5c\u4e0d\u5f71\u54cd\u5916\u90e8\u7684i print ( i ) # i=1 l . append ( 1 ) # l\u662flist\uff0c\u5c5e\u4e8e\u53ef\u53d8\u7c7b\u578b print ( l ) # l= [1,2,1] print ( i ) # i=1 print ( l ) # l= [1,2,1] # test 2 def func (): i = 1 def anonymous_func (): nonlocal i i = 2 print ( i ) # i = 2 print ( i ) # i=2 \u63a8\u5bfc\u5f0f\u4e0e\u751f\u6210\u5f0f \u00b6 \u5217\u8868\uff0c\u5b57\u5178\u548c\u96c6\u5408\u7684\u63a8\u5bfc\u4e0e\u751f\u6210\u5f0f\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u6d01\u9ad8\u6548\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u5bb9\u5668\u548c\u8fed\u4ee3\u5668, \u800c\u4e0d\u5fc5\u501f\u52a9 map() \uff0c filter() \uff0c\u6216\u8005 lambda \u3002\u5143\u7ec4\u662f\u6ca1\u6709\u63a8\u5bfc\u5f0f\u7684, () \u5185\u52a0\u7c7b\u4f3c\u63a8\u5bfc\u5f0f\u7684\u53e5\u5f0f\u8fd4\u56de\u7684\u662f\u4e2a\u751f\u6210\u5668\u3002 \u4f7f\u7528\u5efa\u8bae \u53ef\u4ee5\u5728\u7b80\u5355\u60c5\u51b5\u4e0b\u4f7f\u7528 \u6bcf\u4e2a\u90e8\u5206\u5e94\u8be5\u5355\u72ec\u7f6e\u4e8e\u4e00\u884c\uff1a\u6620\u5c04\u8868\u8fbe\u5f0f\uff0cfor\u8bed\u53e5\uff0c\u8fc7\u6ee4\u5668\u8868\u8fbe\u5f0f \u7981\u6b62\u591a\u91cdfor\u8bed\u53e5\u6216\u8fc7\u6ee4\u5668\u8868\u8fbe\u5f0f\uff0c\u590d\u6742\u60c5\u51b5\u4e0b\u8fd8\u662f\u4f7f\u7528\u5faa\u73af Good result = [ mapping_expr for value in iterable if filter_expr ] values = [ func ( value ) for value in values if filter ( value )] squares_generator = ( x ** 2 for x in range ( 10 )) adult_names = { user [ \"name\" ] for user in users if user [ 'age' ] >= 18 } Bad result = [( x , y ) for x in range ( 10 ) for y in range ( 5 ) if x * y > 10 ] return (( x , y , z ) for x in xrange ( 5 ) for y in xrange ( 5 ) if x != y for z in xrange ( 5 ) if y != z ) \u8fed\u4ee3\u5668\u4e0e\u64cd\u4f5c\u7b26 \u00b6 \u5bb9\u5668\u7c7b\u578b\uff0c\u50cf\u5b57\u5178\u548c\u5217\u8868\uff0c\u5b9a\u4e49\u4e86\u9ed8\u8ba4\u7684\u8fed\u4ee3\u5668\u548c\u5173\u7cfb\u6d4b\u8bd5\u64cd\u4f5c\u7b26(in\u548cnot in)\u3002\u5b83\u4eec\u76f4\u63a5\u8868\u8fbe\u4e86\u64cd\u4f5c\uff0c\u6ca1\u6709\u989d\u5916\u7684\u65b9\u6cd5\u8c03\u7528\u3002 \u4f7f\u7528\u9ed8\u8ba4\u64cd\u4f5c\u7b26\u7684\u51fd\u6570\u662f\u901a\u7528\u7684\u3002 \u5b83\u53ef\u4ee5\u7528\u4e8e\u652f\u6301\u8be5\u64cd\u4f5c\u7684\u4efb\u4f55\u7c7b\u578b\u3002 Good for key in adict : ... if obj in alist : ... for line in afile : ... # \u8fed\u4ee3\u5668\uff0c\u4e00\u6b21\u4e00\u884c\u5730\u8bfb\u53d6\u6587\u4ef6 for k , v in dict . iteritems (): ... Bad for key in adict . keys (): ... if not adict . has_key ( key ): ... for line in afile . readlines (): ... # readlines()\u4f1a\u8bfb\u53d6\u5168\u90e8\u6587\u4ef6\u52a0\u8f7d\u5230\u5185\u5b58 \u751f\u6210\u5668 \u00b6 \u751f\u6210\u5668\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u8fed\u4ee3\u5668\u3002 \u6240\u8c13\u751f\u6210\u5668\uff08\u51fd\u6570\uff09\uff0c\u5c31\u662f\u6bcf\u5f53\u5b83\u6267\u884c\u4e00\u6b21\u751f\u6210 yield \u8bed\u53e5\uff0c\u5b83\u5c31\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u8fd9\u4e2a\u8fed\u4ee3\u5668\u751f\u6210\u4e00\u4e2a\u503c\u3002\u751f\u6210\u503c\u540e\uff0c\u751f\u6210\u5668\u51fd\u6570\u7684\u8fd0\u884c\u72b6\u6001\u5c06\u88ab\u6302\u8d77\uff0c\u76f4\u5230\u4e0b\u4e00\u6b21\u751f\u6210\u3002 # example def get_batch ( dataset ): for data in dataset : batch_data = process ( data ) yield batch_data for batch in get_batch ( dataset ): output = model ( batch ) ... Lambda \u00b6 lambda\u5728\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e2d\u5b9a\u4e49\u533f\u540d\u51fd\u6570. \u5e38\u7528\u4e8e\u4e3a map() \u548c filter() \u4e4b\u7c7b\u7684\u9ad8\u9636\u51fd\u6570\u5b9a\u4e49\u56de\u8c03\u51fd\u6570\u6216\u8005\u64cd\u4f5c\u7b26\u3002 \u9002\u7528\u4e8e\u5355\u884c\u51fd\u6570\uff0c\u4e00\u822c\u4e0d\u8d85\u8fc760-80\u4e2a\u5b57\u7b26 \u6ca1\u6709\u51fd\u6570\u540d\u610f\u5473\u7740\u5806\u6808\u8ddf\u8e2a\u66f4\u96be\u7406\u89e3\uff0c \u96be\u4ee5\u9605\u8bfb\u548c\u8c03\u8bd5 \u7531\u4e8elambda\u51fd\u6570\u901a\u5e38\u53ea\u5305\u542b\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u56e0\u6b64\u5176\u8868\u8fbe\u80fd\u529b\u6709\u9650 \u5bf9\u4e8e\u5e38\u89c1\u7684\u64cd\u4f5c\u7b26\uff0c\u4f8b\u5982\u4e58\u6cd5\u64cd\u4f5c\u7b26\uff0c\u4f7f\u7528 operator \u6a21\u5757\u4e2d\u7684\u51fd\u6570\u4ee5\u4ee3\u66fflambda\u51fd\u6570. \u4f8b\u5982, \u63a8\u8350\u4f7f\u7528 operator.mul , \u800c\u4e0d\u662f lambda x, y: x * y # example sorted_values = sorted ( values , key = lambda x : x [ 0 ]) \u6761\u4ef6\u8868\u8fbe\u5f0f \u00b6 \u6761\u4ef6\u8868\u8fbe\u5f0f(\u53c8\u540d\u4e09\u5143\u8fd0\u7b97\u7b26)\u662f\u5bf9\u4e8eif\u8bed\u53e5\u7684\u4e00\u79cd\u66f4\u4e3a\u7b80\u77ed\u7684\u53e5\u6cd5\u89c4\u5219. \u4f8b\u5982: x = 1 if cond else 2 \u3002 \u5199\u6cd5\u4e0a\u63a8\u8350\u771f\u5b9e\u8868\u8fbe\u5f0f\uff0c if \u8868\u8fbe\u5f0f\uff0c else \u8868\u8fbe\u5f0f\u6bcf\u4e2a\u72ec\u5360\u4e00\u884c\u3002\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u63a8\u8350\u4f7f\u7528\u5b8c\u6574\u7684if\u8bed\u53e5\u3002 device = torch . device ( 'cuda' ) if torch . cuda . is_available () else torch . device ( 'cpu' ) # or device = torch . device ( 'cuda' if torch . cuda . is_available () else 'cpu' ) \u9ed8\u8ba4\u53c2\u6570\u503c \u00b6 \u4f60\u53ef\u4ee5\u5728\u51fd\u6570\u53c2\u6570\u5217\u8868\u7684\u6700\u540e\u6307\u5b9a\u53d8\u91cf\u7684\u503c, \u4f8b\u5982\uff0c def foo(a, b = 0): \u3002\u5982\u679c\u8c03\u7528foo\u65f6\u53ea\u5e26\u4e00\u4e2a\u53c2\u6570\uff0c\u5219b\u88ab\u8bbe\u4e3a0\u3002\u5982\u679c\u5e26\u4e24\u4e2a\u53c2\u6570\uff0c\u5219b\u7684\u503c\u7b49\u4e8e\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002 \u6ce8 \uff1a\u9ed8\u8ba4\u53c2\u6570\u53ea\u5728\u6a21\u5757\u52a0\u8f7d\u65f6\u6c42\u503c\u4e00\u6b21\u3002\u5982\u679c\u53c2\u6570\u662f\u5217\u8868\u6216\u5b57\u5178\u4e4b\u7c7b\u7684\u53ef\u53d8\u7c7b\u578b\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u95ee\u9898\u3002\u5982\u679c\u51fd\u6570\u4fee\u6539\u4e86\u5bf9\u8c61\uff08\u4f8b\u5982\u5411\u5217\u8868\u8ffd\u52a0\u9879\uff09\uff0c\u9ed8\u8ba4\u503c\u5c31\u88ab\u4fee\u6539\u4e86\u3002 Good\uff1a def foo ( a , b : List [ int ] = None ): if b is None : b = [] # Empty tuple OK since tuples are immutable def foo ( a , b : Sequence = ()): Bad\uff1a def foo ( a , b = []): def foo ( a , b = {}): def foo ( a , b = time . time ()): True\u4e0eFalse \u00b6 Python\u5728\u5e03\u5c14\u4e0a\u4e0b\u6587\u4e2d\u4f1a\u5c06\u67d0\u4e9b\u503c\u6c42\u503c\u4e3a False \u3002\u6309\u7b80\u5355\u7684\u76f4\u89c9\u6765\u8bb2\uff0c\u5c31\u662f\u6240\u6709\u7684\u201d\u7a7a\u201d\u503c\u90fd\u88ab\u8ba4\u4e3a\u662f False \u3002 0 \uff0c [] \uff0c {} \uff0c \"\" \u90fd\u88ab\u8ba4\u4e3a\u662f False \u3002 \u6ce8\u610f\uff1aFalse is not None \uff0c\u4f7f\u7528 if not x \u4e0e if x is not None \u662f\u4e0d\u540c\u7684\u5224\u65ad\u6761\u4ef6\uff0c\u6ce8\u610f\u4f7f\u7528\u60c5\u51b5\u3002 \u5c3d\u53ef\u80fd\u4f7f\u7528\u9690\u5f0f\u7684false, \u4f8b\u5982: \u4f7f\u7528 if foo: \u800c\u4e0d\u662f if foo != []: \u6c38\u8fdc\u4e0d\u8981\u7528==\u5c06\u4e00\u4e2a\u5e03\u5c14\u91cf\u4e0e False \u76f8\u6bd4\u8f83\u3002\u4f7f\u7528 if not x: \u4ee3\u66ff\u3002 \u5982\u679c\u4f60\u9700\u8981\u533a\u5206 False \u548c None , \u4f60\u5e94\u8be5\u7528\u50cf if not x and x is not None: \u8fd9\u6837\u7684\u8bed\u53e5\u3002 \u5bf9\u4e8e\u5e8f\u5217(\u5b57\u7b26\u4e32\uff0c\u5217\u8868\uff0c\u5143\u7ec4)\uff0c if not seq: \u6216\u8005 if seq: \u6bd4 if len(seq): \u6216 if not len(seq): \u8981\u66f4\u597d\u3002 \u5904\u7406\u6574\u6570\u65f6\uff0c\u4f7f\u7528\u9690\u5f0f False \u53ef\u80fd\u4f1a\u5f97\u4e0d\u507f\u5931(\u5373\u4e0d\u5c0f\u5fc3\u5c06 None \u5f53\u505a0\u6765\u5904\u7406)\u3002\u4f60\u53ef\u4ee5\u5c06\u4e00\u4e2a\u5df2\u77e5\u662f\u6574\u578b(\u4e14\u4e0d\u662f len() \u7684\u8fd4\u56de\u7ed3\u679c)\u7684\u503c\u4e0e0\u6bd4\u8f83.\u3001 \u6ce8\u610f \u20190\u2019 (\u5b57\u7b26\u4e32)\u4f1a\u88ab\u5f53\u505a True Good\uff1a if not users : print ( 'no users' ) if foo == 0 : self . handle_zero () if i % 10 == 0 : self . handle_multiple_of_ten () def f ( x = None ): if x is None : x = [] Bad\uff1a if len ( users ) == 0 : print 'no users' if foo is not None and not foo : #\u6761\u4ef6\u5224\u65ad\u987a\u5e8f\u53cd\u4e86 self . handle_zero () if not i % 10 : self . handle_multiple_of_ten () def f ( x = None ): x = x or [] #### \u8fc7\u65f6\u7684\u8bed\u8a00\u7279\u6027 \u5c3d\u53ef\u80fd\u4f7f\u7528\u5b57\u7b26\u4e32\u65b9\u6cd5\u53d6\u4ee3\u5b57\u7b26\u4e32\u6a21\u5757 \u4f7f\u7528\u51fd\u6570\u8c03\u7528\u8bed\u6cd5\u53d6\u4ee3 apply() \u4f7f\u7528\u5217\u8868\u63a8\u5bfc\u5f0f\uff0c for \u5faa\u73af\u53d6\u4ee3 filter() \uff0c map() \u4ee5\u53ca reduce() \u3002 \u65b9\u6cd5\u88c5\u9970\u5668 \u00b6 \u7528\u4e8e\u51fd\u6570\u53ca\u65b9\u6cd5\u7684\u88c5\u9970\u5668 (\u4e5f\u5c31\u662f@\u6807\u8bb0)\u3002 \u6700\u5e38\u89c1\u7684\u88c5\u9970\u5668\u662f @classmethod \u548c @staticmethod \uff0c\u7528\u4e8e\u5c06\u5e38\u89c4\u51fd\u6570\u8f6c\u6362\u6210\u7c7b\u65b9\u6cd5\u6216\u9759\u6001\u65b9\u6cd5\u3002 \u4e0d\u8fc7\uff0c\u88c5\u9970\u5668\u8bed\u6cd5\u4e5f\u5141\u8bb8\u7528\u6237\u81ea\u5b9a\u4e49\u88c5\u9970\u5668\u3002\u7279\u522b\u5730\uff0c\u5bf9\u4e8e\u67d0\u4e2a\u51fd\u6570 my_decorator \uff0c\u4e0b\u9762\u7684\u4e24\u6bb5\u4ee3\u7801\u662f\u7b49\u6548\u7684\uff1a class C ( object ): @my_decorator def method ( self ): # method body ... # equal to class C ( object ): def method ( self ): # method body ... method = my_decorator ( method ) \u88c5\u9970\u5668\u53ef\u4ee5\u5728\u51fd\u6570\u88ab\u6267\u884c\u4e4b\u524d\u5148\u505a\u4e00\u4e0b\u9884\u5904\u7406\uff0c\u4e5f\u5c31\u662f\u5728\u51fd\u6570\u5df2\u6709\u7684\u529f\u80fd\u4e0a\u6dfb\u52a0\u989d\u5916\u7684\u529f\u80fd\uff0c\u4f46\u4fdd\u6301\u5df2\u6709\u51fd\u6570\u4e0d\u53d8\uff08enforce invariant\uff09\u3002\u5bf9\u4e8e\u7ecf\u5e38\u8c03\u7528\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u88c5\u9970\u5668\uff0c\u51cf\u5c11\u4e00\u4e9b\u91cd\u590d\u4ee3\u7801\uff0c\u4f8b\u5982\uff1a login_required \uff0c check_value \u7b49\u7b49\u3002 \u5982\u679c\u597d\u5904\u5f88\u663e\u7136, \u5c31\u660e\u667a\u800c\u8c28\u614e\u7684\u4f7f\u7528\u88c5\u9970\u5668 \u4f7f\u7528\u88c5\u9970\u5668\u65f6\uff0c\u6587\u6863\u5e94\u8be5\u6e05\u6670\u7684\u8bf4\u660e\u8be5\u51fd\u6570\u662f\u4e00\u4e2a\u88c5\u9970\u5668 \u9664\u975e\u662f\u4e3a\u4e86\u5c06\u65b9\u6cd5\u548c\u73b0\u6709\u7684API\u96c6\u6210\uff0c\u5426\u5219\u4e0d\u8981\u4f7f\u7528 staticmethod \u3002\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5c06\u65b9\u6cd5\u5c01\u88c5\u6210\u6a21\u5757\u7ea7\u7684\u51fd\u6570\u53ef\u4ee5\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\u3002 \u8c28\u614e\u4f7f\u7528 classmethod \uff0c\u901a\u5e38\u53ea\u5728\u5b9a\u4e49\u5907\u9009\u6784\u9020\u51fd\u6570\uff0c\u6216\u8005\u5199\u7528\u4e8e\u4fee\u6539\u8bf8\u5982\u8fdb\u7a0b\u7ea7\u7f13\u5b58\u7b49\u5fc5\u8981\u7684\u5168\u5c40\u72b6\u6001\u7684\u7279\u5b9a\u7c7b\u65b9\u6cd5\u624d\u7528\u3002 \u4ee3\u7801\u7c7b\u578b\u6ce8\u91ca \u00b6 \u4f60\u53ef\u4ee5\u6839\u636e PEP-484 \u6765\u5bf9 python3 \u4ee3\u7801\u8fdb\u884c\u6ce8\u91ca,\u5e76\u4f7f\u7528\u8bf8\u5982 pytype \u4e4b\u7c7b\u7684\u7c7b\u578b\u68c0\u67e5\u5de5\u5177\u6765\u68c0\u67e5\u4ee3\u7801\u3002 \u7c7b\u578b\u6ce8\u91ca\u65e2\u53ef\u4ee5\u5199\u5728\u6e90\u7801\uff0c\u4e5f\u53ef\u4ee5\u5199\u5728 pyi \u4e2d\u3002\u63a8\u8350\u5c3d\u91cf\u5199\u5728\u6e90\u7801\u91cc,\u5bf9\u4e8e\u7b2c\u4e09\u65b9\u6269\u5c55\u5305,\u53ef\u4ee5\u5199\u5728pyi\u6587\u4ef6\u91cc\u3002 \u7528\u4e8e\u51fd\u6570\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u6ce8\u91ca\uff1a def func ( a : int ) -> List [ int ]: def func ( s : str , ls : Optional [ str , List [ str ]] = None ) -> str \u98ce\u683c\u89c4\u8303 \u00b6 \u884c\u957f\u5ea6 \u00b6 \u4e00\u884c\u4ee3\u7801\u7684\u957f\u5ea6\u9ed8\u8ba4\u4e0d\u8d85\u8fc780\u4e2a\u5b57\u7b26\uff08\u542b\u7a7a\u683c\uff09\u3002\u7531\u4e8e\u73b0\u5728\u663e\u793a\u5668\u66f4\u5927\u7684\u5c3a\u5bf8\u548c\u66f4\u9ad8\u7684\u50cf\u7d20\uff0c\u8fd9\u4e2a\u89c4\u8303\u6709\u70b9\u8fc7\u65f6\uff0c\u56e0\u6b64\u4e00\u884c\u4e0d\u8d85\u8fc7120\u4e2a\u5b57\u7b26\u4e5f\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002 \u4ee5\u4e0b\u573a\u666f\u662f\u4f8b\u5916\uff1a \u957f\u7684 import \u8bed\u53e5\uff0c\u4f8b\u5982\u4ece\u67d0\u4e00\u6a21\u5757\u4e2d\u8c03\u7528\u591a\u4e2a\u51fd\u6570\u7b49 \u6ce8\u91ca\u4e2d\u7684URL\uff0c \u6587\u4ef6\u8def\u5f84\uff0c\u6216\u4e00\u4e9b\u7279\u5b9a\u7684\u957fToken \u4e0d\u4fbf\u4e8e\u6362\u884c\uff0c\u4e0d\u5305\u542b\u7a7a\u683c\u7684\u6a21\u5757\u7ea7\u5b57\u7b26\u4e32\u5e38\u91cf\uff0c\u6bd4\u5982URL\u6216\u8005\u8def\u5f84 Python\u4f1a\u5c06**\u5706\u62ec\u53f7\u3001\u4e2d\u62ec\u53f7\u548c\u82b1\u62ec\u53f7**\u4e2d\u7684\u884c**\u9690\u5f0f\u5730\u8fde\u63a5**\u8d77\u6765\uff1a foo_bar ( self , width , height , color = 'black' , design = None , x = 'foo' , emphasis = None , highlight = 0 ) x = ( 'This will build a very long long ' 'long long long long long long string' ) # http://www.example.com/us/developer/documentation/api/content/v2.0/csv_file_name_extension_full_specification.html \u62ec\u53f7 \u00b6 \u5b81\u7f3a\u6bcb\u6ee5\u7684\u4f7f\u7528\u62ec\u53f7\u3002 \u9664\u975e\u662f\u7528\u4e8e\u5b9e\u73b0\u884c\u8fde\u63a5\u6216\u8005\u5143\u7ec4\uff0c \u5426\u5219\u4e0d\u8981\u5728\u8fd4\u56de\u8bed\u53e5\u6216\u6761\u4ef6\u8bed\u53e5\u4e2d\u4f7f\u7528\u62ec\u53f7\u3002 Good if x and y : return value return spam , beans return ( spam , beans ) x = ( 'This will build a very long long ' 'long long long long long long string' ) Bad if ( x ): return ( foo ) \u7f29\u8fdb \u00b6 \u75284\u4e2a\u7a7a\u683c\u6765\u7f29\u8fdb\u4ee3\u7801 \u9664\u975e\u5728IDE\u4e2d\uff0c\u5426\u5219\u4e0d\u8981\u4f7f\u7528Tab \u4e5f\u4e0d\u8981Tab\u548c\u7a7a\u683c\u6df7\u7528 \u591a\u884c\u65f6\uff0c\u6ce8\u610f\u6362\u884c\u5782\u76f4\u5bf9\u9f50 Good # Aligned with opening delimiter foo = long_function_name ( var_one , var_two , var_three , var_four ) # Aligned with opening delimiter in a dictionary foo = { long_dictionary_key : value1 + value2 , ... } # 4-space hanging indent in a dictionary foo = { long_dictionary_key : long_dictionary_value , ... } Bad # Stuff on first line forbidden foo = long_function_name ( var_one , var_two , var_three , var_four ) # No hanging indent in a dictionary foo = { long_dictionary_key : long_dictionary_value , ... } \u5e8f\u5217\u5143\u7d20\u5c3e\u90e8\u9017\u53f7 \u00b6 \u4ec5\u5f53 ] , ) , } \u548c\u672b\u4f4d\u5143\u7d20\u4e0d\u5728\u540c\u4e00\u884c\u65f6\uff0c\u63a8\u8350\u4f7f\u7528\u5e8f\u5217\u5143\u7d20\u5c3e\u90e8\u9017\u53f7. \u5f53\u672b\u4f4d\u5143\u7d20\u5c3e\u90e8\u6709\u9017\u53f7\u65f6\uff0c\u5143\u7d20\u540e\u7684\u9017\u53f7\u53ef\u4ee5\u6307\u793a YAPF \u5c06\u5e8f\u5217\u683c\u5f0f\u5316\u4e3a\u6bcf\u884c\u4e00\u9879\u3002 Good golomb4 = [ 0 , 4 , 6 , ] Bad golomb4 = [ 0 , 4 , 6 ] \u7a7a\u884c \u00b6 \u9876\u7ea7\u5b9a\u4e49\u4e4b\u95f4\u7a7a\u4e24\u884c \u7c7b\u65b9\u6cd5\u5b9a\u4e49\u4e4b\u95f4\u7a7a\u4e00\u884c \u51fd\u6570\u6216\u65b9\u6cd5\u4e2d\uff0c\u67d0\u4e9b\u5730\u65b9\u8981\u662f\u4f60\u89c9\u5f97\u5408\u9002\uff0c\u5c31\u7a7a\u4e00\u884c \u6ce8\u91ca \u00b6 \u6587\u6863\u5b57\u7b26\u4e32\uff08 __doc__ \uff09 \u00b6 Python\u6709\u4e00\u79cd\u72ec\u4e00\u65e0\u4e8c\u7684\u7684\u6ce8\u91ca\u65b9\u5f0f\uff1a\u4f7f\u7528\u6587\u6863\u5b57\u7b26\u4e32\u3002\u6587\u6863\u5b57\u7b26\u4e32\u662f\u5305\uff0c\u6a21\u5757\uff0c\u7c7b\u6216\u51fd\u6570\u91cc\u7684\u7b2c\u4e00\u4e2a\u8bed\u53e5\u3002\u8fd9\u4e9b\u5b57\u7b26\u4e32\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u7684 __doc__ \u6210\u5458\u88ab\u81ea\u52a8\u63d0\u53d6\uff0c\u5e76\u4e14\u88abpydoc\u6240\u7528\u3002(\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u6a21\u5757\u4e0a\u8fd0\u884cpydoc\u8bd5\u4e00\u628a\uff0c\u770b\u770b\u5b83\u957f\u4ec0\u4e48\u6837)\u3002\u6211\u4eec\u5bf9\u6587\u6863\u5b57\u7b26\u4e32\u7684\u60ef\u4f8b\u662f\u4f7f\u7528\u4e09\u91cd\u53cc\u5f15\u53f7\u201d\u201d\u201d( PEP-257 )\u3002 \u4e00\u4e2a\u6587\u6863\u5b57\u7b26\u4e32\u5e94\u8be5\u8fd9\u6837\u7ec4\u7ec7\uff1a\u9996\u5148\u662f\u4e00\u884c\u4ee5\u53e5\u53f7\uff0c\u95ee\u53f7\u6216\u60ca\u53f9\u53f7\u7ed3\u5c3e\u7684\u6982\u8ff0(\u6216\u8005\u8be5\u6587\u6863\u5b57\u7b26\u4e32\u5355\u7eaf\u53ea\u6709\u4e00\u884c)\u3002\u63a5\u7740\u662f\u4e00\u4e2a\u7a7a\u884c\u3002\u63a5\u7740\u662f\u6587\u6863\u5b57\u7b26\u4e32\u5269\u4e0b\u7684\u90e8\u5206\uff0c\u5b83\u5e94\u8be5\u4e0e\u6587\u6863\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u884c\u7684\u7b2c\u4e00\u4e2a\u5f15\u53f7\u5bf9\u9f50\u3002 \u6a21\u5757 \u00b6 \u6bcf\u4e2a\u6587\u4ef6\u5e94\u8be5\u5305\u542b\u4e00\u4e2a\u8bb8\u53ef\u6837\u677f\uff0c\u6839\u636e\u9879\u76ee\u4f7f\u7528\u7684\u8bb8\u53ef(\u4f8b\u5982\uff0cApache 2.0\uff0cBSD\uff0cLGPL\uff0cGPL), \u9009\u62e9\u5408\u9002\u7684\u6837\u677f\u3002\u5176\u5f00\u5934\u5e94\u662f\u5bf9\u6a21\u5757\u5185\u5bb9\u548c\u7528\u6cd5\u7684\u63cf\u8ff0\u3002\u591a\u89c1\u4e8e\u5f00\u6e90\u4ed3\u5e93\u3002 \u51fd\u6570\u4e0e\u65b9\u6cd5 \u00b6 \u4e0b\u6587\u6240\u6307\u7684\u51fd\u6570\uff0c\u5305\u62ec\u51fd\u6570\uff0c\u65b9\u6cd5\uff0c\u4ee5\u53ca\u751f\u6210\u5668\u3002 \u4e00\u4e2a\u51fd\u6570\u5fc5\u987b\u8981\u6709\u6587\u6863\u5b57\u7b26\u4e32\uff0c\u9664\u975e\u5b83\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6: 1. \u5916\u90e8\u4e0d\u53ef\u89c1 2. \u975e\u5e38\u77ed\u5c0f 3. \u7b80\u5355\u660e\u4e86 \u6587\u6863\u5b57\u7b26\u4e32\u5e94\u8be5\u5305\u542b\u51fd\u6570\u505a\u4ec0\u4e48\uff0c\u4ee5\u53ca\u8f93\u5165\u548c\u8f93\u51fa\u7684\u8be6\u7ec6\u63cf\u8ff0\u3002\u901a\u5e38\uff0c\u4e0d\u5e94\u8be5\u63cf\u8ff0\u201c\u600e\u4e48\u505a\u201d\u6216\u8005\u5b9e\u73b0\u7ec6\u8282\uff0c\u9664\u975e\u662f\u4e00\u4e9b\u590d\u6742\u7684\u7b97\u6cd5\u3002\u5bf9\u4e8e\u590d\u6742\u7684\u4ee3\u7801\uff0c\u5728\u4ee3\u7801\u65c1\u8fb9\u52a0\u6ce8\u91ca\u4f1a\u6bd4\u4f7f\u7528\u6587\u6863\u5b57\u7b26\u4e32\u66f4\u6709\u610f\u4e49\u3002 \u8986\u76d6\u57fa\u7c7b\u7684\u5b50\u7c7b\u65b9\u6cd5\u5e94\u6709\u4e00\u4e2a\u7c7b\u4f3c See base class \u7684\u7b80\u5355\u6ce8\u91ca\u6765\u6307\u5f15\u8bfb\u8005\u5230\u57fa\u7c7b\u65b9\u6cd5\u7684\u6587\u6863\u6ce8\u91ca\u3002\u82e5\u91cd\u8f7d\u7684\u5b50\u7c7b\u65b9\u6cd5\u548c\u57fa\u7c7b\u65b9\u6cd5\u6709\u5f88\u5927\u4e0d\u540c\uff0c\u90a3\u4e48\u6ce8\u91ca\u4e2d\u5e94\u8be5\u6307\u660e\u8fd9\u4e9b\u4fe1\u606f\u3002 \u5173\u4e8e\u51fd\u6570\u7684\u51e0\u4e2a\u65b9\u9762\u5e94\u8be5\u5728\u7279\u5b9a\u7684\u5c0f\u8282\u4e2d\u8fdb\u884c\u63cf\u8ff0\u8bb0\u5f55\uff0c\u8fd9\u51e0\u4e2a\u65b9\u9762\u5982\u4e0b\u6587\u6240\u8ff0\u3002\u6bcf\u8282\u5e94\u8be5\u4ee5\u4e00\u4e2a\u6807\u9898\u884c\u5f00\u59cb\u3002\u6807\u9898\u884c\u4ee5\u5192\u53f7\u7ed3\u5c3e\u3002\u9664\u6807\u9898\u884c\u5916\uff0c\u8282\u7684\u5176\u4ed6\u5185\u5bb9\u5e94\u88ab\u7f29\u8fdb2\u4e2a\u7a7a\u683c\u3002 Args: \u5217\u51fa\u6bcf\u4e2a\u53c2\u6570\u7684\u540d\u5b57, \u5e76\u5728\u540d\u5b57\u540e\u4f7f\u7528\u4e00\u4e2a\u5192\u53f7\u548c\u4e00\u4e2a\u7a7a\u683c, \u5206\u9694\u5bf9\u8be5\u53c2\u6570\u7684\u63cf\u8ff0.\u5982\u679c\u63cf\u8ff0\u592a\u957f\u8d85\u8fc7\u4e86\u5355\u884c\u6700\u5927\u957f\u5ea6\uff08 80 \u6216\u8005\u81ea\u5b9a\u4e49\uff09\u5b57\u7b26\u6570\uff0c\u4f7f\u75282\u6216\u80054\u4e2a\u7a7a\u683c\u7684\u60ac\u6302\u7f29\u8fdb(\u4e0e\u6587\u4ef6\u5176\u4ed6\u90e8\u5206\u4fdd\u6301\u4e00\u81f4)\u3002 \u63cf\u8ff0\u5e94\u8be5\u5305\u62ec\u6240\u9700\u7684\u7c7b\u578b\u548c\u542b\u4e49\u3002\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u63a5\u53d7 *args (\u53ef\u53d8\u957f\u5ea6\u53c2\u6570\u5217\u8868)\u6216\u8005 **kwargs (\u4efb\u610f\u5173\u952e\u5b57\u53c2\u6570), \u5e94\u8be5\u8be6\u7ec6\u5217\u51fa *args \u548c **kwargs \u3002 Returns: (\u6216\u8005 Yields: \u7528\u4e8e\u751f\u6210\u5668) \u63cf\u8ff0\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u548c\u8bed\u4e49. \u5982\u679c\u51fd\u6570\u8fd4\u56deNone, \u8fd9\u4e00\u90e8\u5206\u53ef\u4ee5\u7701\u7565. Raises: \u5217\u51fa\u4e0e\u63a5\u53e3\u6709\u5173\u7684\u6240\u6709\u5f02\u5e38. def fetch_smalltable_rows ( table_handle : smalltable . Table , keys : Sequence [ Union [ bytes , str ]], require_all_keys : bool = False , ) -> Mapping [ bytes , Tuple [ str ]]: \"\"\"Fetches rows from a Smalltable. Retrieves rows pertaining to the given keys from the Table instance represented by table_handle. String keys will be UTF-8 encoded. Args: table_handle: An open smalltable.Table instance. keys: A sequence of strings representing the key of each table row to fetch. String keys will be UTF-8 encoded. require_all_keys: Optional; If require_all_keys is True only rows with values set for all keys will be returned. Returns: A dict mapping keys to the corresponding table row data fetched. Each row is represented as a tuple of strings. For example: {b'Serak': ('Rigel VII', 'Preparer'), b'Zim': ('Irk', 'Invader'), b'Lrrr': ('Omicron Persei 8', 'Emperor')} Returned keys are always bytes. If a key from the keys argument is missing from the dictionary, then that row was not found in the table (and require_all_keys must have been False). Raises: IOError: An error occurred accessing the smalltable. \"\"\" \u7c7b\u6ce8\u91ca \u00b6 \u7c7b\u5e94\u8be5\u5728\u5176\u5b9a\u4e49\u4e0b\u6709\u4e00\u4e2a\u7528\u4e8e\u63cf\u8ff0\u8be5\u7c7b\u7684\u6587\u6863\u5b57\u7b26\u4e32\u3002\u5982\u679c\u4f60\u7684\u7c7b\u6709\u516c\u5171\u5c5e\u6027(Attributes)\uff0c\u90a3\u4e48\u6587\u6863\u4e2d\u5e94\u8be5\u6709\u4e00\u4e2a\u5c5e\u6027(Attributes)\u6bb5\u3002\u5e76\u4e14\u5e94\u8be5\u9075\u5b88\u548c\u51fd\u6570\u53c2\u6570\u76f8\u540c\u7684\u683c\u5f0f\u3002 class SampleClass ( object ): \"\"\"Summary of class here. Longer class information.... Longer class information.... Attributes: likes_spam: A boolean indicating if we like SPAM or not. eggs: An integer count of the eggs we have laid. \"\"\" def __init__ ( self , likes_spam = False ): \"\"\"Inits SampleClass with blah.\"\"\" self . likes_spam = likes_spam self . eggs = 0 def public_method ( self ): \"\"\"Performs operation blah.\"\"\" ... \u5757\u6ce8\u91ca\u4e0e\u884c\u6ce8\u91ca \u00b6 \u6700\u9700\u8981\u5199\u6ce8\u91ca\u7684\u662f\u4ee3\u7801\u4e2d\u90a3\u4e9b\u6280\u5de7\u6027\u7684\u90e8\u5206\u3002\u5982\u679c\u4f60\u5728\u4e0b\u6b21 \u4ee3\u7801\u5ba1\u67e5 \u7684\u65f6\u5019\u5fc5\u987b\u89e3\u91ca\u4e00\u4e0b\uff0c\u90a3\u4e48\u4f60\u5e94\u8be5\u73b0\u5728\u5c31\u7ed9\u5b83\u5199\u6ce8\u91ca\u3002\u5bf9\u4e8e\u590d\u6742\u7684\u64cd\u4f5c\uff0c\u5e94\u8be5\u5728\u5176\u64cd\u4f5c\u5f00\u59cb\u524d\u5199\u4e0a\u82e5\u5e72\u884c\u6ce8\u91ca\uff0c \u591a\u884c\u6ce8\u91ca\u53ef\u4ee5\u4f7f\u7528 \"\"\"...\"\"\" \u3002\u5bf9\u4e8e\u4e0d\u662f\u4e00\u76ee\u4e86\u7136\u7684\u4ee3\u7801\uff0c\u5e94\u5728\u5176\u884c\u5c3e\u6dfb\u52a0\u6ce8\u91ca\u3002 # We use a weighted dictionary search to find out where i is in # the array. We extrapolate position based on the largest num # in the array and the array size and then do binary search to # get the exact number. if i & ( i - 1 ) == 0 : # True if i is 0 or a power of 2 \u4e3a\u4e86\u63d0\u9ad8\u53ef\u8bfb\u6027\uff0c\u6ce8\u91ca\u5e94\u8be5\u81f3\u5c11\u79bb\u5f00\u4ee3\u78012\u4e2a\u7a7a\u683c\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u7edd\u4e0d\u8981\u63cf\u8ff0\u4ee3\u7801\u3002\u5047\u8bbe\u9605\u8bfb\u4ee3\u7801\u7684\u4eba\u6bd4\u4f60\u66f4\u61c2Python\uff0c\u4ed6\u53ea\u662f\u4e0d\u77e5\u9053\u4f60\u7684\u4ee3\u7801\u8981\u505a\u4ec0\u4e48\u3002 # BAD COMMENT # Now go through the b array and make sure whenever i occurs # the next element is i+1 \u7c7b\u578b\u6ce8\u91ca \u00b6 \u901a\u7528\u89c4\u5219 1. \u8bf7\u5148\u719f\u6089\u4e0b PEP-484 2. \u5bf9\u4e8e\u65b9\u6cd5\uff0c\u4ec5\u5728\u5fc5\u8981\u65f6\u624d\u5bf9 self \u6216 cls \u6ce8\u91ca 3. \u82e5\u5bf9\u7c7b\u578b\u6ca1\u6709\u4efb\u4f55\u663e\u793a\uff0c\u8bf7\u4f7f\u7528 Any 4. \u65e0\u9700\u6ce8\u91ca\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570 1. \u516c\u5171\u7684API\u9700\u8981\u6ce8\u91ca 2. \u5728\u4ee3\u7801\u7684\u5b89\u5168\u6027\uff0c\u6e05\u6670\u6027\u548c\u7075\u6d3b\u6027\u4e0a\u8fdb\u884c\u6743\u8861\u662f\u5426\u6ce8\u91ca 3. \u5bf9\u4e8e\u5bb9\u6613\u51fa\u73b0\u7c7b\u578b\u76f8\u5173\u7684\u9519\u8bef\u7684\u4ee3\u7801\u8fdb\u884c\u6ce8\u91ca 4. \u96be\u4ee5\u7406\u89e3\u7684\u4ee3\u7801\u8bf7\u8fdb\u884c\u6ce8\u91ca 5. \u82e5\u4ee3\u7801\u4e2d\u7684\u7c7b\u578b\u5df2\u7ecf\u7a33\u5b9a\uff0c\u53ef\u4ee5\u8fdb\u884c\u6ce8\u91ca. \u5bf9\u4e8e\u4e00\u4efd\u6210\u719f\u7684\u4ee3\u7801\uff0c\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u6ce8\u91ca\u4e86\u6240\u6709\u7684\u51fd\u6570\uff0c\u4e5f\u4e0d\u4f1a\u4e27\u5931\u592a\u591a\u7684\u7075\u6d3b\u6027\u3002 \u6362\u884c \u5c3d\u91cf\u9075\u5b88\u65e2\u5b9a\u7684\u7f29\u8fdb\u89c4\u5219\u3002\u6ce8\u91ca\u540e\uff0c\u5f88\u591a\u51fd\u6570\u7b7e\u540d\u5c06\u4f1a\u53d8\u6210\u6bcf\u884c\u4e00\u4e2a\u53c2\u6570\u3002 def my_method ( self , first_var : int , second_var : Foo , third_var : Optional [ Bar ]) -> int : ... \u5c3d\u91cf\u5728\u53d8\u91cf\u4e4b\u95f4\u6362\u884c\u800c\u4e0d\u662f\u5728\u53d8\u91cf\u548c\u7c7b\u578b\u6ce8\u91ca\u4e4b\u95f4.\u5f53\u7136,\u82e5\u6240\u6709\u4e1c\u897f\u90fd\u5728\u4e00\u884c\u4e0a,\u4e5f\u53ef\u4ee5\u63a5\u53d7 def my_method ( self , first_var : int ) -> int : ... \u82e5\u662f\u51fd\u6570\u540d,\u672b\u4f4d\u5f62\u53c2\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u6ce8\u91ca\u592a\u957f,\u4e5f\u53ef\u4ee5\u8fdb\u884c\u6362\u884c,\u5e76\u5728\u65b0\u884c\u8fdb\u884c4\u683c\u7f29\u8fdb. def my_method ( self , first_var : int ) -> Tuple [ MyLongType1 , MyLongType1 ]: ... \u82e5\u662f\u672b\u4f4d\u5f62\u53c2\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u6ce8\u91ca\u4e0d\u9002\u5408\u5728\u540c\u4e00\u884c\u4e0a,\u53ef\u4ee5\u6362\u884c,\u7f29\u8fdb\u4e3a4\u7a7a\u683c,\u5e76\u4fdd\u6301\u95ed\u5408\u7684\u62ec\u53f7 ) \u548c def \u5bf9\u9f50 def my_method ( self , other_arg : Optional [ MyLongType ] ) -> Dict [ OtherLongType , MyLongType ]: ... \u5c3d\u91cf\u4e0d\u8981\u5728\u4e00\u4e2a\u7c7b\u578b\u6ce8\u91ca\u4e2d\u8fdb\u884c\u6362\u884c.\u4f46\u662f\u6709\u65f6\u7c7b\u578b\u6ce8\u91ca\u8fc7\u957f\u9700\u8981\u6362\u884c\u65f6,\u8bf7\u5c3d\u91cf\u4fdd\u6301\u5b50\u7c7b\u578b\u4e2d\u4e0d\u88ab\u6362\u884c. def my_method ( self , first_var : Tuple [ List [ MyLongType1 ], List [ MyLongType2 ]], second_var : List [ Dict [ MyLongType3 , MyLongType4 ]]) -> None : ... \u53c2\u6570\u9ed8\u8ba4\u503c \u4f9d\u636e PEP-008 ,\u4ec5\u5bf9\u540c\u65f6\u5177\u6709\u7c7b\u578b\u6ce8\u91ca\u548c\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u7684 = \u5468\u56f4\u52a0\u7a7a\u683c\u3002 # good def func ( a : int = 0 ) -> int : ... # bad def func ( a : int = 0 ) -> int : ... \u53ef\u9009\u53c2\u6570\u7c7b\u578b \u5728python\u7684\u7c7b\u578b\u7cfb\u7edf\u4e2d, NoneType \u662f \u201c\u4e00\u7b49\u5bf9\u8c61\u201d\uff0c\u4e3a\u4e86\u8f93\u5165\u65b9\u4fbf\uff0c None \u662f NoneType \u7684\u522b\u540d\u3002\u4e00\u4e2a\u53d8\u91cf\u82e5\u662f None \uff0c\u5219\u8be5\u53d8\u91cf\u5fc5\u987b\u88ab\u58f0\u660e\u3002 \u56e0\u4e3apython\u4e2d\u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\uff0c\u82e5\u6ca1\u6709\u7279\u6b8a\u58f0\u660e\u5219\u9ed8\u8ba4\u4e3a Any \u7c7b\u578b\u3002\u82e5\u51fd\u6570\u53c2\u6570\u6709\u591a\u4e2a\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 typing \u6a21\u5757\u4e2d\u7684 Union \uff0c\u4f46\u82e5\u7c7b\u578b\u4ec5\u4ec5\u53ea\u662f\u5bf9\u5e94\u53e6\u4e00\u4e2a\u5176\u4ed6\u7c7b\u578b\uff0c\u5efa\u8bae\u4f7f\u7528 Optional \u3002 \u5c3d\u91cf\u663e\u5f0f\u800c\u975e\u9690\u5f0f\u7684\u4f7f\u7528 Optional \u3002\u5728PEP-484\u7684\u65e9\u671f\u7248\u672c\u4e2d\u5141\u8bb8\u4f7f\u7528 a: Text = None \u6765\u66ff\u4ee3 a: Optional[Text] = None \uff0c\u5f53\u7136,\u73b0\u5728\u4e0d\u63a8\u8350\u8fd9\u4e48\u505a\u4e86. # good def func ( a : Optional [ Text ], b : Optional [ Text ] = None ) -> Text : ... def multiple_nullable_union ( a : Union [ None , Text , int ]) -> Text ... # bad def nullable_union ( a : Union [ None , Text ]) -> Text : ... def implicit_optional ( a : Text = None ) -> Text : ... \u5ffd\u7565\u7c7b\u578b\u6ce8\u91ca \u53ef\u4ee5\u4f7f\u7528\u7279\u6b8a\u7684\u884c\u5c3e\u6ce8\u91ca # type: ignore \u6765\u7981\u7528\u8be5\u884c\u7684\u7c7b\u578b\u68c0\u67e5. pytype \u9488\u5bf9\u7279\u5b9a\u9519\u8bef\u6709\u4e00\u4e2a\u7981\u7528\u9009\u9879(\u7c7b\u4f3clint): # pytype: disable=attribute-error \u53d8\u91cf\u7c7b\u578b\u6ce8\u89e3 \u5f53\u4e00\u4e2a\u5185\u90e8\u53d8\u91cf\u96be\u4ee5\u63a8\u65ad\u5176\u7c7b\u578b\u65f6,\u53ef\u4ee5\u6709\u4ee5\u4e0b\u65b9\u6cd5\u6765\u6307\u793a\u5176\u7c7b\u578b: \u4f7f\u7528\u884c\u5c3e\u6ce8\u91ca # type: : a = SomeUndecoratedFunction () # type: Foo \u5e26\u7c7b\u578b\u6ce8\u89e3\u7684\u590d\u5236 \u5982\u51fd\u6570\u5f62\u53c2\u4e00\u6837,\u5728\u53d8\u91cf\u540d\u548c\u7b49\u53f7\u95f4\u52a0\u5165\u5192\u53f7\u548c\u7c7b\u578b: a : Foo = SomeUndecoratedFunction () \u6cdb\u578b \u5728\u6ce8\u91ca\u65f6,\u5c3d\u91cf\u5c06\u6cdb\u578b\u7c7b\u578b\u6ce8\u91ca\u4e3a\u7c7b\u578b\u53c2\u6570.\u5426\u5219, \u6cdb\u578b\u53c2\u6570\u5c06\u88ab\u89c6\u4e3a\u662f Any . # good def get_names ( employee_ids : List [ int ]) -> Dict [ int , Any ]: ... # bad # These are both interpreted as get_names(employee_ids: List[Any]) -> Dict[Any, Any] def get_names ( employee_ids : list ) -> Dict : ... \u82e5\u5b9e\u5728\u8981\u7528 Any \u4f5c\u4e3a\u6cdb\u578b\u7c7b\u578b,\u8bf7\u663e\u5f0f\u7684\u4f7f\u7528\u5b83.\u4f46\u5728\u591a\u6570\u60c5\u51b5\u4e0b, TypeVar \u901a\u5e38\u53ef\u80fd\u662f\u66f4\u597d\u7684\u9009\u62e9. def get_names ( employee_ids : List [ Any ]) -> Dict [ Any , Text ]: \"\"\"Returns a mapping from employee ID to employee name for given IDs.\"\"\" T = TypeVar ( 'T' ) def get_names ( employee_ids : List [ T ]) -> Dict [ T , Text ]: \"\"\"Returns a mapping from employee ID to employee name for given IDs.\"\"\" TODO\u6ce8\u91ca \u00b6 TODO \u4e00\u822c\u662f\u4e3a\u4e86\u6682\u65f6\u8fd8\u672a\u5b8c\u6210\u7684\u4ee3\u7801\u4f5c\u4e00\u4e2a\u7b80\u5355\u7684\u63d0\u9192\uff0c\u53ef\u4ee5\u662f\u81ea\u5df1\u4e5f\u53ef\u4ee5\u662f\u5176\u4ed6\u5f00\u53d1\u8005\u3002\u4e3a\u4e34\u65f6\u4ee3\u7801\u4f7f\u7528 TODO \u6ce8\u91ca\uff0c\u5b83\u662f\u4e00\u79cd\u77ed\u671f\u89e3\u51b3\u65b9\u6848\u3002\u4e0d\u7b97\u5b8c\u7f8e\uff0c\u4f46\u591f\u597d\u4e86\u3002 TODO \u6ce8\u91ca\u5e94\u8be5\u5728\u6240\u6709\u5f00\u5934\u5904\u5305\u542b TODO \u5b57\u7b26\u4e32\uff0c\u7d27\u8ddf\u7740\u662f\u7528\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u4f60\u7684\u540d\u5b57\uff0cemail\u5730\u5740\u6216\u5176\u5b83\u6807\u8bc6\u7b26\u3002\u7136\u540e\u662f\u4e00\u4e2a\u53ef\u9009\u7684\u5192\u53f7\u3002\u63a5\u7740\u5fc5\u987b\u6709\u4e00\u884c\u6ce8\u91ca\uff0c\u89e3\u91ca\u8981\u505a\u4ec0\u4e48\u3002\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u6709\u4e00\u4e2a\u7edf\u4e00\u7684 TODO \u683c\u5f0f\uff0c\u8fd9\u6837\u6dfb\u52a0\u6ce8\u91ca\u7684\u4eba\u5c31\u53ef\u4ee5\u641c\u7d22\u5230(\u5e76\u53ef\u4ee5\u6309\u9700\u63d0\u4f9b\u66f4\u591a\u7ec6\u8282)\u3002\u5199\u4e86 TODO \u6ce8\u91ca\u5e76\u4e0d\u4fdd\u8bc1\u5199\u7684\u4eba\u4f1a\u4eb2\u81ea\u89e3\u51b3\u95ee\u9898\u3002\u5f53\u4f60\u5199\u4e86\u4e00\u4e2a TODO \uff0c\u8bf7\u6ce8\u4e0a\u4f60\u7684\u540d\u5b57\u3002 # TODO(kl@gmail.com): Use a \"*\" here for string repetition. # TODO(Zeke) Change this to use relations. \u5982\u679c\u4f60\u7684 TODO \u662f\u201d\u5c06\u6765\u505a\u67d0\u4e8b\u201d\u7684\u5f62\u5f0f\uff0c\u90a3\u4e48\u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u4e00\u4e2a\u6307\u5b9a\u7684\u65e5\u671f(\u201c2009\u5e7411\u6708\u89e3\u51b3\u201d)\u6216\u8005\u4e00\u4e2a\u7279\u5b9a\u7684\u4e8b\u4ef6(\u201c\u7b49\u5230\u6240\u6709\u7684\u5ba2\u6237\u90fd\u53ef\u4ee5\u5904\u7406XML\u8bf7\u6c42\u5c31\u79fb\u9664\u8fd9\u4e9b\u4ee3\u7801\u201d)\u3002 \u547d\u540d \u00b6 \u5305\u540d\uff1a package_name \u6a21\u5757\u540d\uff1a module_name \u7c7b\u540d\uff1a ClassName \u65b9\u6cd5\u540d\uff1a method_name \u7c7b\u540d\uff1a ExceptionName \u51fd\u6570\u540d: function_name \u5168\u5c40\u5e38\u91cf\u540d: GLOBAL_CONSTANT_NAME \u5168\u5c40\u53d8\u91cf\u540d: global_var_name \u5b9e\u4f8b\u540d: instance_var_name \u51fd\u6570\u53c2\u6570\u540d: function_parameter_name \u5c40\u90e8\u53d8\u91cf\u540d: local_var_name \u51fd\u6570\u540d \u3001 \u53d8\u91cf\u540d**\u548c**\u6587\u4ef6\u540d**\u5e94\u8be5\u662f\u63cf\u8ff0\u6027\u7684\uff0c\u5c3d\u91cf**\u907f\u514d\u7f29\u5199 \uff0c\u7279\u522b\u8981\u907f\u514d\u4f7f\u7528\u975e\u9879\u76ee\u4eba\u5458\u4e0d\u6e05\u695a\u96be\u4ee5\u7406\u89e3\u7684\u7f29\u5199\uff0c\u4e0d\u8981\u901a\u8fc7\u5220\u9664\u5355\u8bcd\u4e2d\u7684\u5b57\u6bcd\u6765\u8fdb\u884c\u7f29\u5199\u3002 \u547d\u540d\u7ea6\u5b9a \u4f7f\u7528\u5355\u4e0b\u5212\u7ebf _ \u5f00\u5934\u8868\u793a\u6a21\u5757\u53d8\u91cf\u6216\u8005\u51fd\u6570\u662f protected \u7684\uff0c\u5373\u53ea\u5e94\u8be5\u6a21\u5757\u5185\u6216\u8005\u51fd\u6570\u5185\u4f7f\u7528\uff08\u786c\u662f\u8bbf\u95ee\u7684\u8bdd\u4e5f\u662f\u53ef\u4ee5\u7684\uff09\uff0c\u4e0d\u5e94\u8be5\u88ab\u516c\u5f00\u8bbf\u95ee\uff0c\u800c\u4e14python\u89e3\u6790\u65f6\u4f7f\u7528 from module import * \u65f6\u8be5\u53d8\u91cf\u6216\u51fd\u6570\u4e0d\u4f1a\u88ab\u5305\u542b\u3002 \u7528\u53cc\u4e0b\u5212\u7ebf( __ )\u5f00\u5934\u7684\u5b9e\u4f8b\u53d8\u91cf\u6216\u65b9\u6cd5\u8868\u793a\u7c7b\u5185\u79c1\u6709\u3002\u5373\u53ea\u5e94\u8be5\u6a21\u5757\u5185\u6216\u8005\u51fd\u6570\u5185\u4f7f\u7528\uff0c\u4e0d\u5e94\u8be5\u88ab\u516c\u5f00\u8bbf\u95ee\u3002\u4f7f\u7528 module.var \u4e0e class.var \u4f1a\u62a5\u9519\uff08 \u8be5\u5c5e\u6027\u4e0d\u5b58\u5728 \uff09\uff0c\u4e0d\u80fd\u8bbf\u95ee\uff08\u53ef\u4ee5\u4f7f\u7528_class__var\u8bbf\u95ee\uff0c \u5177\u4f53\u53ef\u4ee5\u67e5\u770b\u76f8\u5173\u6587\u6863\uff09\u3002 \u5c06\u76f8\u5173\u7684\u7c7b\u548c\u9876\u7ea7\u51fd\u6570\u653e\u5728\u540c\u4e00\u4e2a\u6a21\u5757\u91cc\u3002\u4e0d\u50cfJava\uff0c\u6ca1\u5fc5\u8981\u9650\u5236\u4e00\u4e2a\u7c7b\u4e00\u4e2a\u6a21\u5757\u3002 \u5bf9\u7c7b\u540d\u4f7f\u7528\u5927\u5199\u5b57\u6bcd\u5f00\u5934\u7684\u5355\u8bcd(\u5982CapWords\uff0c\u5373Pascal\u98ce\u683c)\uff0c\u4f46\u662f\u6a21\u5757\u540d\u5e94\u8be5\u7528\u5c0f\u5199\u52a0\u4e0b\u5212\u7ebf\u7684\u65b9\u5f0f(\u5982lower_with_under.py)\u3002\u56e0\u4e3a\u5982\u679c\u6a21\u5757\u540d\u78b0\u5de7\u548c\u7c7b\u540d\u4e00\u81f4, \u8fd9\u4f1a\u8ba9\u4eba\u56f0\u6270\u3002 \u65e5\u5fd7 source \u00b6 \u65e5\u5fd7 \u6a21\u5757\u81ea2.3\u7248\u672c\u5f00\u59cb\u4fbf\u662fPython\u6807\u51c6\u5e93\u7684\u4e00\u90e8\u5206\u3002\u5b83\u88ab\u7b80\u6d01\u7684\u63cf\u8ff0\u5728 PEP 282 \u3002 \u4f17\u6240\u5468\u77e5\uff0c\u9664\u4e86 \u57fa\u7840\u65e5\u5fd7\u6307\u5357 \u90e8\u5206\uff0c\u8be5\u6587\u6863\u5e76\u4e0d\u5bb9\u6613\u9605\u8bfb\u3002 \u65e5\u5fd7\u7684\u4e24\u4e2a\u76ee\u7684\uff1a \u8bca\u65ad\u65e5\u5fd7 \u8bb0\u5f55\u4e0e\u5e94\u7528\u7a0b\u5e8f\u64cd\u4f5c\u76f8\u5173\u7684\u65e5\u5fd7\u3002\u4f8b\u5982\uff0c\u7528\u6237\u9047\u5230\u7684\u62a5\u9519\u4fe1\u606f\uff0c \u53ef\u901a\u8fc7\u641c\u7d22\u8bca\u65ad\u65e5\u5fd7\u83b7\u5f97\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002 \u5ba1\u8ba1\u65e5\u5fd7 \u4e3a\u5546\u4e1a\u5206\u6790\u800c\u8bb0\u5f55\u7684\u65e5\u5fd7\u3002\u4ece\u5ba1\u8ba1\u65e5\u5fd7\u4e2d\uff0c\u53ef\u63d0\u53d6\u7528\u6237\u7684\u4ea4\u6613\u4fe1\u606f\uff0c \u5e76\u7ed3\u5408\u5176\u4ed6\u7528\u6237\u8d44\u6599\u6784\u6210\u7528\u6237\u62a5\u544a\u6216\u8005\u7528\u6765\u4f18\u5316\u5546\u4e1a\u76ee\u6807\u3002 \u65e5\u5fd7\u4e0e\u6253\u5370 \u00b6 \u5f53\u9700\u8981\u5728\u547d\u4ee4\u884c\u5e94\u7528\u4e2d\u663e\u793a\u5e2e\u52a9\u6587\u6863\u65f6\uff0c \u6253\u5370 \u662f\u4e00\u4e2a\u76f8\u5bf9\u4e8e\u65e5\u5fd7\u66f4\u597d\u7684\u9009\u62e9\u3002 \u800c\u5728\u5176\u4ed6\u65f6\u5019\uff0c\u65e5\u5fd7\u603b\u80fd\u4f18\u4e8e \u6253\u5370 \uff0c\u7406\u7531\u5982\u4e0b\uff1a - \u65e5\u5fd7\u4e8b\u4ef6\u4ea7\u751f\u7684 \u65e5\u5fd7\u8bb0\u5f55 \uff0c\u5305\u542b\u6e05\u6670\u53ef\u7528\u7684\u8bca\u65ad\u4fe1\u606f\uff0c\u5982\u6587\u4ef6\u540d\u79f0\u3001\u8def\u5f84\u3001\u51fd\u6570\u540d\u548c\u884c\u53f7\u7b49\u3002 - \u5305\u542b\u65e5\u5fd7\u6a21\u5757\u7684\u5e94\u7528\uff0c\u9ed8\u8ba4\u53ef\u901a\u8fc7\u6839\u8bb0\u5f55\u5668\u5bf9\u5e94\u7528\u7684\u65e5\u5fd7\u6d41\u8fdb\u884c\u8bbf\u95ee\uff0c\u9664\u975e\u60a8\u5c06\u65e5\u5fd7\u8fc7\u6ee4\u4e86\u3002 - \u53ef\u901a\u8fc7 logging.Logger.setLevel() \u65b9\u6cd5\u6709\u9009\u62e9\u5730\u8bb0\u5f55\u65e5\u5fd7\uff0c \u6216\u53ef\u901a\u8fc7\u8bbe\u7f6e logging.Logger.disabled \u5c5e\u6027\u4e3a True \u6765\u7981\u7528\u3002 \u914d\u7f6e\u65e5\u5fd7 \u00b6 \u4f7f\u7528**INI**\u683c\u5f0f\u6587\u4ef6\uff1a \u4f18\u70b9 : \u4f7f\u7528 logging.config.listen() \u51fd\u6570\u76d1\u542csocket\uff0c\u53ef\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u66f4\u65b0\u914d\u7f6e \u7f3a\u70b9 : \u901a\u8fc7\u6e90\u7801\u63a7\u5236\u65e5\u5fd7\u914d\u7f6e\u8f83\u5c11\uff08 \u4f8b\u5982 \u5b50\u7c7b\u5316\u5b9a\u5236\u7684\u8fc7\u6ee4\u5668\u6216\u8bb0\u5f55\u5668\uff09\u3002 \u4f7f\u7528**\u5b57\u5178**\u6216**JSON**\u683c\u5f0f\u6587\u4ef6\uff1a \u4f18\u70b9 : \u9664\u4e86\u53ef\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u66f4\u65b0\uff0c\u5728Python 2.6\u4e4b\u540e\uff0c\u8fd8\u53ef\u901a\u8fc7 json \u6a21\u5757\u4ece\u5176\u5b83\u6587\u4ef6\u4e2d\u5bfc\u5165\u914d\u7f6e\u3002 \u7f3a\u70b9 : \u5f88\u96be\u901a\u8fc7\u6e90\u7801\u63a7\u5236\u65e5\u5fd7\u914d\u7f6e\u3002 \u4f7f\u7528**\u6e90\u7801**\uff1a \u4f18\u70b9 : \u5bf9\u914d\u7f6e\u7edd\u5bf9\u7684\u63a7\u5236\u3002 \u7f3a\u70b9 : \u5bf9\u914d\u7f6e\u7684\u66f4\u6539\u9700\u8981\u5bf9\u6e90\u7801\u8fdb\u884c\u4fee\u6539\u3002 \u901a\u8fc7INI\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u7684\u4f8b\u5b50 \u00b6 \u6211\u4eec\u5047\u8bbe\u6587\u4ef6\u540d\u4e3a logging_config.ini \u3002\u5173\u4e8e\u6587\u4ef6\u683c\u5f0f\u7684\u66f4\u591a\u7ec6\u8282\uff0c\u8bf7\u53c2\u89c1 \u65e5\u5fd7\u6307\u5357 \u4e2d\u7684 \u65e5\u5fd7\u914d\u7f6e \u90e8\u5206\u3002 [loggers] keys = root [handlers] keys = stream_handler [formatters] keys = formatter [logger_root] level = DEBUG handlers = stream_handler [handler_stream_handler] class = StreamHandler level = DEBUG formatter = formatter args = (sys.stderr,) [formatter_formatter] format = %(asctime)s %(name)-12s %(levelname)-8s %(message)s \u7136\u540e\u5728\u6e90\u7801\u4e2d\u8c03\u7528 logging.config.fileConfig() \u65b9\u6cd5\uff1a import logging from logging.config import fileConfig fileConfig ( 'logging_config.ini' ) logger = logging . getLogger () logger . debug ( 'often makes a very good meal of %s ' , 'visiting tourists' ) \u901a\u8fc7\u5b57\u5178\u8fdb\u884c\u914d\u7f6e\u7684\u4f8b\u5b50 \u00b6 Python 2.7\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b57\u5178\u5b9e\u73b0\u8be6\u7ec6\u914d\u7f6e\u3002 PEP 391 \u5305\u542b\u4e86\u4e00\u7cfb\u5217\u5b57\u5178\u914d\u7f6e\u7684\u5f3a\u5236\u548c \u975e\u5f3a\u5236\u7684\u5143\u7d20\u3002 import logging from logging.config import dictConfig logging_config = dict ( version = 1 , formatters = { 'f' : { 'format' : ' %(asctime)s %(name)-12s %(levelname)-8s %(message)s ' } }, handlers = { 'h' : { 'class' : 'logging.StreamHandler' , 'formatter' : 'f' , 'level' : logging . DEBUG } }, root = { 'handlers' : [ 'h' ], 'level' : logging . DEBUG , }, ) dictConfig ( logging_config ) logger = logging . getLogger () logger . debug ( 'often makes a very good meal of %s ' , 'visiting tourists' ) \u901a\u8fc7\u6e90\u7801\u76f4\u63a5\u914d\u7f6e\u7684\u4f8b\u5b50 \u00b6 import logging logger = logging . getLogger () handler = logging . StreamHandler () formatter = logging . Formatter ( ' %(asctime)s %(name)-12s %(levelname)-8s %(message)s ' ) handler . setFormatter ( formatter ) logger . addHandler ( handler ) logger . setLevel ( logging . DEBUG ) logger . debug ( 'often makes a very good meal of %s ' , 'visiting tourists' ) # logger.py def create_logger ( log_file , level = logging . DEBUG ): # logging.basicConfig\u51fd\u6570\u5bf9\u65e5\u5fd7\u7684\u8f93\u51fa\u683c\u5f0f\u53ca\u65b9\u5f0f\u505a\u76f8\u5173\u914d\u7f6e logging . basicConfig ( level = level , format = ' %(asctime)s - %(filename)s [line: %(lineno)d ] - %(levelname)s : %(message)s ' ) log = logging . getLogger () log . setLevel ( logging . INFO ) if not os . path . exists ( os . path . dirname ( log_file )): os . makedirs ( os . path . dirname ( log_file )) # \u521b\u5efa\u4e00\u4e2ahandler\uff0c\u7528\u4e8e\u5199\u5165\u65e5\u5fd7\u6587\u4ef6 fh = logging . FileHandler ( log_file , mode = 'w' ) fh . setLevel ( level ) # \u5b9a\u4e49handler\u7684\u8f93\u51fa\u683c\u5f0f formatter = logging . Formatter ( \" %(asctime)s - %(filename)s [line: %(lineno)d ] - %(levelname)s : %(message)s \" ) fh . setFormatter ( formatter ) # \u5c06log\u6dfb\u52a0\u5230handler\u91cc\u9762 log . addHandler ( fh ) return log log_file_dir = 'logs' if not os . path . exists ( log_file_dir ): os . makedirs ( log_file_dir ) rq = time . strftime ( '%Y-%m- %d -%H-%M' , time . localtime ( time . time ())) log_file = os . path . join ( log_file_dir , rq + '.log' ) logger = create_logger ( log_file ) # logger.py # \u7136\u540e\u5176\u4ed6\u6a21\u5757\u53ea\u9700\u8981 from logger import logger \u53c2\u8003\u76ee\u5f55 \u00b6 Google Python\u98ce\u683c\u6307\u5357\u4e2d\u6587\u7248\uff08 https://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/contents/ \uff09 Python \u6700\u4f73\u5b9e\u8df5\u6307\u5357 https://pythonguidecn.readthedocs.io/zh/latest/ Python\u9879\u76ee\u5de5\u7a0b\u5316\u5f00\u53d1\u6307\u5357 https://pyloong.github.io/pythonic-project-guidelines/ Python \u5b98\u65b9\u98ce\u683c\u6307\u5357 PEP-8 https://peps.python.org/pep-0008/ Python \u5b98\u65b9\u6587\u6863\u5b57\u7b26\u4e32 PEP-257 https://peps.python.org/pep-0257/ Python \u5b98\u65b9\u65e5\u5fd7 PEP-282 https://peps.python.org/pep-0282/ Python \u7c7b\u578b\u6ce8\u91ca PEP-484 https://peps.python.org/pep-0484/ Python CookBook https://python3-cookbook.readthedocs.io/zh_CN/latest/","title":"Python \u5f00\u53d1\u8bed\u8a00\u89c4\u8303"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#python","text":"","title":"Python \u5f00\u53d1\u8bed\u8a00\u89c4\u8303"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_1","text":"","title":"\u9879\u76ee\u7ed3\u6784"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#1-source","text":"\u201c\u7ed3\u6784\u5316\u201d\u7684\u5b9a\u4e49\u662f\u60a8\u5173\u6ce8\u4e8e\u600e\u6837\u4f7f\u60a8\u7684\u9879\u76ee\u6700\u597d\u5730\u6ee1\u8db3\u5b83\u7684\u5bf9\u8c61\u6027\uff0c\u6211\u4eec\u9700\u8981\u53bb\u8003\u8651\u5982\u4f55\u66f4\u597d\u5730\u5229\u7528Python\u7684\u7279\u6027\u6765\u521b\u9020\u7b80\u6d01\u3001\u9ad8\u6548\u7684\u4ee3\u7801\u3002\u5728\u5b9e\u8df5\u5c42\u9762\uff0c\u201c\u7ed3\u6784\u5316\u201d\u610f\u5473\u7740\u901a\u8fc7\u7f16\u5199\u7b80\u6d01\u7684\u4ee3\u7801\uff0c\u5e76\u4e14\u6b63\u5982\u6587\u4ef6\u7cfb\u7edf\u4e2d\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u7ec4\u7ec7\u4e00\u6837\uff0c \u4ee3\u7801\u5e94\u8be5\u4f7f\u903b\u8f91\u548c\u4f9d\u8d56\u6e05\u6670\u3002 \u5728\u4e00\u4e2a\u5065\u5eb7\u7684\u5f00\u53d1\u5468\u671f\u4e2d\uff0c\u4ee3\u7801\u98ce\u683c\uff0cAPI\u8bbe\u8ba1\u548c\u81ea\u52a8\u5316\u662f\u975e\u5e38\u5173\u952e\u7684\u3002\u540c\u6837\u7684\uff0c\u5bf9\u4e8e\u5de5\u7a0b\u7684\u67b6\u6784\u3001\u4ed3\u5e93\u7684\u7ed3\u6784\u4e5f\u662f\u5173\u952e\u7684\u4e00\u90e8\u5206\u3002 \u5f53\u5176\u4ed6\u5de5\u7a0b\u5e08\u67e5\u770b\u6216\u8005\u63a5\u624b\u60a8\u7684\u5de5\u7a0b\uff08\u4ed3\u5e93\uff09\u65f6\uff0c\u4ed6\u4eec\u4f1a\u770b\u5230\u8fd9\u4e9b: - \u5de5\u7a0b\u7684\u540d\u5b57 - \u5de5\u7a0b\u7684\u63cf\u8ff0 - \u4e00\u7cfb\u5217\u7684\u6587\u4ef6 \u53ea\u6709\u5f53\u4ed6\u4eec\u6eda\u52a8\u5230\u76ee\u5f55\u4e0b\u65b9\u65f6\u624d\u4f1a\u770b\u5230\u60a8\u5de5\u7a0b\uff08\u4ed3\u5e93\uff09\u7684README\u3002 \u5982\u679c\u60a8\u7684\u5de5\u7a0b\uff08\u4ed3\u5e93\uff09\u7684\u76ee\u5f55\u662f\u4e00\u56e2\u7cdf\uff0c\u6ca1\u6709\u6e05\u6670\u7684\u7ed3\u6784\uff0c\u4ed6\u4eec\u53ef\u80fd\u8981\u5230\u5904\u5bfb\u627e\u624d\u80fd\u627e\u5230\u60a8\u5199\u7684\u6f02\u4eae\u7684\u6587\u6863\u3002 \u6837\u4f8b\uff1a Sample \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 setup.py \u251c\u2500\u2500 requirements.txt \u251c\u2500\u2500 example \u2502 \u2514\u2500\u2500 example.py \u2502 \u2514\u2500\u2500 __init__.py \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 example.doc \u2514\u2500\u2500 tests \u2502 \u2514\u2500\u2500 test_example.py","title":"1.\u524d\u8a00 source"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#11","text":"\u5f97\u76ca\u4e8ePython\u63d0\u4f9b\u7684\u5bfc\u5165\u4e0e\u7ba1\u7406\u6a21\u5757\u7684\u65b9\u5f0f\uff0c\u7ed3\u6784\u5316Python\u9879\u76ee\u53d8\u5f97\u76f8\u5bf9\u7b80\u5355\u3002 \u8fd9\u91cc\u8bf4\u7684\u7b80\u5355\uff0c\u6307\u7684\u662f\u7ed3\u6784\u5316\u8fc7\u7a0b\u6ca1\u6709\u592a\u591a\u7ea6\u675f\u9650\u5236\u800c\u4e14\u6a21\u5757\u5bfc\u5165\u529f\u80fd\u5bb9\u6613\u638c\u63e1\u3002 \u56e0\u800c\u60a8\u53ea\u5269\u4e0b\u67b6\u6784\u6027\u7684\u5de5\u4f5c\uff0c\u5305\u62ec\u8bbe\u8ba1\u3001\u5b9e\u73b0\u9879\u76ee\u5404\u4e2a\u6a21\u5757\uff0c\u5e76\u6574\u7406\u6e05\u4ed6\u4eec\u4e4b\u95f4 \u7684\u4ea4\u4e92\u5173\u7cfb\u3002 \u5bb9\u6613\u7ed3\u6784\u5316\u7684\u9879\u76ee\u540c\u6837\u610f\u5473\u7740\u5b83\u7684\u7ed3\u6784\u5316\u5bb9\u6613\u505a\u5f97\u7cdf\u7cd5\u3002\u7cdf\u7cd5\u7ed3\u6784\u7684\u7279\u5f81\u5305\u62ec\uff1a \u591a\u91cd\u4e14\u6df7\u4e71\u7684\u5faa\u73af\u4f9d\u8d56\u5173\u7cfb\uff1a\u4f8b\u5982\uff0cStudent\u7c7b\u4e2d\u9700\u8981Teacher\u7c7b\uff0c\u800c\u540c\u6837\u7684Teacher\u7c7b\u9700\u8981\u5f15\u5165Student\u7c7b\uff0c\u8fd9\u5c31\u662f\u4e00\u76f4\u5faa\u73af\u4f9d\u8d56\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b,\u60a8\u5f97\u501f\u52a9\u4e00\u4e9b\u4e0d\u600e\u4e48\u9760\u8c31\u7684 \u5c0f\u6280\u5de7\uff0c\u6bd4\u5982\u5728\u65b9\u6cd5\u6216\u51fd\u6570\u5185\u90e8\u4f7f\u7528import\u8bed\u53e5\u3002 \u9690\u542b\u8026\u5408\uff1a\u7531\u4e8eStudent\u7c7b\u4e0eTeacher\u7c7b\u4f1a\u76f8\u4f1a\u5f71\u54cd\uff0c\u5404\u81ea\u7684\u6539\u53d8\u90fd\u53ef\u80fd\u4f1a\u5f15\u8d77\u5bf9\u65b9\u7684\u6539\u53d8\u3002\u8fd9\u6837\u7684\u60c5\u51b5\u610f\u5473\u7740 Teacher\u7c7b\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u592a\u591a\u5173\u4e8eStudent\u7c7b\u7684\u5047\u8bbe\u5173\u8054\uff08\u76f8\u53cd\u4ea6\u662f\u5982\u6b64\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u5c06\u8fd9\u4e24\u4e2a\u7c7b\u7684\u5173\u7cfb\u8fdb\u884c\u89e3\u8026\uff0c\u4f8b\u5982\u6dfb\u52a0\u4e00\u4e2a\u8bfe\u7a0b\u7c7b\u6216\u8005\u73ed\u7ea7\u7c7b\u6765\u5c06\u4e24\u8005\u8054\u7cfb\u8d77\u6765\u3002 \u5927\u91cf\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\u6216\u4e0a\u4e0b\u6587\uff1a\u5927\u91cf\u7684\u4f7f\u7528\u53ef\u4ee5\u88ab\u4fee\u6539\u800c\u4e14\u662f\u80fd\u88ab\u4e0d\u540c\u5f15\u7528\u6216\u8005\u5bf9\u8c61\u4fee\u6539\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u51c6\u786e\u7684\u4f20\u9012 class \uff0c id \u8fd9\u6837\u786e\u5207\u7684\u53d8\u91cf\uff0c\u90a3\u51fa\u73b0bug\u7684\u65f6\u5019\u60a8\u5c31\u9700\u8981\u5f7b\u5e95\u68c0\u67e5\u5168\u5c40\u53d8\u91cf\u7684**\u6240\u6709\u5165\u53e3**\uff0c\u6765\u7406\u89e3\u4e3a\u5565\u4f1a\u53d1\u751f\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\u4e24\u4e2a\u8001\u5e08\u4e3a\u5565\u4f1a\u5728\u540c\u4e00\u4e2a\u73ed\u7ea7\u6559\u540c\u4e00\u95e8\u8bfe\u3002 \u9762\u6761\u5f0f\u4ee3\u7801 (Spaghetti code) \uff1a\u591a\u9875\u5d4c\u5957\u7684if\u8bed\u53e5\u4e0efor\u5faa\u73af\uff0c\u5305\u542b\u5927\u91cf\u590d\u5236-\u7c98\u8d34 \u7684\u8fc7\u7a0b\u4ee3\u7801\uff0c\u4e14\u6ca1\u6709\u5408\u9002\u7684\u5206\u5272\u2014\u2014\u8fd9\u6837\u7684\u4ee3\u7801\u88ab\u79f0\u4e3a\u9762\u6761\u5f0f\u4ee3\u7801\u3002Python\u4e2d\u6709\u610f\u601d \u7684\u7f29\u8fdb\u6392\u7248(\u6700\u5177\u4e89\u8bae\u7684\u7279\u6027\u4e4b\u4e00)\u4f7f\u9762\u6761\u5f0f\u4ee3\u7801\u5f88\u96be\u7ef4\u6301\uff0c\u5c24\u5176\u662f\u5728\u7eaf\u6587\u672c\u7f16\u8f91\u5668\u4e2d\uff0c\u5982vim\u7b49\u3002 \u6df7\u6c8c\u4ee3\u7801\uff1a\u8fd9\u7c7b\u4ee3\u7801\u5305\u542b\u4e0a\u767e\u6bb5\u76f8\u4f3c\u7684\u903b\u8f91\u788e\u7247\uff0c\u901a\u5e38\u662f\u7f3a\u4e4f \u5408\u9002\u7ed3\u6784\u7684\u7c7b\u6216\u5bf9\u8c61\u3002\u5f53\u4f60\u65e0\u6cd5\u6e05\u6670\u5b9a\u4e491\u4e2a\u7c7b\u6216\u8005\u5bf9\u8c61\u65f6\uff0c\u4e0d\u77e5\u9053\u662f\u5e94\u8be5\u5b9a\u4e49\u65b0\u7684\u7c7b\u8fd8\u662f\u7ee7\u627f\u539f\u6709\u7684\u7c7b\u3001\u6216\u8005\u662f\u5426\u9700\u8981\u4f7f\u7528\u65b9\u6cd5\u91cd\u8f7d\u662f\uff0c\u4e5f\u8bb8\u60a8\u5df2\u7ecf\u9677\u5165\u4e86\u6df7\u6c8c\u4ee3\u7801\u4e2d\u3002","title":"1.1 \u7ed3\u6784\u662f\u4e00\u628a\u94a5\u5319"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#2-source","text":"","title":"2. \u5de5\u7a0b\u7ed3\u6784 source"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#21","text":"packaging_tutorial \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 example_pkg \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 example.py \u251c\u2500\u2500 setup.py \u2514\u2500\u2500 tests \u9879\u76ee\u7ed3\u6784\u4ee5\u6839\u76ee\u5f55\u5f00\u59cb\uff0c\u4f5c\u4e3a\u9879\u76ee\u7684\u73af\u5883\u3002 \u5f53\u6709\u591a\u4e2a\u540c\u7ea7\u5305\u65f6\uff0c\u5b83\u4eec\u90fd\u662f\u6241\u5e73\u7684\u6563\u843d\u5728\u9879\u76ee\u6839\u76ee\u5f55\u3002\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u53ef\u80fd\u8fd8\u5b58\u5728\u5176\u4ed6\u975e\u5305\u76ee\u5f55\uff0c\u5982 data \u3001 docs \u7b49\u3002\u5982\u679c\u9700\u8981\u672c\u5730\u5f15\u7528\u7b2c\u4e09\u65b9\u5e93\uff0c\u4e5f\u9700\u8981\u653e\u5230\u6839\u76ee\u5f55\uff0c\u4f46\u7b2c\u4e09\u65b9\u5305\u5e76\u4e0d\u662f\u9879\u76ee\u7684\u5b50\u5305\uff0c\u800c\u662f\u5b83\u7684\u4e00\u4e2a\u5f15\u7528\u3002\u8fd9\u6837\u505a\u4f1a\u9020\u6210\u804c\u8d23\u6df7\u4e71\u3002\u5982\u4e0b\uff1a tutorial \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 data | \u2514\u2500\u2500 user.json \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 history.md \u251c\u2500\u2500 user \u2502 \u2514\u2500\u2500 __init__.py \u251c\u2500\u2500 views \u2502 \u2514\u2500\u2500 __init__.py \u251c\u2500\u2500 requests # \u8fd9\u662f\u9700\u8981\u672c\u5730\u6253\u5305\u7684\u7b2c\u4e09\u65b9\u5305 \u2514\u2500\u2500 request.py \u2502 \u2514\u2500\u2500 __init__.py \u251c\u2500\u2500 setup.py \u2514\u2500\u2500 tests \u5f53\u591a\u4e2a\u76ee\u5f55\u6241\u5e73\u7684\u5206\u5e03\u5728\u9879\u76ee\u6839\u76ee\u5f55\u65f6\uff0c\u5b83\u4eec\u626e\u6f14\u8005\u4e0d\u540c\u7684\u529f\u80fd\uff0c\u5728\u5f00\u53d1\u4e0a\uff0c\u4f1a\u5e26\u4e86\u4e00\u5b9a\u7684\u6df7\u4e71\u3002\u800c\u4e14\u5728\u6253\u5305\u548c\u6d4b\u8bd5\u4e0a\u4e5f\u4f1a\u5e26\u6765\u4e00\u4e9b\u4e0d\u4fbf\u3002 \u5728\u6253\u5305\u4e0a\uff0c\u9700\u8981\u63d0\u4f9b \u66f4\u591a\u7684\u914d\u7f6e \u6392\u9664\u4e0d\u5fc5\u8981\u7684\u76ee\u5f55\uff0c\u5982 docs \u6216\u8005\u5176\u4ed6\u4e0d\u9700\u8981\u6253\u5305\u4ec5\u9879\u76ee\u4e2d\u7684\u4e1c\u897f\u3002 \u5f53\u4f7f\u7528\u53ef\u7f16\u8f91\u5b89\u88c5\uff08 pip install -e . \uff09 \u65f6\uff0c\u4f1a\u5c06\u9879\u76ee\u6839\u76ee\u5f55\u4e2d\u7684\u6240\u6709\u4e1c\u897f\u5b89\u88c5\u5230\u73af\u5883\u4e2d\uff0c\u5305\u62ec\u4e00\u4e9b\u4e0d\u9700\u8981\u7684\u3002","title":"2.1 \u7b80\u5355\u7ed3\u6784"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#2-src","text":"\u4ee5\u4e0b\u7684src\u7ed3\u6784\u662f\u793e\u533a\u9010\u6e10\u9075\u5b88\u7684\u4e00\u4e2a\u6807\u51c6\u3002\u867d\u7136\u793e\u533a\u4e2d\u6709\u5927\u91cf\u8001\u7684\u9879\u76ee\u4f9d\u7136\u91c7\u7528\u7b80\u5355\u5e03\u5c40\uff0c\u4f46\u65b0\u9879\u76ee**\u63a8\u8350**\u4f7f\u7528 src \u7ed3\u6784\u3002 \u5982\u4e0b\u9762\u8fd9\u4e2a\u793a\u4f8b\u9879\u76ee\u7ed3\u6784\uff1a sampleproject \u251c\u2500\u2500 data \u2502 \u2514\u2500\u2500 user.json \u251c\u2500\u2500 bin \u2502 \u2514\u2500\u2500 start.bat \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 history.md \u251c\u2500\u2500 setup.py \u251c\u2500\u2500 src \u2502 \u251c\u2500\u2500 requests \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 sample \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 user \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 views \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 main.py \u251c\u2500\u2500 tests \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 user \u2502 \u2502 \u2514\u2500\u2500 __init__.py \u2502 \u2514\u2500\u2500 views \u2502 \u2514\u2500\u2500 __init__.py \u2514\u2500\u2500 conf.ini \u2514\u2500\u2500 settings.py \u9879\u76ee\u7684\u5305\u7ed3\u6784\u5f88\u6e05\u6670\uff0c\u5728\u73af\u5883\u4e2d\u53ea\u9700\u8981\u5f15\u5165 src \u76ee\u5f55\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u5bfc\u5165\u9879\u76ee\u6e90\u4ee3\u7801\u3002\u901a\u8fc7 pip install -e . \u53ef\u7f16\u8f91\u5b89\u88c5\uff0c\u4e5f\u53ea\u4f1a\u5b89\u88c5 src \u4e2d\u7684\u5305\u3002\u7ba1\u7406\u8d77\u6765\u66f4\u52a0\u6e05\u6670\u3002","title":"2. src \u7ed3\u6784"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#readm","text":"\u8fd9\u5e94\u8be5\u662f\u6bcf\u4e2a\u9879\u76ee\u90fd\u5e94\u8be5\u6709\u7684\u4e00\u4e2a\u6587\u4ef6\uff0c\u76ee\u7684\u662f\u80fd\u7b80\u8981\u63cf\u8ff0\u8be5\u9879\u76ee\u7684\u4fe1\u606f\uff0c\u8ba9\u8bfb\u8005\u5feb\u901f\u4e86\u89e3\u8fd9\u4e2a\u9879\u76ee\u3002 \u5b83\u9700\u8981\u8bf4\u660e\u4ee5\u4e0b\u51e0\u4e2a\u4e8b\u9879: 1.\u8f6f\u4ef6\u5b9a\u4f4d\uff0c\u8f6f\u4ef6\u7684\u57fa\u672c\u529f\u80fd\u3002 2.\u8fd0\u884c\u4ee3\u7801\u7684\u65b9\u6cd5: \u5b89\u88c5\u73af\u5883\u3001\u542f\u52a8\u547d\u4ee4\u7b49\u3002 3.\u7b80\u8981\u7684\u4f7f\u7528\u8bf4\u660e\u3002 4.\u4ee3\u7801\u76ee\u5f55\u7ed3\u6784\u8bf4\u660e\uff0c\u66f4\u8be6\u7ec6\u70b9\u53ef\u4ee5\u8bf4\u660e\u8f6f\u4ef6\u7684\u57fa\u672c\u539f\u7406\u3002 5.\u5e38\u89c1\u95ee\u9898\u8bf4\u660e\u3002 \u5728\u8f6f\u4ef6\u5f00\u53d1\u521d\u671f\uff0c\u7531\u4e8e\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4ee5\u4e0a\u5185\u5bb9\u53ef\u80fd\u4e0d\u660e\u786e\u6216\u8005\u53d1\u751f\u53d8\u5316\uff0c\u5e76\u4e0d\u662f\u4e00\u5b9a\u8981\u5728\u4e00\u5f00\u59cb\u5c31\u5c06\u6240\u6709\u4fe1\u606f\u90fd\u8865\u5168\u3002\u4f46\u662f\u5728\u9879\u76ee\u5b8c\u7ed3\u7684\u65f6\u5019\uff0c\u662f\u9700\u8981\u64b0\u5199\u8fd9\u6837\u7684\u4e00\u4e2a\u6587\u6863\u7684\u3002","title":"READM"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#requirementstxt","text":"\u8fd9\u4e2a\u6587\u4ef6\u5b58\u5728\u7684\u76ee\u7684\u662f: \u65b9\u4fbf\u5f00\u53d1\u8005\u7ef4\u62a4\u8f6f\u4ef6\u7684\u5305\u4f9d\u8d56\u3002\u5c06\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u65b0\u589e\u7684\u5305\u6dfb\u52a0\u8fdb\u8fd9\u4e2a\u5217\u8868\u4e2d\uff0c\u907f\u514d\u5728 setup.py \u5b89\u88c5\u4f9d\u8d56\u65f6\u6f0f\u6389\u8f6f\u4ef6\u5305\u3002 \u65b9\u4fbf\u8bfb\u8005\u660e\u786e\u9879\u76ee\u4f7f\u7528\u4e86\u54ea\u4e9bPython\u5305\u3002 \u8fd9\u4e2a\u6587\u4ef6\u7684\u683c\u5f0f\u662f\u6bcf\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u5305\u4f9d\u8d56\u7684\u8bf4\u660e\uff0c\u901a\u5e38\u662f numpy>=2.20.1 \u8fd9\u79cd\u683c\u5f0f\uff0c\u8981\u6c42\u662f\u8fd9\u4e2a\u683c\u5f0f\u80fd\u88ab pip \u8bc6\u522b\uff0c \u8fd9\u6837\u5c31\u53ef\u4ee5\u7b80\u5355\u7684\u901a\u8fc7 pip install -r requirements.txt \u6765\u628a\u6240\u6709Python\u5305\u4f9d\u8d56\u90fd\u88c5\u597d\u4e86\u3002 \u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 pip freeze > requirements.txt \u547d\u4ee4\u5c06\u4f60\u5f53\u524d\u7684\u73af\u5883\u6240\u5b89\u88c5\u7684\u5305\u751f\u6210 requirements.txt \u5177\u4f53\u683c\u5f0f\u8bf4\u660e\uff0c\u8bf7\u67e5\u770b\u5b98\u65b9\u6587\u6863 Requirements numpy >= 2.20 pandas docopt == 0.6.1 tqdm >= 3.4, <= 4.5 ...","title":"requirements.txt"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#setup","text":"\u4e00\u822c\u6765\u8bf4\uff0c\u7528 setup.py \u6765\u7ba1\u7406\u4ee3\u7801\u7684\u6253\u5305\u3001\u5b89\u88c5\u3001\u90e8\u7f72\u95ee\u9898\u3002\u4e1a\u754c\u6807\u51c6\u7684\u5199\u6cd5\u662f\u7528Python\u6d41\u884c\u7684\u6253\u5305\u5de5\u5177 setuptools \u6765\u7ba1\u7406\u8fd9\u4e9b\u4e8b\u60c5\u3002 \u8fd9\u79cd\u65b9\u5f0f\u666e\u904d\u5e94\u7528\u4e8e\u5f00\u6e90\u9879\u76ee\u4e2d\u3002\u4e0d\u8fc7\u8fd9\u91cc\u7684\u6838\u5fc3\u601d\u60f3\u4e0d\u662f\u7528\u6807\u51c6\u5316\u7684\u5de5\u5177\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u800c\u662f\u8bf4\uff0c \u4e00\u4e2a\u9879\u76ee\u4e00\u5b9a\u8981\u6709\u4e00\u4e2a\u5b89\u88c5\u90e8\u7f72\u5de5\u5177\uff0c\u80fd\u5feb\u901f\u4fbf\u6377\u7684\u5728\u4e00\u53f0\u65b0\u673a\u5668\u4e0a\u5c06\u73af\u5883\u88c5\u597d\u3001\u4ee3\u7801\u90e8\u7f72\u597d\u548c\u5c06\u7a0b\u5e8f\u8fd0\u884c\u8d77\u6765\u3002 setuptools \u7684\u6587\u6863\u6bd4\u8f83\u5e9e\u5927\uff0c\u521a\u63a5\u89e6\u7684\u8bdd\uff0c\u53ef\u80fd\u4e0d\u592a\u597d\u627e\u5230\u5207\u5165\u70b9\u3002\u5b66\u4e60\u6280\u672f\u7684\u65b9\u5f0f\u5c31\u662f\u770b\u4ed6\u4eba\u662f\u600e\u4e48\u7528\u7684\uff0c \u53ef\u4ee5\u53c2\u8003\u4e00\u4e0bPython\u7684\u4e00\u4e2aWeb\u6846\u67b6 Flask \u662f\u5982\u4f55\u5199\u7684: Flask setup.py from setuptools import setup # Metadata goes in setup.cfg. These are here for GitHub's dependency graph. setup ( name = \"Flask\" , install_requires = [ \"Werkzeug >= 2.2.2\" , \"Jinja2 >= 3.0\" , \"itsdangerous >= 2.0\" , \"click >= 8.0\" , \"importlib-metadata >= 3.6.0; python_version < '3.10'\" , ], extras_require = { \"async\" : [ \"asgiref >= 3.2\" ], \"dotenv\" : [ \"python-dotenv\" ], }, )","title":"setup"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_2","text":"\u914d\u7f6e\u662f\u4e00\u4e2a\u9879\u76ee\u7684\u6838\u5fc3\u9a71\u52a8\uff0c\u53ef\u4ee5\u5728\u4e0d\u66f4\u6539\u6e90\u4ee3\u7801\u6216\u51cf\u5c11\u6e90\u4ee3\u7801\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\u5feb\u901f\u8c03\u6574\u9879\u76ee\u7684\u8fd0\u884c\u3002 \u4f7f\u7528\u4e2d\u5fc3\u914d\u7f6e\u9a71\u52a8\u9879\u76ee\uff0c\u80fd\u8ba9\u9879\u76ee\u7684\u4f7f\u7528\u66f4\u52a0\u7075\u6d3b\uff0c\u8fd0\u7ef4\u5de5\u4f5c\u66f4\u8f7b\u677e\u3002 \u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u91cd\u7528\u6027\uff0c\u4e0d\u518d\u6bcf\u6b21\u90fd\u53bb\u4fee\u6539\u4ee3\u7801\u5185\u90e8 \u8fd9\u610f\u5473\u7740\u5176\u4ed6\u4e0d\u592a\u61c2\u4f60\u4ee3\u7801\u5185\u90e8\u7684\u4eba\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4f60\u7684\u9879\u76ee\uff0c\u53ea\u7528\u6839\u636e\u9700\u6c42\u66f4\u6539\u914d\u7f6e\u5373\u53ef \u6709\u5229\u4e8e\u56e2\u961f\u534f\u4f5c \u6709\u5229\u4e8e\u5b89\u5168\u6570\u636e/\u79d8\u5bc6\u6570\u636e\u7684\u7ba1\u7406 \u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u9a71\u52a8\u9879\u76ee\u7684\u76f8\u5173\u57fa\u7840\u914d\u7f6e\uff0c\u5982\u9ed8\u8ba4 data \u548c logs \u6587\u4ef6\u5939\u7684\u6240\u5728\u8def\u5f84\u548c\u540d\u79f0\uff0cWeb\u9879\u76ee\u76f8\u5173\u914d\u7f6e\uff0c\u6570\u636e\u5e93\u8fde\u63a5\u76f8\u5173\u914d\u7f6e\uff0c\u7b2c\u4e09\u65b9\u5e93\u4f7f\u7528\u914d\u7f6e\u7b49\u3002\u8fd9\u4e9b\u4e0d\u540c\u914d\u7f6e\u53ef\u4ee5\u5206\u522b\u5b58\u653e\u5728\u4e0d\u540c\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u4e14\u6587\u4ef6\u7c7b\u578b\u53ef\u4ee5\u591a\u79cd\u591a\u6837\uff0c\u5982 .py \uff0c .cfg \uff0c .ini \uff0c .yaml \uff0c .json \uff0c .txt \u7b49\u3002\u914d\u7f6e\u6587\u4ef6\u4f7f\u7528\u65b9\u6cd5\u53c2\u8003\u8fd9\u4e2a \u535a\u5ba2 \u3002","title":"\u914d\u7f6e\u6587\u4ef6"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#source","text":"\u5728\u5f88\u591a\u5f00\u6e90\u9879\u76ee\u6216\u8005\u4e00\u4e9b\u8f83\u5c0f\u7684\u9879\u76ee\u4e2d\u5e38\u89c1\u5bf9\u914d\u7f6e\u6587\u4ef6\u7684\u4f7f\u7528\u505a\u6cd5\u662f\uff1a \u914d\u7f6e\u6587\u4ef6\u5199\u5728\u4e00\u4e2a\u6216\u591a\u4e2apython\u6587\u4ef6\u4e2d\uff0c\u6bd4\u5982\u4e0a\u6587\u7684 settings.py \u3002\u9879\u76ee\u4e2d\u54ea\u4e2a\u6a21\u5757\u7528\u5230\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u5c31\u76f4\u63a5\u901a\u8fc7 import settings \u8fd9\u79cd\u5f62\u5f0f\u6765\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u914d\u7f6e\u3002\u8fd9\u79cd\u505a\u6cd5\u4e0d\u592a\u597d\u7684\u65b9\u9762: - \u5217\u8868\u8fd9\u8ba9\u5355\u5143\u6d4b\u8bd5\u53d8\u5f97\u56f0\u96be\uff08\u56e0\u4e3a\u6a21\u5757\u5185\u90e8\u4f9d\u8d56\u4e86\u5916\u90e8\u914d\u7f6e\uff09 - \u53e6\u4e00\u65b9\u9762\u914d\u7f6e\u6587\u4ef6\u4f5c\u4e3a\u7528\u6237\u63a7\u5236\u7a0b\u5e8f\u7684\u63a5\u53e3\uff0c\u5e94\u5f53\u53ef\u4ee5\u7531\u7528\u6237\u81ea\u7531\u6307\u5b9a\u8be5\u6587\u4ef6\u7684\u8def\u5f84\u3002 - \u7a0b\u5e8f\u7ec4\u4ef6\u53ef\u590d\u7528\u6027\u592a\u5dee\uff0c\u56e0\u4e3a\u8fd9\u79cd\u8d2f\u7a7f\u6240\u6709\u6a21\u5757\u7684\u4ee3\u7801\u786c\u7f16\u7801\u65b9\u5f0f\uff0c\u4f7f\u5f97\u5927\u90e8\u5206\u6a21\u5757\u90fd\u4f9d\u8d56 conf.py \u8fd9\u4e2a\u6587\u4ef6\u3002 ## Settings # File config SOURCE_FILE = '/tmp/foo.txt' # Log config LOG_LEVEL = 'DEBUG' LOG_FORMAT = ' %(asctime)s - %(name)s - %(levelname)s - %(message)s ' ## main import config import logging logging . basicConfig ( level = settings . LOG_LEVEL , format = settings . LOG_FORMAT ) ...","title":"\u9759\u6001\u914d\u7f6e source"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_3","text":"\u6240\u4ee5\uff0c\u66f4\u597d\u7684\u65b9\u5f0f\u662f: - \u6a21\u5757\u7684\u914d\u7f6e\u90fd\u662f\u53ef\u4ee5\u7075\u6d3b\u914d\u7f6e\u7684\uff0c\u4e0d\u53d7\u5916\u90e8\u914d\u7f6e\u6587\u4ef6\u7684\u5f71\u54cd - \u7a0b\u5e8f\u7684\u914d\u7f6e\u4e5f\u662f\u53ef\u4ee5\u7075\u6d3b\u63a7\u5236\u7684\u3002 Dynaconf\uff08 pypi \uff0c \u5b98\u7f51 \uff09\u662f\u4e00\u4e2a\u7075\u6d3b\u7684\u4e2d\u5fc3\u914d\u7f6e\u7ba1\u7406\u5de5\u5177\uff0c\u80fd\u591f\u4ece\u4e0d\u540c\u7684\u914d\u7f6e\u6570\u636e\u5b58\u50a8\u65b9\u5f0f\u4e2d\u8bfb\u53d6\u914d\u7f6e\uff0c\u4f8b\u5982 .py \uff0c .redis \uff0c .ini \uff0c .json \u6587\u4ef6\uff0c\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u7b49\u7b49\u3002 \u5176\u5177\u6709\u5982\u4e0b\u7279\u70b9\uff1a \u52a0\u8f7d\u591a\u4e2a\u914d\u7f6e\u6e90 \u914d\u7f6e\u5206\u5c42 Django Flask \u6269\u5c55 \u652f\u6301 Redis \u548c Vault \u5728\u9879\u76ee\u4e2d\u65b0\u5efa\u914d\u7f6e\u6587\u4ef6 settings.yml ## setting foo : 1 bar : 2 \u65b0\u5efa\u914d\u7f6e\u6a21\u5757 config.py ## config.py from dynaconf import Dynaconf settings = Dynaconf ( settings_files = [ 'settings.yml' ]) \u65b0\u5efa\u4e00\u4e2a app.py \u6587\u4ef6\uff0c\u4f7f\u7528\u914d\u7f6e ## app.py from config import settings print ( settings . FOO ) print ( settings . BAR ) \u7136\u540e\u8fd0\u884c python app.py \u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u80fd\u591f\u81ea\u52a8\u83b7\u53d6 settings.yml \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u503c\u3002 \u589e\u52a0\u672c\u5730\u914d\u7f6e\u6587\u4ef6 settings.local.yml ## setting.local foo : 10 bar : 20 \u518d\u6b21\u8fd0\u884c python app.py \uff0c\u7a0b\u5e8f\u4f1a\u81ea\u52a8\u83b7\u53d6 settings.local.yml \u3002 \u8fd9\u662f\u56e0\u4e3a Dynaconf \u5728\u521d\u59cb\u5316\u662f\u4f20\u5165\u4e86\u914d\u7f6e\u6587\u4ef6\u683c\u5f0f\u4e3a settings.yml \uff0c\u5728\u52a0\u8f7d\u914d\u7f6e\u65f6\uff0c\u4f1a\u540c\u65f6\u67e5\u627e settings.local.yml \u7684\u914d\u7f6e\u6587\u4ef6\u3002 \u5e76\u5c06\u4e24\u4e2a\u914d\u7f6e\u6587\u4ef6\u7684\u5185\u5bb9\u5408\u5e76\uff0c\u5982\u679c\u5b58\u5728\u76f8\u540c\u53d8\u91cf\uff0c settings.local.yml \u4f1a\u8986\u76d6 settings.yml \u4e2d\u7684\u914d\u7f6e\u3002","title":"\u52a8\u6001\u914d\u7f6e"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#supported-formats","text":".toml - Dynaconf's default and recommended file format. .yaml|.yml - Recommended for Django applications. .json - Useful to reuse existing or exported settings. .ini - Useful to reuse legacy settings. .py - Not Recommended but supported for backwards compatibility. .env - Useful to automate the loading of environment variables.","title":"Supported formats"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#3-source","text":"","title":"3. \u6a21\u5757\u4e0e\u5bfc\u5165 source"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#31","text":"Python\u6a21\u5757\u662f\u6700\u4e3b\u8981\u7684\u62bd\u8c61\u5c42\u4e4b\u4e00\uff0c\u5e76\u4e14\u5f88\u53ef\u80fd\u662f\u6700\u81ea\u7136\u7684\u4e00\u4e2a\u3002\u62bd\u8c61\u5c42\u5141\u8bb8\u5c06\u4ee3\u7801\u5206\u4e3a \u4e0d\u540c\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u5305\u542b\u76f8\u5173\u7684\u6570\u636e\u4e0e\u529f\u80fd\u3002 \u4f8b\u5982\u5728\u9879\u76ee\u4e2d\uff0c\u4e00\u5c42\u63a7\u5236\u7528\u6237\u64cd\u4f5c\u76f8\u5173\u63a5\u53e3\uff0c\u53e6\u4e00\u5c42\u5904\u7406\u5e95\u5c42\u6570\u636e\u64cd\u4f5c\u3002\u6700\u81ea\u7136\u5206\u5f00\u8fd9\u4e24 \u5c42\u7684\u65b9\u5f0f\u662f\uff0c\u5728\u4e00\u4efd\u6587\u4ef6\u91cc\u91cd\u7ec4\u6240\u6709\u529f\u80fd\u63a5\u53e3\uff0c\u5e76\u5c06\u6240\u6709\u5e95\u5c42\u64cd\u4f5c\u5c01\u88c5\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\u4e2d\u3002 \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u63a5\u53e3\u6587\u4ef6\u9700\u8981\u5bfc\u5165\u5c01\u88c5\u5e95\u5c42\u64cd\u4f5c\u7684\u6587\u4ef6\uff0c\u53ef\u901a\u8fc7 import \u548c from ... import \u8bed\u53e5\u5b8c\u6210\u3002\u4e00\u65e6\u60a8\u4f7f\u7528 import \u8bed\u53e5\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u6a21\u5757\u3002 \u65e2\u53ef\u4ee5\u662f\u5185\u7f6e\u7684\u6a21\u5757\u5305\u62ec os \u548c sys\uff0c\u4e5f\u53ef\u4ee5\u662f\u5df2\u7ecf\u5b89\u88c5\u7684\u7b2c\u4e09\u65b9\u7684\u6a21\u5757\uff0c\u6216\u8005\u9879\u76ee \u5185\u90e8\u7684\u6a21\u5757\u3002 \u4e3a\u9075\u5b88\u98ce\u683c\u6307\u5357\u4e2d\u7684\u89c4\u5b9a\uff0c\u6a21\u5757\u540d\u79f0\u8981\u77ed\u3001\u4f7f\u7528\u5c0f\u5199\uff0c\u5e76\u907f\u514d\u4f7f\u7528\u7279\u6b8a\u7b26\u53f7\uff0c\u6bd4\u5982\u70b9(.) \u548c\u95ee\u53f7(?)\u3002\u5982 my.spam.py \u8fd9\u6837\u7684\u540d\u5b57\u662f\u5fc5\u987b\u4e0d\u80fd\u7528\u7684\uff01\u8be5\u65b9\u5f0f\u547d\u540d\u5c06\u59a8\u788d Python\u7684\u6a21\u5757\u67e5\u627e\u529f\u80fd\u3002\u5c31 my.spam.py \u6765\u8bf4\uff0cPython \u8ba4\u4e3a\u9700\u8981\u5728 my \u6587\u4ef6\u5939 \u4e2d\u627e\u5230 spam.py \u6587\u4ef6\uff0c\u5b9e\u9645\u5e76\u4e0d\u662f\u8fd9\u6837\u3002\u5982\u679c\u613f\u610f\u60a8\u53ef\u4ee5\u5c06\u6a21\u5757\u547d\u540d\u4e3a my_spam.py \uff0c \u4e0d\u8fc7\u5e76\u4e0d\u63a8\u8350\u5728\u6a21\u5757\u540d\u4e2d\u4f7f\u7528\u4e0b\u5212\u7ebf\u3002\u4f46\u662f\uff0c\u5728\u6a21\u5757\u540d\u79f0\u4e2d\u4f7f\u7528\u5176\u4ed6\u5b57\u7b26\uff08\u7a7a\u683c\u6216\u8fde\u5b57\u53f7\uff09 \u5c06\u963b\u6b62\u5bfc\u5165\uff08 - \u662f\u51cf\u6cd5\u8fd0\u7b97\u7b26\uff09\uff0c\u56e0\u6b64\u8bf7\u5c3d\u91cf\u4fdd\u6301\u6a21\u5757\u540d\u79f0\u7b80\u5355\uff0c\u4ee5\u65e0\u9700\u5206\u5f00\u5355\u8bcd\u3002 \u6700\u91cd\u8981\u7684\u662f\uff0c\u4e0d\u8981\u4f7f\u7528\u4e0b\u5212\u7ebf\u547d\u540d\u7a7a\u95f4\uff0c\u800c\u662f\u4f7f\u7528\u5b50\u6a21\u5757\u3002 # OK import library.plugin.foo # not OK import library.foo_plugin \u9664\u4e86\u4ee5\u4e0a\u7684\u547d\u540d\u9650\u5236\u5916\uff0cPython\u6587\u4ef6\u6210\u4e3a\u6a21\u5757\u6ca1\u6709\u5176\u4ed6\u7279\u6b8a\u7684\u8981\u6c42\uff0c\u4f46\u4e3a\u4e86\u5408\u7406\u5730\u4f7f\u7528\u8fd9 \u4e2a\u89c2\u5ff5\u5e76\u907f\u514d\u95ee\u9898\uff0c\u60a8\u9700\u8981\u7406\u89e3import\u7684\u539f\u7406\u673a\u5236\u3002\u5177\u4f53\u6765\u8bf4\uff0c import modu \u8bed\u53e5\u5c06 \u5bfb\u627e\u5408\u9002\u7684\u6587\u4ef6\uff0c\u5373\u8c03\u7528\u76ee\u5f55\u4e0b\u7684 modu.py \u6587\u4ef6\uff08\u5982\u679c\u8be5\u6587\u4ef6\u5b58\u5728\uff09\u3002\u5982\u679c\u6ca1\u6709 \u627e\u5230\u8fd9\u4efd\u6587\u4ef6\uff0cPython\u89e3\u91ca\u5668\u9012\u5f52\u5730\u5728 \"PYTHONPATH\" \u73af\u5883\u53d8\u91cf\u4e2d\u67e5\u627e\u8be5\u6587\u4ef6\uff0c\u5982\u679c\u4ecd\u6ca1 \u6709\u627e\u5230\uff0c\u5c06\u629b\u51faImportError\u5f02\u5e38\u3002 \u4e00\u65e6\u627e\u5230 modu.py \uff0cPython\u89e3\u91ca\u5668\u5c06\u5728\u9694\u79bb\u7684\u4f5c\u7528\u57df\u5185\u6267\u884c\u8fd9\u4e2a\u6a21\u5757\u3002\u6240\u6709\u9876\u5c42 \u8bed\u53e5\u90fd\u4f1a\u88ab\u6267\u884c\uff0c\u5305\u62ec\u5176\u4ed6\u7684\u5f15\u7528\u3002\u65b9\u6cd5\u4e0e\u7c7b\u7684\u5b9a\u4e49\u5c06\u4f1a\u5b58\u50a8\u5230\u6a21\u5757\u7684\u5b57\u5178\u4e2d\u3002\u7136\u540e\uff0c\u8fd9\u4e2a \u6a21\u5757\u7684\u53d8\u91cf\u3001\u65b9\u6cd5\u548c\u7c7b\u901a\u8fc7\u547d\u540d\u7a7a\u95f4\u66b4\u9732\u7ed9\u8c03\u7528\u65b9\uff0c\u8fd9\u662fPython\u4e2d\u7279\u522b\u6709\u7528\u548c\u5f3a\u5927\u7684\u6838\u5fc3\u6982\u5ff5\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528import\u8bed\u53e5\u7684\u7279\u6b8a\u5f62\u5f0f from modu import * \u6a21\u62df\u66f4\u6807\u51c6\u7684\u884c\u4e3a\u3002\u4f46 import * \u901a\u5e38 \u88ab\u8ba4\u4e3a\u662f\u4e0d\u597d\u7684\u505a\u6cd5\u3002 \u4f7f\u7528 from modu import * \u7684\u4ee3\u7801\u8f83\u96be\u9605\u8bfb\u800c\u4e14\u4f9d\u8d56\u72ec\u7acb\u6027\u4e0d\u8db3 \u3002 \u4f7f\u7528 from modu import func \u80fd\u7cbe\u786e\u5b9a\u4f4d\u60a8\u60f3\u5bfc\u5165\u7684\u65b9\u6cd5\u5e76\u5c06\u5176\u653e\u5230\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u4e2d\u3002 \u6bd4 from modu import * \u8981\u597d\u4e9b\uff0c\u56e0\u4e3a\u5b83\u660e\u786e\u5730\u6307\u660e\u5f80\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u4e2d\u5bfc\u5165\u4e86\u4ec0\u4e48\u65b9\u6cd5\uff0c\u5b83\u548c import modu \u76f8\u6bd4\u552f\u4e00\u7684\u4f18\u70b9\u662f\u4e4b\u540e\u4f7f\u7528\u65b9\u6cd5\u65f6\u53ef\u4ee5\u5c11\u6253\u70b9\u513f\u5b57\u3002 \u9664\u4e86\u7b80\u5355\u7684\u5355\u6587\u4ef6\u9879\u76ee\u5916\uff0c\u5176\u4ed6\u9879\u76ee\u9700\u8981\u80fd\u591f\u660e\u786e\u6307\u51fa\u7c7b\u548c\u65b9\u6cd5 \u7684\u51fa\u5904\uff0c\u4f8b\u5982\u4f7f\u7528 modu.func \u8bed\u53e5\uff0c\u8fd9\u5c06\u663e\u8457\u63d0\u5347\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u6613\u7406\u89e3\u6027\u3002 # bad from modu import * x = sqrt ( 4 ) # sqrt\u662f\u6a21\u5757modu\u7684\u4e00\u90e8\u5206\u4e48\uff1f\u6216\u662f\u5185\u5efa\u51fd\u6570\u4e48\uff1f\u4e0a\u6587\u5b9a\u4e49\u4e86\u4e48\uff1f # ok from modu import sqrt x = sqrt ( 4 ) # \u5982\u679c\u5728import\u8bed\u53e5\u4e0e\u8fd9\u6761\u8bed\u53e5\u4e4b\u95f4\uff0csqrt\u6ca1\u6709\u88ab\u91cd\u590d\u5b9a\u4e49\uff0c\u5b83\u4e5f\u8bb8\u662f\u6a21\u5757modu\u7684\u4e00\u90e8\u5206\u3002 # good import modu x = modu . sqrt ( 4 ) # sqrt\u663e\u7136\u662f\u5c5e\u4e8e\u6a21\u5757modu\u7684\u3002","title":"3.1 \u6a21\u5757"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#32","text":"Python\u63d0\u4f9b\u975e\u5e38\u7b80\u5355\u7684\u5305\u7ba1\u7406\u7cfb\u7edf\uff0c\u5373\u7b80\u5355\u5730\u5c06\u6a21\u5757\u7ba1\u7406\u673a\u5236\u6269\u5c55\u5230\u4e00\u4e2a\u76ee\u5f55\u4e0a(\u76ee\u5f55\u6269 \u5c55\u4e3a\u5305)\u3002 \u4efb\u610f\u5305\u542b __init__.py \u6587\u4ef6\u7684\u76ee\u5f55\u90fd\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2aPython\u5305\u3002\u5bfc\u5165\u4e00\u4e2a\u5305\u91cc\u4e0d\u540c \u6a21\u5757\u7684\u65b9\u5f0f\u548c\u666e\u901a\u7684\u5bfc\u5165\u6a21\u5757\u65b9\u5f0f\u76f8\u4f3c\uff0c\u7279\u522b\u7684\u5730\u65b9\u662f __init__.py \u6587\u4ef6\u5c06\u96c6\u5408 \u6240\u6709\u5305\u8303\u56f4\u5185\u7684\u5b9a\u4e49\u3002 pack/ \u76ee\u5f55\u4e0b\u7684 modu.py \u6587\u4ef6\u901a\u8fc7 import pack.modu \u8bed\u53e5\u5bfc\u5165\u3002 \u8be5\u8bed\u53e5\u4f1a\u5728 pack \u76ee\u5f55\u4e0b\u5bfb\u627e __init__.py \u6587\u4ef6\uff0c\u5e76\u6267\u884c\u5176\u4e2d\u6240\u6709\u9876\u5c42 \u8bed\u53e5\u3002\u4ee5\u4e0a\u64cd\u4f5c\u4e4b\u540e\uff0c modu.py \u5185\u5b9a\u4e49\u7684\u6240\u6709\u53d8\u91cf\u3001\u65b9\u6cd5\u548c\u7c7b\u5728 pack.modu \u547d\u540d\u7a7a \u95f4\u4e2d\u5747\u53ef\u770b\u5230\u3002 \u4e00\u4e2a\u5e38\u89c1\u7684\u95ee\u9898\u662f\u5f80 __init__.py \u4e2d\u52a0\u4e86\u8fc7\u591a\u4ee3\u7801\uff0c\u968f\u7740\u9879\u76ee\u7684\u590d\u6742\u5ea6\u589e\u957f\uff0c \u76ee\u5f55\u7ed3\u6784\u8d8a\u6765\u8d8a\u6df1\uff0c\u5b50\u5305\u548c\u66f4\u6df1\u5d4c\u5957\u7684\u5b50\u5305\u53ef\u80fd\u4f1a\u51fa\u73b0\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5bfc\u5165\u591a\u5c42\u5d4c\u5957 \u7684\u5b50\u5305\u4e2d\u7684\u67d0\u4e2a\u90e8\u4ef6\u9700\u8981\u6267\u884c\u6240\u6709\u901a\u8fc7\u8def\u5f84\u91cc\u78b0\u5230\u7684 __init__.py \u6587\u4ef6\u3002\u5982\u679c \u5305\u5185\u7684\u6a21\u5757\u548c\u5b50\u5305\u6ca1\u6709\u4ee3\u7801\u5171\u4eab\u7684\u9700\u6c42\uff0c\u4f7f\u7528\u7a7a\u767d\u7684 __init__.py \u6587\u4ef6\u662f\u6b63\u5e38 \u751a\u81f3\u597d\u7684\u505a\u6cd5\u3002 \u6700\u540e\uff0c\u5bfc\u5165\u6df1\u5c42\u5d4c\u5957\u7684\u5305\u53ef\u7528\u8fd9\u4e2a\u65b9\u4fbf\u7684\u8bed\u6cd5\uff1a import very.deep.module as mod \u3002 \u8be5\u8bed\u6cd5\u5141\u8bb8\u4f7f\u7528 mod \u66ff\u4ee3\u5197\u957f\u7684 very.deep.module \u3002","title":"3.2 \u5305"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#33-source","text":"\u5bfc\u5165\u603b\u5e94\u8be5\u653e\u5728\u6587\u4ef6\u9876\u90e8\uff0c\u4f4d\u4e8e\u6a21\u5757\u6ce8\u91ca\u548c\u6587\u6863\u5b57\u7b26\u4e32\u4e4b\u540e\uff0c\u6a21\u5757\u5168\u5c40\u53d8\u91cf\u548c\u5e38\u91cf\u4e4b\u524d\u3002\u5bfc\u5165\u5e94\u8be5\u6309\u7167\u4ece\u6700\u901a\u7528\u5230\u6700\u4e0d\u901a\u7528\u7684\u987a\u5e8f\u5206\u7ec4\uff1a Future \u5bfc\u5165\u8bed\u53e5\uff1a from __future__ import print_function \u6807\u51c6\u5e93\u5bfc\u5165\uff1a import sys \u7b2c\u4e09\u65b9 \u6a21\u5757\u6216\u5305\u5bfc\u5165\uff1a import tensorflow as tf \u4ee3\u7801\u5e93\u5b50\u5305\u5bfc\u5165\uff1a from otherproject.ai import mind \u5df2\u5f03\u7528\uff1a \u4e0e\u6b64\u6587\u4ef6\u5c5e\u4e8e\u540c\u4e00\u9876\u7ea7\u5b50\u5305\u7684\u5e94\u7528\u7a0b\u5e8f\u7279\u5b9a\u5bfc\u5165\u3002\u4f8b\u5982\uff1a from myproject.backend.hgwells import time_machine \u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\u4e4b\u524d\u7684 Google Python \u98ce\u683c\u662f\u8fd9\u4e48\u505a\u7684\uff0c\u4f46\u73b0\u5728\u5df2\u7ecf\u4e0d\u63a8\u8350\u4e86\u3002 \u65b0\u7684\u4ee3\u7801\u4e0d\u8981\u8fd9\u4e48\u505a \u3002\u53ea\u9700\u5c06\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u5b50\u5305\u5bfc\u5165\u4e0e\u5176\u4ed6\u5b50\u5305\u5bfc\u5165\u4e00\u6837\u5bf9\u5f85\u5373\u53ef\u3002 \u5f3a\u70c8\u5efa\u8bae \uff1a - \u4ec5\u5bf9\u5305\u548c\u6a21\u5757\u4f7f\u7528\u5bfc\u5165,\u800c\u4e0d\u5355\u72ec\u5bfc\u5165\u51fd\u6570\u6216\u8005\u7c7b\u3002 typing \u6a21\u5757\u4f8b\u5916 - \u4f7f\u7528\u6a21\u5757\u7684**\u5168\u8def\u5f84\u540d**\u6765\u5bfc\u5165\u6bcf\u4e2a\u6a21\u5757 - \u5bfc\u5165\u65f6\u4e0d\u8981\u4f7f\u7528\u76f8\u5bf9\u540d\u79f0 ( from .x import y )\u3002 \u5373\u4f7f\u6a21\u5757\u5728\u540c\u4e00\u4e2a\u5305\u4e2d, \u4e5f\u8981\u4f7f\u7528\u5b8c\u6574\u5305\u540d\u3002 - \u4ec5\u5f53\u7f29\u5199 z \u662f\u901a\u7528\u7f29\u5199\u65f6\u624d\u53ef\u4f7f\u7528 import y as z .(\u6bd4\u5982 np \u4ee3\u8868 numpy )","title":"3.3 \u5bfc\u5165 source"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#source_1","text":"","title":"\u8bed\u8a00\u89c4\u8303 source"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_4","text":"\u6b63\u5e38\u64cd\u4f5c\u4ee3\u7801\u7684\u63a7\u5236\u6d41\u4e0d\u4f1a\u548c\u9519\u8bef\u5904\u7406\u4ee3\u7801\u6df7\u5728\u4e00\u8d77. \u5f53\u67d0\u79cd\u6761\u4ef6\u53d1\u751f\u65f6, \u5b83\u4e5f\u5141\u8bb8\u63a7\u5236\u6d41\u8df3\u8fc7\u591a\u4e2a\u6846\u67b6. \u4f8b\u5982, \u4e00\u6b65\u8df3\u51faN\u4e2a\u5d4c\u5957\u7684\u51fd\u6570, \u800c\u4e0d\u5fc5\u7ee7\u7eed\u6267\u884c\u9519\u8bef\u7684\u4ee3\u7801. \u4f7f\u7528\u4ee5\u4e0b try ... execpt ... \u8bed\u53e5\u6765\u6355\u83b7\u53ef\u80fd\u53d1\u751f\u7684\u5f02\u5e38\u3002 try : xxx except Exception as e : xxx else : # \u6ca1\u6709\u6355\u83b7\u5230\u5f02\u5e38\u624d\u6267\u884c xxx # \u6216\u8005finally try : xxx except Exception as e : xxx finally : # \u65e0\u8bba\u6709\u6ca1\u6709\u6355\u83b7\u5230\u5f02\u5e38\u90fd\u6267\u884c xxx \u4f7f\u7528\u5f02\u5e38\u5fc5\u987b\u9075\u5b88\u7279\u5b9a\u6761\u4ef6\uff1a \u4f18\u5148\u5408\u7406\u7684\u4f7f\u7528\u5185\u7f6e\u5f02\u5e38\u7c7b\uff0c \u4f8b\u5982 ValueError \uff0c TypeError \uff0c OSError \u7b49\u7b49\u3002 \u4e0d\u8981\u4f7f\u7528 assert \u8bed\u53e5\u6765\u9a8c\u8bc1\u516c\u5171API\u7684\u53c2\u6570\u503c. assert \u662f\u7528\u6765\u4fdd\u8bc1\u5185\u90e8\u6b63\u786e\u6027\u7684,\u800c\u4e0d\u662f\u7528\u6765\u5f3a\u5236\u7ea0\u6b63\u53c2\u6570\u4f7f\u7528\uff0c\u8fd9\u79cd\u60c5\u51b5\u5e94\u8be5\u4f7f\u7528 raise \u8bed\u53e5\u6765\u629b\u51fa\u5f02\u5e38\u3002 \u81ea\u5b9a\u4e49\u5f02\u5e38\u5e94\u7ee7\u627f\u5185\u5efa\u7684 Exception \u7c7b\uff0c\u4e14\u5f02\u5e38\u7c7b\u7684\u547d\u540d\u540e\u7f00\u4e3a**Error**\uff0c \u5982 ReadError \u7b49\u3002 \u6c38\u8fdc\u4e0d\u8981\u4f7f\u7528 except: \u8bed\u53e5\u6765\u6355\u83b7\u6240\u6709\u5f02\u5e38, \u4e5f\u4e0d\u8981\u6355\u83b7 Exception \u6216\u8005 StandardError \u3002 \u5426\u5219python\u4f1a\u6355\u83b7**\u6240\u6709\u5f02\u5e38**\uff08\u5305\u62ec**\u8bed\u6cd5\u9519\u8bef**\uff09\uff0c\u56e0\u6b64\u4f7f\u7528 except: \u6216\u8005 except Exception: \uff0c\u5f88\u5bb9\u6613\u9690\u85cf\u771f\u6b63\u7684**Bug**\uff0c\u5e76\u4e14\u4e0d\u5bb9\u6613\u5b9a\u4f4d\u67e5\u627e\u3002 \u5c3d\u91cf\u51cf\u5c11 try/except \u5757\u4e2d\u7684\u4ee3\u7801\u91cf\u3002 try \u5757\u7684\u4f53\u79ef\u8d8a\u5927, \u671f\u671b\u4e4b\u5916\u7684\u5f02\u5e38\u5c31\u8d8a\u5bb9\u6613\u88ab\u89e6\u53d1. \u8fd9\u79cd\u60c5\u51b5\u4e0b, try/except \u5757\u5c06\u9690\u85cf\u771f\u6b63\u7684\u9519\u8bef \u4f7f\u7528finally\u5b50\u53e5\u6765\u6267\u884c\u90a3\u4e9b\u65e0\u8bbatry\u5757\u4e2d\u6709\u6ca1\u6709\u5f02\u5e38\u90fd\u5e94\u8be5\u88ab\u6267\u884c\u7684\u4ee3\u7801. \u8fd9\u5bf9\u4e8e\u6e05\u7406\u8d44\u6e90\u5e38\u5e38\u5f88\u6709\u7528, \u4f8b\u5982\u5173\u95ed\u6587\u4ef6 #### 4.2 \u5168\u5c40\u53d8\u91cf \u867d\u7136\u5168\u5c40\u53d8\u91cf\u6709\u65f6\u5f88\u65b9\u4fbf\u5f88\u597d\u7528,\u4f46\u662f\u5bfc\u5165\u65f6\u53ef\u80fd\u6539\u53d8\u6a21\u5757\u884c\u4e3a, \u56e0\u4e3a\u5bfc\u5165\u6a21\u5757\u65f6\u4f1a\u5bf9\u6a21\u5757\u7ea7\u53d8\u91cf\u8d4b\u503c\u3002\u4f8b\u5982C\u6a21\u5757\u4eceA\u6a21\u5757\u4e2d\u5bfc\u5165B\u53d8\u91cf\uff0c\u5728C\u6a21\u5757\u4e2d\u4fee\u6539B\u53d8\u91cf\u4f1a\u5f71\u54cdA\u4e2d\u7684B\u53d8\u91cf\uff0c\u4f5c\u7528\u7b49\u540c\u4e8e\u51fd\u6570\u4e2d\u4fee\u6539\u53ef\u53d8\u53c2\u6570\u3002 \u6ce8 \uff1a\u8fd9\u91cc\u7684\u53d8\u91cf\u6307\u7684\u662fpython\u4e2d\u7684\u53ef\u53d8\u7c7b\u578b\u3002 \u9f13\u52b1\u4f7f\u7528\u6a21\u5757\u7ea7\u7684\u5e38\u91cf\uff0c\u4e14\u5e38\u91cf\u547d\u540d\u5fc5\u987b\u5168\u90e8\u5927\u5199\uff0c\u4f7f\u7528 _ \u8fdb\u884c\u5206\u9694\u3002 \u82e5\u5fc5\u987b\u8981\u4f7f\u7528\u5168\u5c40\u53d8\u91cf,\u5e94\u5728\u6a21\u5757\u5185\u58f0\u660e\u5168\u5c40\u53d8\u91cf,\u5e76\u5728\u540d\u79f0\u524d _ \u4f7f\u4e4b\u6210\u4e3a\u6a21\u5757\u5185\u90e8\u53d8\u91cf.\u5916\u90e8\u8bbf\u95ee\u5fc5\u987b\u901a\u8fc7\u6a21\u5757\u7ea7\u7684\u516c\u5171\u51fd\u6570.","title":"\u5f02\u5e38"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_5","text":"\u524d\u63d0\uff1a \u7c7b\u53ef\u4ee5\u5b9a\u4e49\u5728\u65b9\u6cd5, \u51fd\u6570\u6216\u8005\u7c7b\u4e2d \u51fd\u6570\u53ef\u4ee5\u5b9a\u4e49\u5728\u65b9\u6cd5\u6216\u51fd\u6570\u4e2d \u4e0d\u53ef\u53d8\u7c7b\u578b\u7684\u53d8\u91cf\u5bf9\u5d4c\u5957\u51fd\u6570\u662f\u53ea\u8bfb\u7684\u3002\u5373\u5185\u5d4c\u51fd\u6570\u53ef\u4ee5\u8bfb\u5916\u90e8\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf,\u4f46\u662f\u65e0\u6cd5\u6539\u5199,\u9664\u975e\u4f7f\u7528 nonlocal \u5bf9\u8be5\u53d8\u91cf\u8fdb\u884c\u58f0\u660e\u3002 \u5185\u5d4c\u51fd\u6570\u548c\u7c7b\u4f1a\u4f7f\u5916\u90e8\u51fd\u6570\u7684**\u53ef\u8bfb\u6027\u53d8\u5dee** \u4f7f\u7528\u5185\u90e8\u7c7b\u6216\u8005\u5185\u5d4c\u51fd\u6570\u53ef\u4ee5\u5ffd\u89c6\u4e00\u4e9b\u8b66\u544a\u3002\u4f46\u662f\u5e94\u8be5\u907f\u514d\u4f7f\u7528\u5185\u5d4c\u51fd\u6570\u6216\u7c7b\uff0c\u9664\u975e\u662f\u60f3\u8986\u76d6\u67d0\u4e9b\u503c\u3002 \u82e5\u60f3\u5bf9\u6a21\u5757\u7684\u7528\u6237\u9690\u85cf\u67d0\u4e2a\u51fd\u6570\uff0c\u4e0d\u8981\u91c7\u7528\u5d4c\u5957\u5b83\u6765\u9690\u85cf\uff0c\u5e94\u8be5\u5728\u9700\u8981\u88ab\u9690\u85cf\u7684\u65b9\u6cd5\u7684\u6a21\u5757\u7ea7\u540d\u79f0\u52a0 _ \u524d\u7f00,\u8fd9\u6837\u5b83\u4f9d\u7136\u662f\u53ef\u4ee5\u88ab\u6d4b\u8bd5\u7684\u3002 # test 1 def func (): i = 1 l = [ 1 , 2 ] def anonymous_func (): # i is readable only # \u56e0\u6b64\u5bf9i\u7684\u64cd\u4f5c\u4e0d\u5f71\u54cd\u5916\u90e8\u7684i print ( i ) # i=1 l . append ( 1 ) # l\u662flist\uff0c\u5c5e\u4e8e\u53ef\u53d8\u7c7b\u578b print ( l ) # l= [1,2,1] print ( i ) # i=1 print ( l ) # l= [1,2,1] # test 2 def func (): i = 1 def anonymous_func (): nonlocal i i = 2 print ( i ) # i = 2 print ( i ) # i=2","title":"\u5d4c\u5957/\u5c40\u90e8/\u5185\u90e8\u7c7b\u6216\u51fd\u6570\uff08\u8fdb\u9636\u6280\u5de7\uff09"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_6","text":"\u5217\u8868\uff0c\u5b57\u5178\u548c\u96c6\u5408\u7684\u63a8\u5bfc\u4e0e\u751f\u6210\u5f0f\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u6d01\u9ad8\u6548\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u5bb9\u5668\u548c\u8fed\u4ee3\u5668, \u800c\u4e0d\u5fc5\u501f\u52a9 map() \uff0c filter() \uff0c\u6216\u8005 lambda \u3002\u5143\u7ec4\u662f\u6ca1\u6709\u63a8\u5bfc\u5f0f\u7684, () \u5185\u52a0\u7c7b\u4f3c\u63a8\u5bfc\u5f0f\u7684\u53e5\u5f0f\u8fd4\u56de\u7684\u662f\u4e2a\u751f\u6210\u5668\u3002 \u4f7f\u7528\u5efa\u8bae \u53ef\u4ee5\u5728\u7b80\u5355\u60c5\u51b5\u4e0b\u4f7f\u7528 \u6bcf\u4e2a\u90e8\u5206\u5e94\u8be5\u5355\u72ec\u7f6e\u4e8e\u4e00\u884c\uff1a\u6620\u5c04\u8868\u8fbe\u5f0f\uff0cfor\u8bed\u53e5\uff0c\u8fc7\u6ee4\u5668\u8868\u8fbe\u5f0f \u7981\u6b62\u591a\u91cdfor\u8bed\u53e5\u6216\u8fc7\u6ee4\u5668\u8868\u8fbe\u5f0f\uff0c\u590d\u6742\u60c5\u51b5\u4e0b\u8fd8\u662f\u4f7f\u7528\u5faa\u73af Good result = [ mapping_expr for value in iterable if filter_expr ] values = [ func ( value ) for value in values if filter ( value )] squares_generator = ( x ** 2 for x in range ( 10 )) adult_names = { user [ \"name\" ] for user in users if user [ 'age' ] >= 18 } Bad result = [( x , y ) for x in range ( 10 ) for y in range ( 5 ) if x * y > 10 ] return (( x , y , z ) for x in xrange ( 5 ) for y in xrange ( 5 ) if x != y for z in xrange ( 5 ) if y != z )","title":"\u63a8\u5bfc\u5f0f\u4e0e\u751f\u6210\u5f0f"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_7","text":"\u5bb9\u5668\u7c7b\u578b\uff0c\u50cf\u5b57\u5178\u548c\u5217\u8868\uff0c\u5b9a\u4e49\u4e86\u9ed8\u8ba4\u7684\u8fed\u4ee3\u5668\u548c\u5173\u7cfb\u6d4b\u8bd5\u64cd\u4f5c\u7b26(in\u548cnot in)\u3002\u5b83\u4eec\u76f4\u63a5\u8868\u8fbe\u4e86\u64cd\u4f5c\uff0c\u6ca1\u6709\u989d\u5916\u7684\u65b9\u6cd5\u8c03\u7528\u3002 \u4f7f\u7528\u9ed8\u8ba4\u64cd\u4f5c\u7b26\u7684\u51fd\u6570\u662f\u901a\u7528\u7684\u3002 \u5b83\u53ef\u4ee5\u7528\u4e8e\u652f\u6301\u8be5\u64cd\u4f5c\u7684\u4efb\u4f55\u7c7b\u578b\u3002 Good for key in adict : ... if obj in alist : ... for line in afile : ... # \u8fed\u4ee3\u5668\uff0c\u4e00\u6b21\u4e00\u884c\u5730\u8bfb\u53d6\u6587\u4ef6 for k , v in dict . iteritems (): ... Bad for key in adict . keys (): ... if not adict . has_key ( key ): ... for line in afile . readlines (): ... # readlines()\u4f1a\u8bfb\u53d6\u5168\u90e8\u6587\u4ef6\u52a0\u8f7d\u5230\u5185\u5b58","title":"\u8fed\u4ee3\u5668\u4e0e\u64cd\u4f5c\u7b26"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_8","text":"\u751f\u6210\u5668\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u8fed\u4ee3\u5668\u3002 \u6240\u8c13\u751f\u6210\u5668\uff08\u51fd\u6570\uff09\uff0c\u5c31\u662f\u6bcf\u5f53\u5b83\u6267\u884c\u4e00\u6b21\u751f\u6210 yield \u8bed\u53e5\uff0c\u5b83\u5c31\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u8fd9\u4e2a\u8fed\u4ee3\u5668\u751f\u6210\u4e00\u4e2a\u503c\u3002\u751f\u6210\u503c\u540e\uff0c\u751f\u6210\u5668\u51fd\u6570\u7684\u8fd0\u884c\u72b6\u6001\u5c06\u88ab\u6302\u8d77\uff0c\u76f4\u5230\u4e0b\u4e00\u6b21\u751f\u6210\u3002 # example def get_batch ( dataset ): for data in dataset : batch_data = process ( data ) yield batch_data for batch in get_batch ( dataset ): output = model ( batch ) ...","title":"\u751f\u6210\u5668"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#lambda","text":"lambda\u5728\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e2d\u5b9a\u4e49\u533f\u540d\u51fd\u6570. \u5e38\u7528\u4e8e\u4e3a map() \u548c filter() \u4e4b\u7c7b\u7684\u9ad8\u9636\u51fd\u6570\u5b9a\u4e49\u56de\u8c03\u51fd\u6570\u6216\u8005\u64cd\u4f5c\u7b26\u3002 \u9002\u7528\u4e8e\u5355\u884c\u51fd\u6570\uff0c\u4e00\u822c\u4e0d\u8d85\u8fc760-80\u4e2a\u5b57\u7b26 \u6ca1\u6709\u51fd\u6570\u540d\u610f\u5473\u7740\u5806\u6808\u8ddf\u8e2a\u66f4\u96be\u7406\u89e3\uff0c \u96be\u4ee5\u9605\u8bfb\u548c\u8c03\u8bd5 \u7531\u4e8elambda\u51fd\u6570\u901a\u5e38\u53ea\u5305\u542b\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u56e0\u6b64\u5176\u8868\u8fbe\u80fd\u529b\u6709\u9650 \u5bf9\u4e8e\u5e38\u89c1\u7684\u64cd\u4f5c\u7b26\uff0c\u4f8b\u5982\u4e58\u6cd5\u64cd\u4f5c\u7b26\uff0c\u4f7f\u7528 operator \u6a21\u5757\u4e2d\u7684\u51fd\u6570\u4ee5\u4ee3\u66fflambda\u51fd\u6570. \u4f8b\u5982, \u63a8\u8350\u4f7f\u7528 operator.mul , \u800c\u4e0d\u662f lambda x, y: x * y # example sorted_values = sorted ( values , key = lambda x : x [ 0 ])","title":"Lambda"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_9","text":"\u6761\u4ef6\u8868\u8fbe\u5f0f(\u53c8\u540d\u4e09\u5143\u8fd0\u7b97\u7b26)\u662f\u5bf9\u4e8eif\u8bed\u53e5\u7684\u4e00\u79cd\u66f4\u4e3a\u7b80\u77ed\u7684\u53e5\u6cd5\u89c4\u5219. \u4f8b\u5982: x = 1 if cond else 2 \u3002 \u5199\u6cd5\u4e0a\u63a8\u8350\u771f\u5b9e\u8868\u8fbe\u5f0f\uff0c if \u8868\u8fbe\u5f0f\uff0c else \u8868\u8fbe\u5f0f\u6bcf\u4e2a\u72ec\u5360\u4e00\u884c\u3002\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u63a8\u8350\u4f7f\u7528\u5b8c\u6574\u7684if\u8bed\u53e5\u3002 device = torch . device ( 'cuda' ) if torch . cuda . is_available () else torch . device ( 'cpu' ) # or device = torch . device ( 'cuda' if torch . cuda . is_available () else 'cpu' )","title":"\u6761\u4ef6\u8868\u8fbe\u5f0f"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_10","text":"\u4f60\u53ef\u4ee5\u5728\u51fd\u6570\u53c2\u6570\u5217\u8868\u7684\u6700\u540e\u6307\u5b9a\u53d8\u91cf\u7684\u503c, \u4f8b\u5982\uff0c def foo(a, b = 0): \u3002\u5982\u679c\u8c03\u7528foo\u65f6\u53ea\u5e26\u4e00\u4e2a\u53c2\u6570\uff0c\u5219b\u88ab\u8bbe\u4e3a0\u3002\u5982\u679c\u5e26\u4e24\u4e2a\u53c2\u6570\uff0c\u5219b\u7684\u503c\u7b49\u4e8e\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002 \u6ce8 \uff1a\u9ed8\u8ba4\u53c2\u6570\u53ea\u5728\u6a21\u5757\u52a0\u8f7d\u65f6\u6c42\u503c\u4e00\u6b21\u3002\u5982\u679c\u53c2\u6570\u662f\u5217\u8868\u6216\u5b57\u5178\u4e4b\u7c7b\u7684\u53ef\u53d8\u7c7b\u578b\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u95ee\u9898\u3002\u5982\u679c\u51fd\u6570\u4fee\u6539\u4e86\u5bf9\u8c61\uff08\u4f8b\u5982\u5411\u5217\u8868\u8ffd\u52a0\u9879\uff09\uff0c\u9ed8\u8ba4\u503c\u5c31\u88ab\u4fee\u6539\u4e86\u3002 Good\uff1a def foo ( a , b : List [ int ] = None ): if b is None : b = [] # Empty tuple OK since tuples are immutable def foo ( a , b : Sequence = ()): Bad\uff1a def foo ( a , b = []): def foo ( a , b = {}): def foo ( a , b = time . time ()):","title":"\u9ed8\u8ba4\u53c2\u6570\u503c"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#truefalse","text":"Python\u5728\u5e03\u5c14\u4e0a\u4e0b\u6587\u4e2d\u4f1a\u5c06\u67d0\u4e9b\u503c\u6c42\u503c\u4e3a False \u3002\u6309\u7b80\u5355\u7684\u76f4\u89c9\u6765\u8bb2\uff0c\u5c31\u662f\u6240\u6709\u7684\u201d\u7a7a\u201d\u503c\u90fd\u88ab\u8ba4\u4e3a\u662f False \u3002 0 \uff0c [] \uff0c {} \uff0c \"\" \u90fd\u88ab\u8ba4\u4e3a\u662f False \u3002 \u6ce8\u610f\uff1aFalse is not None \uff0c\u4f7f\u7528 if not x \u4e0e if x is not None \u662f\u4e0d\u540c\u7684\u5224\u65ad\u6761\u4ef6\uff0c\u6ce8\u610f\u4f7f\u7528\u60c5\u51b5\u3002 \u5c3d\u53ef\u80fd\u4f7f\u7528\u9690\u5f0f\u7684false, \u4f8b\u5982: \u4f7f\u7528 if foo: \u800c\u4e0d\u662f if foo != []: \u6c38\u8fdc\u4e0d\u8981\u7528==\u5c06\u4e00\u4e2a\u5e03\u5c14\u91cf\u4e0e False \u76f8\u6bd4\u8f83\u3002\u4f7f\u7528 if not x: \u4ee3\u66ff\u3002 \u5982\u679c\u4f60\u9700\u8981\u533a\u5206 False \u548c None , \u4f60\u5e94\u8be5\u7528\u50cf if not x and x is not None: \u8fd9\u6837\u7684\u8bed\u53e5\u3002 \u5bf9\u4e8e\u5e8f\u5217(\u5b57\u7b26\u4e32\uff0c\u5217\u8868\uff0c\u5143\u7ec4)\uff0c if not seq: \u6216\u8005 if seq: \u6bd4 if len(seq): \u6216 if not len(seq): \u8981\u66f4\u597d\u3002 \u5904\u7406\u6574\u6570\u65f6\uff0c\u4f7f\u7528\u9690\u5f0f False \u53ef\u80fd\u4f1a\u5f97\u4e0d\u507f\u5931(\u5373\u4e0d\u5c0f\u5fc3\u5c06 None \u5f53\u505a0\u6765\u5904\u7406)\u3002\u4f60\u53ef\u4ee5\u5c06\u4e00\u4e2a\u5df2\u77e5\u662f\u6574\u578b(\u4e14\u4e0d\u662f len() \u7684\u8fd4\u56de\u7ed3\u679c)\u7684\u503c\u4e0e0\u6bd4\u8f83.\u3001 \u6ce8\u610f \u20190\u2019 (\u5b57\u7b26\u4e32)\u4f1a\u88ab\u5f53\u505a True Good\uff1a if not users : print ( 'no users' ) if foo == 0 : self . handle_zero () if i % 10 == 0 : self . handle_multiple_of_ten () def f ( x = None ): if x is None : x = [] Bad\uff1a if len ( users ) == 0 : print 'no users' if foo is not None and not foo : #\u6761\u4ef6\u5224\u65ad\u987a\u5e8f\u53cd\u4e86 self . handle_zero () if not i % 10 : self . handle_multiple_of_ten () def f ( x = None ): x = x or [] #### \u8fc7\u65f6\u7684\u8bed\u8a00\u7279\u6027 \u5c3d\u53ef\u80fd\u4f7f\u7528\u5b57\u7b26\u4e32\u65b9\u6cd5\u53d6\u4ee3\u5b57\u7b26\u4e32\u6a21\u5757 \u4f7f\u7528\u51fd\u6570\u8c03\u7528\u8bed\u6cd5\u53d6\u4ee3 apply() \u4f7f\u7528\u5217\u8868\u63a8\u5bfc\u5f0f\uff0c for \u5faa\u73af\u53d6\u4ee3 filter() \uff0c map() \u4ee5\u53ca reduce() \u3002","title":"True\u4e0eFalse"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_11","text":"\u7528\u4e8e\u51fd\u6570\u53ca\u65b9\u6cd5\u7684\u88c5\u9970\u5668 (\u4e5f\u5c31\u662f@\u6807\u8bb0)\u3002 \u6700\u5e38\u89c1\u7684\u88c5\u9970\u5668\u662f @classmethod \u548c @staticmethod \uff0c\u7528\u4e8e\u5c06\u5e38\u89c4\u51fd\u6570\u8f6c\u6362\u6210\u7c7b\u65b9\u6cd5\u6216\u9759\u6001\u65b9\u6cd5\u3002 \u4e0d\u8fc7\uff0c\u88c5\u9970\u5668\u8bed\u6cd5\u4e5f\u5141\u8bb8\u7528\u6237\u81ea\u5b9a\u4e49\u88c5\u9970\u5668\u3002\u7279\u522b\u5730\uff0c\u5bf9\u4e8e\u67d0\u4e2a\u51fd\u6570 my_decorator \uff0c\u4e0b\u9762\u7684\u4e24\u6bb5\u4ee3\u7801\u662f\u7b49\u6548\u7684\uff1a class C ( object ): @my_decorator def method ( self ): # method body ... # equal to class C ( object ): def method ( self ): # method body ... method = my_decorator ( method ) \u88c5\u9970\u5668\u53ef\u4ee5\u5728\u51fd\u6570\u88ab\u6267\u884c\u4e4b\u524d\u5148\u505a\u4e00\u4e0b\u9884\u5904\u7406\uff0c\u4e5f\u5c31\u662f\u5728\u51fd\u6570\u5df2\u6709\u7684\u529f\u80fd\u4e0a\u6dfb\u52a0\u989d\u5916\u7684\u529f\u80fd\uff0c\u4f46\u4fdd\u6301\u5df2\u6709\u51fd\u6570\u4e0d\u53d8\uff08enforce invariant\uff09\u3002\u5bf9\u4e8e\u7ecf\u5e38\u8c03\u7528\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u88c5\u9970\u5668\uff0c\u51cf\u5c11\u4e00\u4e9b\u91cd\u590d\u4ee3\u7801\uff0c\u4f8b\u5982\uff1a login_required \uff0c check_value \u7b49\u7b49\u3002 \u5982\u679c\u597d\u5904\u5f88\u663e\u7136, \u5c31\u660e\u667a\u800c\u8c28\u614e\u7684\u4f7f\u7528\u88c5\u9970\u5668 \u4f7f\u7528\u88c5\u9970\u5668\u65f6\uff0c\u6587\u6863\u5e94\u8be5\u6e05\u6670\u7684\u8bf4\u660e\u8be5\u51fd\u6570\u662f\u4e00\u4e2a\u88c5\u9970\u5668 \u9664\u975e\u662f\u4e3a\u4e86\u5c06\u65b9\u6cd5\u548c\u73b0\u6709\u7684API\u96c6\u6210\uff0c\u5426\u5219\u4e0d\u8981\u4f7f\u7528 staticmethod \u3002\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5c06\u65b9\u6cd5\u5c01\u88c5\u6210\u6a21\u5757\u7ea7\u7684\u51fd\u6570\u53ef\u4ee5\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\u3002 \u8c28\u614e\u4f7f\u7528 classmethod \uff0c\u901a\u5e38\u53ea\u5728\u5b9a\u4e49\u5907\u9009\u6784\u9020\u51fd\u6570\uff0c\u6216\u8005\u5199\u7528\u4e8e\u4fee\u6539\u8bf8\u5982\u8fdb\u7a0b\u7ea7\u7f13\u5b58\u7b49\u5fc5\u8981\u7684\u5168\u5c40\u72b6\u6001\u7684\u7279\u5b9a\u7c7b\u65b9\u6cd5\u624d\u7528\u3002","title":"\u65b9\u6cd5\u88c5\u9970\u5668"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_12","text":"\u4f60\u53ef\u4ee5\u6839\u636e PEP-484 \u6765\u5bf9 python3 \u4ee3\u7801\u8fdb\u884c\u6ce8\u91ca,\u5e76\u4f7f\u7528\u8bf8\u5982 pytype \u4e4b\u7c7b\u7684\u7c7b\u578b\u68c0\u67e5\u5de5\u5177\u6765\u68c0\u67e5\u4ee3\u7801\u3002 \u7c7b\u578b\u6ce8\u91ca\u65e2\u53ef\u4ee5\u5199\u5728\u6e90\u7801\uff0c\u4e5f\u53ef\u4ee5\u5199\u5728 pyi \u4e2d\u3002\u63a8\u8350\u5c3d\u91cf\u5199\u5728\u6e90\u7801\u91cc,\u5bf9\u4e8e\u7b2c\u4e09\u65b9\u6269\u5c55\u5305,\u53ef\u4ee5\u5199\u5728pyi\u6587\u4ef6\u91cc\u3002 \u7528\u4e8e\u51fd\u6570\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u6ce8\u91ca\uff1a def func ( a : int ) -> List [ int ]: def func ( s : str , ls : Optional [ str , List [ str ]] = None ) -> str","title":"\u4ee3\u7801\u7c7b\u578b\u6ce8\u91ca"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_13","text":"","title":"\u98ce\u683c\u89c4\u8303"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_14","text":"\u4e00\u884c\u4ee3\u7801\u7684\u957f\u5ea6\u9ed8\u8ba4\u4e0d\u8d85\u8fc780\u4e2a\u5b57\u7b26\uff08\u542b\u7a7a\u683c\uff09\u3002\u7531\u4e8e\u73b0\u5728\u663e\u793a\u5668\u66f4\u5927\u7684\u5c3a\u5bf8\u548c\u66f4\u9ad8\u7684\u50cf\u7d20\uff0c\u8fd9\u4e2a\u89c4\u8303\u6709\u70b9\u8fc7\u65f6\uff0c\u56e0\u6b64\u4e00\u884c\u4e0d\u8d85\u8fc7120\u4e2a\u5b57\u7b26\u4e5f\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002 \u4ee5\u4e0b\u573a\u666f\u662f\u4f8b\u5916\uff1a \u957f\u7684 import \u8bed\u53e5\uff0c\u4f8b\u5982\u4ece\u67d0\u4e00\u6a21\u5757\u4e2d\u8c03\u7528\u591a\u4e2a\u51fd\u6570\u7b49 \u6ce8\u91ca\u4e2d\u7684URL\uff0c \u6587\u4ef6\u8def\u5f84\uff0c\u6216\u4e00\u4e9b\u7279\u5b9a\u7684\u957fToken \u4e0d\u4fbf\u4e8e\u6362\u884c\uff0c\u4e0d\u5305\u542b\u7a7a\u683c\u7684\u6a21\u5757\u7ea7\u5b57\u7b26\u4e32\u5e38\u91cf\uff0c\u6bd4\u5982URL\u6216\u8005\u8def\u5f84 Python\u4f1a\u5c06**\u5706\u62ec\u53f7\u3001\u4e2d\u62ec\u53f7\u548c\u82b1\u62ec\u53f7**\u4e2d\u7684\u884c**\u9690\u5f0f\u5730\u8fde\u63a5**\u8d77\u6765\uff1a foo_bar ( self , width , height , color = 'black' , design = None , x = 'foo' , emphasis = None , highlight = 0 ) x = ( 'This will build a very long long ' 'long long long long long long string' ) # http://www.example.com/us/developer/documentation/api/content/v2.0/csv_file_name_extension_full_specification.html","title":"\u884c\u957f\u5ea6"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_15","text":"\u5b81\u7f3a\u6bcb\u6ee5\u7684\u4f7f\u7528\u62ec\u53f7\u3002 \u9664\u975e\u662f\u7528\u4e8e\u5b9e\u73b0\u884c\u8fde\u63a5\u6216\u8005\u5143\u7ec4\uff0c \u5426\u5219\u4e0d\u8981\u5728\u8fd4\u56de\u8bed\u53e5\u6216\u6761\u4ef6\u8bed\u53e5\u4e2d\u4f7f\u7528\u62ec\u53f7\u3002 Good if x and y : return value return spam , beans return ( spam , beans ) x = ( 'This will build a very long long ' 'long long long long long long string' ) Bad if ( x ): return ( foo )","title":"\u62ec\u53f7"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_16","text":"\u75284\u4e2a\u7a7a\u683c\u6765\u7f29\u8fdb\u4ee3\u7801 \u9664\u975e\u5728IDE\u4e2d\uff0c\u5426\u5219\u4e0d\u8981\u4f7f\u7528Tab \u4e5f\u4e0d\u8981Tab\u548c\u7a7a\u683c\u6df7\u7528 \u591a\u884c\u65f6\uff0c\u6ce8\u610f\u6362\u884c\u5782\u76f4\u5bf9\u9f50 Good # Aligned with opening delimiter foo = long_function_name ( var_one , var_two , var_three , var_four ) # Aligned with opening delimiter in a dictionary foo = { long_dictionary_key : value1 + value2 , ... } # 4-space hanging indent in a dictionary foo = { long_dictionary_key : long_dictionary_value , ... } Bad # Stuff on first line forbidden foo = long_function_name ( var_one , var_two , var_three , var_four ) # No hanging indent in a dictionary foo = { long_dictionary_key : long_dictionary_value , ... }","title":"\u7f29\u8fdb"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_17","text":"\u4ec5\u5f53 ] , ) , } \u548c\u672b\u4f4d\u5143\u7d20\u4e0d\u5728\u540c\u4e00\u884c\u65f6\uff0c\u63a8\u8350\u4f7f\u7528\u5e8f\u5217\u5143\u7d20\u5c3e\u90e8\u9017\u53f7. \u5f53\u672b\u4f4d\u5143\u7d20\u5c3e\u90e8\u6709\u9017\u53f7\u65f6\uff0c\u5143\u7d20\u540e\u7684\u9017\u53f7\u53ef\u4ee5\u6307\u793a YAPF \u5c06\u5e8f\u5217\u683c\u5f0f\u5316\u4e3a\u6bcf\u884c\u4e00\u9879\u3002 Good golomb4 = [ 0 , 4 , 6 , ] Bad golomb4 = [ 0 , 4 , 6 ]","title":"\u5e8f\u5217\u5143\u7d20\u5c3e\u90e8\u9017\u53f7"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_18","text":"\u9876\u7ea7\u5b9a\u4e49\u4e4b\u95f4\u7a7a\u4e24\u884c \u7c7b\u65b9\u6cd5\u5b9a\u4e49\u4e4b\u95f4\u7a7a\u4e00\u884c \u51fd\u6570\u6216\u65b9\u6cd5\u4e2d\uff0c\u67d0\u4e9b\u5730\u65b9\u8981\u662f\u4f60\u89c9\u5f97\u5408\u9002\uff0c\u5c31\u7a7a\u4e00\u884c","title":"\u7a7a\u884c"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_19","text":"","title":"\u6ce8\u91ca"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#__doc__","text":"Python\u6709\u4e00\u79cd\u72ec\u4e00\u65e0\u4e8c\u7684\u7684\u6ce8\u91ca\u65b9\u5f0f\uff1a\u4f7f\u7528\u6587\u6863\u5b57\u7b26\u4e32\u3002\u6587\u6863\u5b57\u7b26\u4e32\u662f\u5305\uff0c\u6a21\u5757\uff0c\u7c7b\u6216\u51fd\u6570\u91cc\u7684\u7b2c\u4e00\u4e2a\u8bed\u53e5\u3002\u8fd9\u4e9b\u5b57\u7b26\u4e32\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u7684 __doc__ \u6210\u5458\u88ab\u81ea\u52a8\u63d0\u53d6\uff0c\u5e76\u4e14\u88abpydoc\u6240\u7528\u3002(\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u6a21\u5757\u4e0a\u8fd0\u884cpydoc\u8bd5\u4e00\u628a\uff0c\u770b\u770b\u5b83\u957f\u4ec0\u4e48\u6837)\u3002\u6211\u4eec\u5bf9\u6587\u6863\u5b57\u7b26\u4e32\u7684\u60ef\u4f8b\u662f\u4f7f\u7528\u4e09\u91cd\u53cc\u5f15\u53f7\u201d\u201d\u201d( PEP-257 )\u3002 \u4e00\u4e2a\u6587\u6863\u5b57\u7b26\u4e32\u5e94\u8be5\u8fd9\u6837\u7ec4\u7ec7\uff1a\u9996\u5148\u662f\u4e00\u884c\u4ee5\u53e5\u53f7\uff0c\u95ee\u53f7\u6216\u60ca\u53f9\u53f7\u7ed3\u5c3e\u7684\u6982\u8ff0(\u6216\u8005\u8be5\u6587\u6863\u5b57\u7b26\u4e32\u5355\u7eaf\u53ea\u6709\u4e00\u884c)\u3002\u63a5\u7740\u662f\u4e00\u4e2a\u7a7a\u884c\u3002\u63a5\u7740\u662f\u6587\u6863\u5b57\u7b26\u4e32\u5269\u4e0b\u7684\u90e8\u5206\uff0c\u5b83\u5e94\u8be5\u4e0e\u6587\u6863\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u884c\u7684\u7b2c\u4e00\u4e2a\u5f15\u53f7\u5bf9\u9f50\u3002","title":"\u6587\u6863\u5b57\u7b26\u4e32\uff08__doc__\uff09"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_20","text":"\u6bcf\u4e2a\u6587\u4ef6\u5e94\u8be5\u5305\u542b\u4e00\u4e2a\u8bb8\u53ef\u6837\u677f\uff0c\u6839\u636e\u9879\u76ee\u4f7f\u7528\u7684\u8bb8\u53ef(\u4f8b\u5982\uff0cApache 2.0\uff0cBSD\uff0cLGPL\uff0cGPL), \u9009\u62e9\u5408\u9002\u7684\u6837\u677f\u3002\u5176\u5f00\u5934\u5e94\u662f\u5bf9\u6a21\u5757\u5185\u5bb9\u548c\u7528\u6cd5\u7684\u63cf\u8ff0\u3002\u591a\u89c1\u4e8e\u5f00\u6e90\u4ed3\u5e93\u3002","title":"\u6a21\u5757"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_21","text":"\u4e0b\u6587\u6240\u6307\u7684\u51fd\u6570\uff0c\u5305\u62ec\u51fd\u6570\uff0c\u65b9\u6cd5\uff0c\u4ee5\u53ca\u751f\u6210\u5668\u3002 \u4e00\u4e2a\u51fd\u6570\u5fc5\u987b\u8981\u6709\u6587\u6863\u5b57\u7b26\u4e32\uff0c\u9664\u975e\u5b83\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6: 1. \u5916\u90e8\u4e0d\u53ef\u89c1 2. \u975e\u5e38\u77ed\u5c0f 3. \u7b80\u5355\u660e\u4e86 \u6587\u6863\u5b57\u7b26\u4e32\u5e94\u8be5\u5305\u542b\u51fd\u6570\u505a\u4ec0\u4e48\uff0c\u4ee5\u53ca\u8f93\u5165\u548c\u8f93\u51fa\u7684\u8be6\u7ec6\u63cf\u8ff0\u3002\u901a\u5e38\uff0c\u4e0d\u5e94\u8be5\u63cf\u8ff0\u201c\u600e\u4e48\u505a\u201d\u6216\u8005\u5b9e\u73b0\u7ec6\u8282\uff0c\u9664\u975e\u662f\u4e00\u4e9b\u590d\u6742\u7684\u7b97\u6cd5\u3002\u5bf9\u4e8e\u590d\u6742\u7684\u4ee3\u7801\uff0c\u5728\u4ee3\u7801\u65c1\u8fb9\u52a0\u6ce8\u91ca\u4f1a\u6bd4\u4f7f\u7528\u6587\u6863\u5b57\u7b26\u4e32\u66f4\u6709\u610f\u4e49\u3002 \u8986\u76d6\u57fa\u7c7b\u7684\u5b50\u7c7b\u65b9\u6cd5\u5e94\u6709\u4e00\u4e2a\u7c7b\u4f3c See base class \u7684\u7b80\u5355\u6ce8\u91ca\u6765\u6307\u5f15\u8bfb\u8005\u5230\u57fa\u7c7b\u65b9\u6cd5\u7684\u6587\u6863\u6ce8\u91ca\u3002\u82e5\u91cd\u8f7d\u7684\u5b50\u7c7b\u65b9\u6cd5\u548c\u57fa\u7c7b\u65b9\u6cd5\u6709\u5f88\u5927\u4e0d\u540c\uff0c\u90a3\u4e48\u6ce8\u91ca\u4e2d\u5e94\u8be5\u6307\u660e\u8fd9\u4e9b\u4fe1\u606f\u3002 \u5173\u4e8e\u51fd\u6570\u7684\u51e0\u4e2a\u65b9\u9762\u5e94\u8be5\u5728\u7279\u5b9a\u7684\u5c0f\u8282\u4e2d\u8fdb\u884c\u63cf\u8ff0\u8bb0\u5f55\uff0c\u8fd9\u51e0\u4e2a\u65b9\u9762\u5982\u4e0b\u6587\u6240\u8ff0\u3002\u6bcf\u8282\u5e94\u8be5\u4ee5\u4e00\u4e2a\u6807\u9898\u884c\u5f00\u59cb\u3002\u6807\u9898\u884c\u4ee5\u5192\u53f7\u7ed3\u5c3e\u3002\u9664\u6807\u9898\u884c\u5916\uff0c\u8282\u7684\u5176\u4ed6\u5185\u5bb9\u5e94\u88ab\u7f29\u8fdb2\u4e2a\u7a7a\u683c\u3002 Args: \u5217\u51fa\u6bcf\u4e2a\u53c2\u6570\u7684\u540d\u5b57, \u5e76\u5728\u540d\u5b57\u540e\u4f7f\u7528\u4e00\u4e2a\u5192\u53f7\u548c\u4e00\u4e2a\u7a7a\u683c, \u5206\u9694\u5bf9\u8be5\u53c2\u6570\u7684\u63cf\u8ff0.\u5982\u679c\u63cf\u8ff0\u592a\u957f\u8d85\u8fc7\u4e86\u5355\u884c\u6700\u5927\u957f\u5ea6\uff08 80 \u6216\u8005\u81ea\u5b9a\u4e49\uff09\u5b57\u7b26\u6570\uff0c\u4f7f\u75282\u6216\u80054\u4e2a\u7a7a\u683c\u7684\u60ac\u6302\u7f29\u8fdb(\u4e0e\u6587\u4ef6\u5176\u4ed6\u90e8\u5206\u4fdd\u6301\u4e00\u81f4)\u3002 \u63cf\u8ff0\u5e94\u8be5\u5305\u62ec\u6240\u9700\u7684\u7c7b\u578b\u548c\u542b\u4e49\u3002\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u63a5\u53d7 *args (\u53ef\u53d8\u957f\u5ea6\u53c2\u6570\u5217\u8868)\u6216\u8005 **kwargs (\u4efb\u610f\u5173\u952e\u5b57\u53c2\u6570), \u5e94\u8be5\u8be6\u7ec6\u5217\u51fa *args \u548c **kwargs \u3002 Returns: (\u6216\u8005 Yields: \u7528\u4e8e\u751f\u6210\u5668) \u63cf\u8ff0\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u548c\u8bed\u4e49. \u5982\u679c\u51fd\u6570\u8fd4\u56deNone, \u8fd9\u4e00\u90e8\u5206\u53ef\u4ee5\u7701\u7565. Raises: \u5217\u51fa\u4e0e\u63a5\u53e3\u6709\u5173\u7684\u6240\u6709\u5f02\u5e38. def fetch_smalltable_rows ( table_handle : smalltable . Table , keys : Sequence [ Union [ bytes , str ]], require_all_keys : bool = False , ) -> Mapping [ bytes , Tuple [ str ]]: \"\"\"Fetches rows from a Smalltable. Retrieves rows pertaining to the given keys from the Table instance represented by table_handle. String keys will be UTF-8 encoded. Args: table_handle: An open smalltable.Table instance. keys: A sequence of strings representing the key of each table row to fetch. String keys will be UTF-8 encoded. require_all_keys: Optional; If require_all_keys is True only rows with values set for all keys will be returned. Returns: A dict mapping keys to the corresponding table row data fetched. Each row is represented as a tuple of strings. For example: {b'Serak': ('Rigel VII', 'Preparer'), b'Zim': ('Irk', 'Invader'), b'Lrrr': ('Omicron Persei 8', 'Emperor')} Returned keys are always bytes. If a key from the keys argument is missing from the dictionary, then that row was not found in the table (and require_all_keys must have been False). Raises: IOError: An error occurred accessing the smalltable. \"\"\"","title":"\u51fd\u6570\u4e0e\u65b9\u6cd5"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_22","text":"\u7c7b\u5e94\u8be5\u5728\u5176\u5b9a\u4e49\u4e0b\u6709\u4e00\u4e2a\u7528\u4e8e\u63cf\u8ff0\u8be5\u7c7b\u7684\u6587\u6863\u5b57\u7b26\u4e32\u3002\u5982\u679c\u4f60\u7684\u7c7b\u6709\u516c\u5171\u5c5e\u6027(Attributes)\uff0c\u90a3\u4e48\u6587\u6863\u4e2d\u5e94\u8be5\u6709\u4e00\u4e2a\u5c5e\u6027(Attributes)\u6bb5\u3002\u5e76\u4e14\u5e94\u8be5\u9075\u5b88\u548c\u51fd\u6570\u53c2\u6570\u76f8\u540c\u7684\u683c\u5f0f\u3002 class SampleClass ( object ): \"\"\"Summary of class here. Longer class information.... Longer class information.... Attributes: likes_spam: A boolean indicating if we like SPAM or not. eggs: An integer count of the eggs we have laid. \"\"\" def __init__ ( self , likes_spam = False ): \"\"\"Inits SampleClass with blah.\"\"\" self . likes_spam = likes_spam self . eggs = 0 def public_method ( self ): \"\"\"Performs operation blah.\"\"\" ...","title":"\u7c7b\u6ce8\u91ca"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_23","text":"\u6700\u9700\u8981\u5199\u6ce8\u91ca\u7684\u662f\u4ee3\u7801\u4e2d\u90a3\u4e9b\u6280\u5de7\u6027\u7684\u90e8\u5206\u3002\u5982\u679c\u4f60\u5728\u4e0b\u6b21 \u4ee3\u7801\u5ba1\u67e5 \u7684\u65f6\u5019\u5fc5\u987b\u89e3\u91ca\u4e00\u4e0b\uff0c\u90a3\u4e48\u4f60\u5e94\u8be5\u73b0\u5728\u5c31\u7ed9\u5b83\u5199\u6ce8\u91ca\u3002\u5bf9\u4e8e\u590d\u6742\u7684\u64cd\u4f5c\uff0c\u5e94\u8be5\u5728\u5176\u64cd\u4f5c\u5f00\u59cb\u524d\u5199\u4e0a\u82e5\u5e72\u884c\u6ce8\u91ca\uff0c \u591a\u884c\u6ce8\u91ca\u53ef\u4ee5\u4f7f\u7528 \"\"\"...\"\"\" \u3002\u5bf9\u4e8e\u4e0d\u662f\u4e00\u76ee\u4e86\u7136\u7684\u4ee3\u7801\uff0c\u5e94\u5728\u5176\u884c\u5c3e\u6dfb\u52a0\u6ce8\u91ca\u3002 # We use a weighted dictionary search to find out where i is in # the array. We extrapolate position based on the largest num # in the array and the array size and then do binary search to # get the exact number. if i & ( i - 1 ) == 0 : # True if i is 0 or a power of 2 \u4e3a\u4e86\u63d0\u9ad8\u53ef\u8bfb\u6027\uff0c\u6ce8\u91ca\u5e94\u8be5\u81f3\u5c11\u79bb\u5f00\u4ee3\u78012\u4e2a\u7a7a\u683c\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u7edd\u4e0d\u8981\u63cf\u8ff0\u4ee3\u7801\u3002\u5047\u8bbe\u9605\u8bfb\u4ee3\u7801\u7684\u4eba\u6bd4\u4f60\u66f4\u61c2Python\uff0c\u4ed6\u53ea\u662f\u4e0d\u77e5\u9053\u4f60\u7684\u4ee3\u7801\u8981\u505a\u4ec0\u4e48\u3002 # BAD COMMENT # Now go through the b array and make sure whenever i occurs # the next element is i+1","title":"\u5757\u6ce8\u91ca\u4e0e\u884c\u6ce8\u91ca"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_24","text":"\u901a\u7528\u89c4\u5219 1. \u8bf7\u5148\u719f\u6089\u4e0b PEP-484 2. \u5bf9\u4e8e\u65b9\u6cd5\uff0c\u4ec5\u5728\u5fc5\u8981\u65f6\u624d\u5bf9 self \u6216 cls \u6ce8\u91ca 3. \u82e5\u5bf9\u7c7b\u578b\u6ca1\u6709\u4efb\u4f55\u663e\u793a\uff0c\u8bf7\u4f7f\u7528 Any 4. \u65e0\u9700\u6ce8\u91ca\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570 1. \u516c\u5171\u7684API\u9700\u8981\u6ce8\u91ca 2. \u5728\u4ee3\u7801\u7684\u5b89\u5168\u6027\uff0c\u6e05\u6670\u6027\u548c\u7075\u6d3b\u6027\u4e0a\u8fdb\u884c\u6743\u8861\u662f\u5426\u6ce8\u91ca 3. \u5bf9\u4e8e\u5bb9\u6613\u51fa\u73b0\u7c7b\u578b\u76f8\u5173\u7684\u9519\u8bef\u7684\u4ee3\u7801\u8fdb\u884c\u6ce8\u91ca 4. \u96be\u4ee5\u7406\u89e3\u7684\u4ee3\u7801\u8bf7\u8fdb\u884c\u6ce8\u91ca 5. \u82e5\u4ee3\u7801\u4e2d\u7684\u7c7b\u578b\u5df2\u7ecf\u7a33\u5b9a\uff0c\u53ef\u4ee5\u8fdb\u884c\u6ce8\u91ca. \u5bf9\u4e8e\u4e00\u4efd\u6210\u719f\u7684\u4ee3\u7801\uff0c\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u6ce8\u91ca\u4e86\u6240\u6709\u7684\u51fd\u6570\uff0c\u4e5f\u4e0d\u4f1a\u4e27\u5931\u592a\u591a\u7684\u7075\u6d3b\u6027\u3002 \u6362\u884c \u5c3d\u91cf\u9075\u5b88\u65e2\u5b9a\u7684\u7f29\u8fdb\u89c4\u5219\u3002\u6ce8\u91ca\u540e\uff0c\u5f88\u591a\u51fd\u6570\u7b7e\u540d\u5c06\u4f1a\u53d8\u6210\u6bcf\u884c\u4e00\u4e2a\u53c2\u6570\u3002 def my_method ( self , first_var : int , second_var : Foo , third_var : Optional [ Bar ]) -> int : ... \u5c3d\u91cf\u5728\u53d8\u91cf\u4e4b\u95f4\u6362\u884c\u800c\u4e0d\u662f\u5728\u53d8\u91cf\u548c\u7c7b\u578b\u6ce8\u91ca\u4e4b\u95f4.\u5f53\u7136,\u82e5\u6240\u6709\u4e1c\u897f\u90fd\u5728\u4e00\u884c\u4e0a,\u4e5f\u53ef\u4ee5\u63a5\u53d7 def my_method ( self , first_var : int ) -> int : ... \u82e5\u662f\u51fd\u6570\u540d,\u672b\u4f4d\u5f62\u53c2\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u6ce8\u91ca\u592a\u957f,\u4e5f\u53ef\u4ee5\u8fdb\u884c\u6362\u884c,\u5e76\u5728\u65b0\u884c\u8fdb\u884c4\u683c\u7f29\u8fdb. def my_method ( self , first_var : int ) -> Tuple [ MyLongType1 , MyLongType1 ]: ... \u82e5\u662f\u672b\u4f4d\u5f62\u53c2\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u6ce8\u91ca\u4e0d\u9002\u5408\u5728\u540c\u4e00\u884c\u4e0a,\u53ef\u4ee5\u6362\u884c,\u7f29\u8fdb\u4e3a4\u7a7a\u683c,\u5e76\u4fdd\u6301\u95ed\u5408\u7684\u62ec\u53f7 ) \u548c def \u5bf9\u9f50 def my_method ( self , other_arg : Optional [ MyLongType ] ) -> Dict [ OtherLongType , MyLongType ]: ... \u5c3d\u91cf\u4e0d\u8981\u5728\u4e00\u4e2a\u7c7b\u578b\u6ce8\u91ca\u4e2d\u8fdb\u884c\u6362\u884c.\u4f46\u662f\u6709\u65f6\u7c7b\u578b\u6ce8\u91ca\u8fc7\u957f\u9700\u8981\u6362\u884c\u65f6,\u8bf7\u5c3d\u91cf\u4fdd\u6301\u5b50\u7c7b\u578b\u4e2d\u4e0d\u88ab\u6362\u884c. def my_method ( self , first_var : Tuple [ List [ MyLongType1 ], List [ MyLongType2 ]], second_var : List [ Dict [ MyLongType3 , MyLongType4 ]]) -> None : ... \u53c2\u6570\u9ed8\u8ba4\u503c \u4f9d\u636e PEP-008 ,\u4ec5\u5bf9\u540c\u65f6\u5177\u6709\u7c7b\u578b\u6ce8\u91ca\u548c\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u7684 = \u5468\u56f4\u52a0\u7a7a\u683c\u3002 # good def func ( a : int = 0 ) -> int : ... # bad def func ( a : int = 0 ) -> int : ... \u53ef\u9009\u53c2\u6570\u7c7b\u578b \u5728python\u7684\u7c7b\u578b\u7cfb\u7edf\u4e2d, NoneType \u662f \u201c\u4e00\u7b49\u5bf9\u8c61\u201d\uff0c\u4e3a\u4e86\u8f93\u5165\u65b9\u4fbf\uff0c None \u662f NoneType \u7684\u522b\u540d\u3002\u4e00\u4e2a\u53d8\u91cf\u82e5\u662f None \uff0c\u5219\u8be5\u53d8\u91cf\u5fc5\u987b\u88ab\u58f0\u660e\u3002 \u56e0\u4e3apython\u4e2d\u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\uff0c\u82e5\u6ca1\u6709\u7279\u6b8a\u58f0\u660e\u5219\u9ed8\u8ba4\u4e3a Any \u7c7b\u578b\u3002\u82e5\u51fd\u6570\u53c2\u6570\u6709\u591a\u4e2a\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 typing \u6a21\u5757\u4e2d\u7684 Union \uff0c\u4f46\u82e5\u7c7b\u578b\u4ec5\u4ec5\u53ea\u662f\u5bf9\u5e94\u53e6\u4e00\u4e2a\u5176\u4ed6\u7c7b\u578b\uff0c\u5efa\u8bae\u4f7f\u7528 Optional \u3002 \u5c3d\u91cf\u663e\u5f0f\u800c\u975e\u9690\u5f0f\u7684\u4f7f\u7528 Optional \u3002\u5728PEP-484\u7684\u65e9\u671f\u7248\u672c\u4e2d\u5141\u8bb8\u4f7f\u7528 a: Text = None \u6765\u66ff\u4ee3 a: Optional[Text] = None \uff0c\u5f53\u7136,\u73b0\u5728\u4e0d\u63a8\u8350\u8fd9\u4e48\u505a\u4e86. # good def func ( a : Optional [ Text ], b : Optional [ Text ] = None ) -> Text : ... def multiple_nullable_union ( a : Union [ None , Text , int ]) -> Text ... # bad def nullable_union ( a : Union [ None , Text ]) -> Text : ... def implicit_optional ( a : Text = None ) -> Text : ... \u5ffd\u7565\u7c7b\u578b\u6ce8\u91ca \u53ef\u4ee5\u4f7f\u7528\u7279\u6b8a\u7684\u884c\u5c3e\u6ce8\u91ca # type: ignore \u6765\u7981\u7528\u8be5\u884c\u7684\u7c7b\u578b\u68c0\u67e5. pytype \u9488\u5bf9\u7279\u5b9a\u9519\u8bef\u6709\u4e00\u4e2a\u7981\u7528\u9009\u9879(\u7c7b\u4f3clint): # pytype: disable=attribute-error \u53d8\u91cf\u7c7b\u578b\u6ce8\u89e3 \u5f53\u4e00\u4e2a\u5185\u90e8\u53d8\u91cf\u96be\u4ee5\u63a8\u65ad\u5176\u7c7b\u578b\u65f6,\u53ef\u4ee5\u6709\u4ee5\u4e0b\u65b9\u6cd5\u6765\u6307\u793a\u5176\u7c7b\u578b: \u4f7f\u7528\u884c\u5c3e\u6ce8\u91ca # type: : a = SomeUndecoratedFunction () # type: Foo \u5e26\u7c7b\u578b\u6ce8\u89e3\u7684\u590d\u5236 \u5982\u51fd\u6570\u5f62\u53c2\u4e00\u6837,\u5728\u53d8\u91cf\u540d\u548c\u7b49\u53f7\u95f4\u52a0\u5165\u5192\u53f7\u548c\u7c7b\u578b: a : Foo = SomeUndecoratedFunction () \u6cdb\u578b \u5728\u6ce8\u91ca\u65f6,\u5c3d\u91cf\u5c06\u6cdb\u578b\u7c7b\u578b\u6ce8\u91ca\u4e3a\u7c7b\u578b\u53c2\u6570.\u5426\u5219, \u6cdb\u578b\u53c2\u6570\u5c06\u88ab\u89c6\u4e3a\u662f Any . # good def get_names ( employee_ids : List [ int ]) -> Dict [ int , Any ]: ... # bad # These are both interpreted as get_names(employee_ids: List[Any]) -> Dict[Any, Any] def get_names ( employee_ids : list ) -> Dict : ... \u82e5\u5b9e\u5728\u8981\u7528 Any \u4f5c\u4e3a\u6cdb\u578b\u7c7b\u578b,\u8bf7\u663e\u5f0f\u7684\u4f7f\u7528\u5b83.\u4f46\u5728\u591a\u6570\u60c5\u51b5\u4e0b, TypeVar \u901a\u5e38\u53ef\u80fd\u662f\u66f4\u597d\u7684\u9009\u62e9. def get_names ( employee_ids : List [ Any ]) -> Dict [ Any , Text ]: \"\"\"Returns a mapping from employee ID to employee name for given IDs.\"\"\" T = TypeVar ( 'T' ) def get_names ( employee_ids : List [ T ]) -> Dict [ T , Text ]: \"\"\"Returns a mapping from employee ID to employee name for given IDs.\"\"\"","title":"\u7c7b\u578b\u6ce8\u91ca"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#todo","text":"TODO \u4e00\u822c\u662f\u4e3a\u4e86\u6682\u65f6\u8fd8\u672a\u5b8c\u6210\u7684\u4ee3\u7801\u4f5c\u4e00\u4e2a\u7b80\u5355\u7684\u63d0\u9192\uff0c\u53ef\u4ee5\u662f\u81ea\u5df1\u4e5f\u53ef\u4ee5\u662f\u5176\u4ed6\u5f00\u53d1\u8005\u3002\u4e3a\u4e34\u65f6\u4ee3\u7801\u4f7f\u7528 TODO \u6ce8\u91ca\uff0c\u5b83\u662f\u4e00\u79cd\u77ed\u671f\u89e3\u51b3\u65b9\u6848\u3002\u4e0d\u7b97\u5b8c\u7f8e\uff0c\u4f46\u591f\u597d\u4e86\u3002 TODO \u6ce8\u91ca\u5e94\u8be5\u5728\u6240\u6709\u5f00\u5934\u5904\u5305\u542b TODO \u5b57\u7b26\u4e32\uff0c\u7d27\u8ddf\u7740\u662f\u7528\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u4f60\u7684\u540d\u5b57\uff0cemail\u5730\u5740\u6216\u5176\u5b83\u6807\u8bc6\u7b26\u3002\u7136\u540e\u662f\u4e00\u4e2a\u53ef\u9009\u7684\u5192\u53f7\u3002\u63a5\u7740\u5fc5\u987b\u6709\u4e00\u884c\u6ce8\u91ca\uff0c\u89e3\u91ca\u8981\u505a\u4ec0\u4e48\u3002\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u6709\u4e00\u4e2a\u7edf\u4e00\u7684 TODO \u683c\u5f0f\uff0c\u8fd9\u6837\u6dfb\u52a0\u6ce8\u91ca\u7684\u4eba\u5c31\u53ef\u4ee5\u641c\u7d22\u5230(\u5e76\u53ef\u4ee5\u6309\u9700\u63d0\u4f9b\u66f4\u591a\u7ec6\u8282)\u3002\u5199\u4e86 TODO \u6ce8\u91ca\u5e76\u4e0d\u4fdd\u8bc1\u5199\u7684\u4eba\u4f1a\u4eb2\u81ea\u89e3\u51b3\u95ee\u9898\u3002\u5f53\u4f60\u5199\u4e86\u4e00\u4e2a TODO \uff0c\u8bf7\u6ce8\u4e0a\u4f60\u7684\u540d\u5b57\u3002 # TODO(kl@gmail.com): Use a \"*\" here for string repetition. # TODO(Zeke) Change this to use relations. \u5982\u679c\u4f60\u7684 TODO \u662f\u201d\u5c06\u6765\u505a\u67d0\u4e8b\u201d\u7684\u5f62\u5f0f\uff0c\u90a3\u4e48\u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u4e00\u4e2a\u6307\u5b9a\u7684\u65e5\u671f(\u201c2009\u5e7411\u6708\u89e3\u51b3\u201d)\u6216\u8005\u4e00\u4e2a\u7279\u5b9a\u7684\u4e8b\u4ef6(\u201c\u7b49\u5230\u6240\u6709\u7684\u5ba2\u6237\u90fd\u53ef\u4ee5\u5904\u7406XML\u8bf7\u6c42\u5c31\u79fb\u9664\u8fd9\u4e9b\u4ee3\u7801\u201d)\u3002","title":"TODO\u6ce8\u91ca"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_25","text":"\u5305\u540d\uff1a package_name \u6a21\u5757\u540d\uff1a module_name \u7c7b\u540d\uff1a ClassName \u65b9\u6cd5\u540d\uff1a method_name \u7c7b\u540d\uff1a ExceptionName \u51fd\u6570\u540d: function_name \u5168\u5c40\u5e38\u91cf\u540d: GLOBAL_CONSTANT_NAME \u5168\u5c40\u53d8\u91cf\u540d: global_var_name \u5b9e\u4f8b\u540d: instance_var_name \u51fd\u6570\u53c2\u6570\u540d: function_parameter_name \u5c40\u90e8\u53d8\u91cf\u540d: local_var_name \u51fd\u6570\u540d \u3001 \u53d8\u91cf\u540d**\u548c**\u6587\u4ef6\u540d**\u5e94\u8be5\u662f\u63cf\u8ff0\u6027\u7684\uff0c\u5c3d\u91cf**\u907f\u514d\u7f29\u5199 \uff0c\u7279\u522b\u8981\u907f\u514d\u4f7f\u7528\u975e\u9879\u76ee\u4eba\u5458\u4e0d\u6e05\u695a\u96be\u4ee5\u7406\u89e3\u7684\u7f29\u5199\uff0c\u4e0d\u8981\u901a\u8fc7\u5220\u9664\u5355\u8bcd\u4e2d\u7684\u5b57\u6bcd\u6765\u8fdb\u884c\u7f29\u5199\u3002 \u547d\u540d\u7ea6\u5b9a \u4f7f\u7528\u5355\u4e0b\u5212\u7ebf _ \u5f00\u5934\u8868\u793a\u6a21\u5757\u53d8\u91cf\u6216\u8005\u51fd\u6570\u662f protected \u7684\uff0c\u5373\u53ea\u5e94\u8be5\u6a21\u5757\u5185\u6216\u8005\u51fd\u6570\u5185\u4f7f\u7528\uff08\u786c\u662f\u8bbf\u95ee\u7684\u8bdd\u4e5f\u662f\u53ef\u4ee5\u7684\uff09\uff0c\u4e0d\u5e94\u8be5\u88ab\u516c\u5f00\u8bbf\u95ee\uff0c\u800c\u4e14python\u89e3\u6790\u65f6\u4f7f\u7528 from module import * \u65f6\u8be5\u53d8\u91cf\u6216\u51fd\u6570\u4e0d\u4f1a\u88ab\u5305\u542b\u3002 \u7528\u53cc\u4e0b\u5212\u7ebf( __ )\u5f00\u5934\u7684\u5b9e\u4f8b\u53d8\u91cf\u6216\u65b9\u6cd5\u8868\u793a\u7c7b\u5185\u79c1\u6709\u3002\u5373\u53ea\u5e94\u8be5\u6a21\u5757\u5185\u6216\u8005\u51fd\u6570\u5185\u4f7f\u7528\uff0c\u4e0d\u5e94\u8be5\u88ab\u516c\u5f00\u8bbf\u95ee\u3002\u4f7f\u7528 module.var \u4e0e class.var \u4f1a\u62a5\u9519\uff08 \u8be5\u5c5e\u6027\u4e0d\u5b58\u5728 \uff09\uff0c\u4e0d\u80fd\u8bbf\u95ee\uff08\u53ef\u4ee5\u4f7f\u7528_class__var\u8bbf\u95ee\uff0c \u5177\u4f53\u53ef\u4ee5\u67e5\u770b\u76f8\u5173\u6587\u6863\uff09\u3002 \u5c06\u76f8\u5173\u7684\u7c7b\u548c\u9876\u7ea7\u51fd\u6570\u653e\u5728\u540c\u4e00\u4e2a\u6a21\u5757\u91cc\u3002\u4e0d\u50cfJava\uff0c\u6ca1\u5fc5\u8981\u9650\u5236\u4e00\u4e2a\u7c7b\u4e00\u4e2a\u6a21\u5757\u3002 \u5bf9\u7c7b\u540d\u4f7f\u7528\u5927\u5199\u5b57\u6bcd\u5f00\u5934\u7684\u5355\u8bcd(\u5982CapWords\uff0c\u5373Pascal\u98ce\u683c)\uff0c\u4f46\u662f\u6a21\u5757\u540d\u5e94\u8be5\u7528\u5c0f\u5199\u52a0\u4e0b\u5212\u7ebf\u7684\u65b9\u5f0f(\u5982lower_with_under.py)\u3002\u56e0\u4e3a\u5982\u679c\u6a21\u5757\u540d\u78b0\u5de7\u548c\u7c7b\u540d\u4e00\u81f4, \u8fd9\u4f1a\u8ba9\u4eba\u56f0\u6270\u3002","title":"\u547d\u540d"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#source_2","text":"\u65e5\u5fd7 \u6a21\u5757\u81ea2.3\u7248\u672c\u5f00\u59cb\u4fbf\u662fPython\u6807\u51c6\u5e93\u7684\u4e00\u90e8\u5206\u3002\u5b83\u88ab\u7b80\u6d01\u7684\u63cf\u8ff0\u5728 PEP 282 \u3002 \u4f17\u6240\u5468\u77e5\uff0c\u9664\u4e86 \u57fa\u7840\u65e5\u5fd7\u6307\u5357 \u90e8\u5206\uff0c\u8be5\u6587\u6863\u5e76\u4e0d\u5bb9\u6613\u9605\u8bfb\u3002 \u65e5\u5fd7\u7684\u4e24\u4e2a\u76ee\u7684\uff1a \u8bca\u65ad\u65e5\u5fd7 \u8bb0\u5f55\u4e0e\u5e94\u7528\u7a0b\u5e8f\u64cd\u4f5c\u76f8\u5173\u7684\u65e5\u5fd7\u3002\u4f8b\u5982\uff0c\u7528\u6237\u9047\u5230\u7684\u62a5\u9519\u4fe1\u606f\uff0c \u53ef\u901a\u8fc7\u641c\u7d22\u8bca\u65ad\u65e5\u5fd7\u83b7\u5f97\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002 \u5ba1\u8ba1\u65e5\u5fd7 \u4e3a\u5546\u4e1a\u5206\u6790\u800c\u8bb0\u5f55\u7684\u65e5\u5fd7\u3002\u4ece\u5ba1\u8ba1\u65e5\u5fd7\u4e2d\uff0c\u53ef\u63d0\u53d6\u7528\u6237\u7684\u4ea4\u6613\u4fe1\u606f\uff0c \u5e76\u7ed3\u5408\u5176\u4ed6\u7528\u6237\u8d44\u6599\u6784\u6210\u7528\u6237\u62a5\u544a\u6216\u8005\u7528\u6765\u4f18\u5316\u5546\u4e1a\u76ee\u6807\u3002","title":"\u65e5\u5fd7 source"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_26","text":"\u5f53\u9700\u8981\u5728\u547d\u4ee4\u884c\u5e94\u7528\u4e2d\u663e\u793a\u5e2e\u52a9\u6587\u6863\u65f6\uff0c \u6253\u5370 \u662f\u4e00\u4e2a\u76f8\u5bf9\u4e8e\u65e5\u5fd7\u66f4\u597d\u7684\u9009\u62e9\u3002 \u800c\u5728\u5176\u4ed6\u65f6\u5019\uff0c\u65e5\u5fd7\u603b\u80fd\u4f18\u4e8e \u6253\u5370 \uff0c\u7406\u7531\u5982\u4e0b\uff1a - \u65e5\u5fd7\u4e8b\u4ef6\u4ea7\u751f\u7684 \u65e5\u5fd7\u8bb0\u5f55 \uff0c\u5305\u542b\u6e05\u6670\u53ef\u7528\u7684\u8bca\u65ad\u4fe1\u606f\uff0c\u5982\u6587\u4ef6\u540d\u79f0\u3001\u8def\u5f84\u3001\u51fd\u6570\u540d\u548c\u884c\u53f7\u7b49\u3002 - \u5305\u542b\u65e5\u5fd7\u6a21\u5757\u7684\u5e94\u7528\uff0c\u9ed8\u8ba4\u53ef\u901a\u8fc7\u6839\u8bb0\u5f55\u5668\u5bf9\u5e94\u7528\u7684\u65e5\u5fd7\u6d41\u8fdb\u884c\u8bbf\u95ee\uff0c\u9664\u975e\u60a8\u5c06\u65e5\u5fd7\u8fc7\u6ee4\u4e86\u3002 - \u53ef\u901a\u8fc7 logging.Logger.setLevel() \u65b9\u6cd5\u6709\u9009\u62e9\u5730\u8bb0\u5f55\u65e5\u5fd7\uff0c \u6216\u53ef\u901a\u8fc7\u8bbe\u7f6e logging.Logger.disabled \u5c5e\u6027\u4e3a True \u6765\u7981\u7528\u3002","title":"\u65e5\u5fd7\u4e0e\u6253\u5370"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_27","text":"\u4f7f\u7528**INI**\u683c\u5f0f\u6587\u4ef6\uff1a \u4f18\u70b9 : \u4f7f\u7528 logging.config.listen() \u51fd\u6570\u76d1\u542csocket\uff0c\u53ef\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u66f4\u65b0\u914d\u7f6e \u7f3a\u70b9 : \u901a\u8fc7\u6e90\u7801\u63a7\u5236\u65e5\u5fd7\u914d\u7f6e\u8f83\u5c11\uff08 \u4f8b\u5982 \u5b50\u7c7b\u5316\u5b9a\u5236\u7684\u8fc7\u6ee4\u5668\u6216\u8bb0\u5f55\u5668\uff09\u3002 \u4f7f\u7528**\u5b57\u5178**\u6216**JSON**\u683c\u5f0f\u6587\u4ef6\uff1a \u4f18\u70b9 : \u9664\u4e86\u53ef\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u66f4\u65b0\uff0c\u5728Python 2.6\u4e4b\u540e\uff0c\u8fd8\u53ef\u901a\u8fc7 json \u6a21\u5757\u4ece\u5176\u5b83\u6587\u4ef6\u4e2d\u5bfc\u5165\u914d\u7f6e\u3002 \u7f3a\u70b9 : \u5f88\u96be\u901a\u8fc7\u6e90\u7801\u63a7\u5236\u65e5\u5fd7\u914d\u7f6e\u3002 \u4f7f\u7528**\u6e90\u7801**\uff1a \u4f18\u70b9 : \u5bf9\u914d\u7f6e\u7edd\u5bf9\u7684\u63a7\u5236\u3002 \u7f3a\u70b9 : \u5bf9\u914d\u7f6e\u7684\u66f4\u6539\u9700\u8981\u5bf9\u6e90\u7801\u8fdb\u884c\u4fee\u6539\u3002","title":"\u914d\u7f6e\u65e5\u5fd7"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#ini","text":"\u6211\u4eec\u5047\u8bbe\u6587\u4ef6\u540d\u4e3a logging_config.ini \u3002\u5173\u4e8e\u6587\u4ef6\u683c\u5f0f\u7684\u66f4\u591a\u7ec6\u8282\uff0c\u8bf7\u53c2\u89c1 \u65e5\u5fd7\u6307\u5357 \u4e2d\u7684 \u65e5\u5fd7\u914d\u7f6e \u90e8\u5206\u3002 [loggers] keys = root [handlers] keys = stream_handler [formatters] keys = formatter [logger_root] level = DEBUG handlers = stream_handler [handler_stream_handler] class = StreamHandler level = DEBUG formatter = formatter args = (sys.stderr,) [formatter_formatter] format = %(asctime)s %(name)-12s %(levelname)-8s %(message)s \u7136\u540e\u5728\u6e90\u7801\u4e2d\u8c03\u7528 logging.config.fileConfig() \u65b9\u6cd5\uff1a import logging from logging.config import fileConfig fileConfig ( 'logging_config.ini' ) logger = logging . getLogger () logger . debug ( 'often makes a very good meal of %s ' , 'visiting tourists' )","title":"\u901a\u8fc7INI\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u7684\u4f8b\u5b50"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_28","text":"Python 2.7\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b57\u5178\u5b9e\u73b0\u8be6\u7ec6\u914d\u7f6e\u3002 PEP 391 \u5305\u542b\u4e86\u4e00\u7cfb\u5217\u5b57\u5178\u914d\u7f6e\u7684\u5f3a\u5236\u548c \u975e\u5f3a\u5236\u7684\u5143\u7d20\u3002 import logging from logging.config import dictConfig logging_config = dict ( version = 1 , formatters = { 'f' : { 'format' : ' %(asctime)s %(name)-12s %(levelname)-8s %(message)s ' } }, handlers = { 'h' : { 'class' : 'logging.StreamHandler' , 'formatter' : 'f' , 'level' : logging . DEBUG } }, root = { 'handlers' : [ 'h' ], 'level' : logging . DEBUG , }, ) dictConfig ( logging_config ) logger = logging . getLogger () logger . debug ( 'often makes a very good meal of %s ' , 'visiting tourists' )","title":"\u901a\u8fc7\u5b57\u5178\u8fdb\u884c\u914d\u7f6e\u7684\u4f8b\u5b50"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_29","text":"import logging logger = logging . getLogger () handler = logging . StreamHandler () formatter = logging . Formatter ( ' %(asctime)s %(name)-12s %(levelname)-8s %(message)s ' ) handler . setFormatter ( formatter ) logger . addHandler ( handler ) logger . setLevel ( logging . DEBUG ) logger . debug ( 'often makes a very good meal of %s ' , 'visiting tourists' ) # logger.py def create_logger ( log_file , level = logging . DEBUG ): # logging.basicConfig\u51fd\u6570\u5bf9\u65e5\u5fd7\u7684\u8f93\u51fa\u683c\u5f0f\u53ca\u65b9\u5f0f\u505a\u76f8\u5173\u914d\u7f6e logging . basicConfig ( level = level , format = ' %(asctime)s - %(filename)s [line: %(lineno)d ] - %(levelname)s : %(message)s ' ) log = logging . getLogger () log . setLevel ( logging . INFO ) if not os . path . exists ( os . path . dirname ( log_file )): os . makedirs ( os . path . dirname ( log_file )) # \u521b\u5efa\u4e00\u4e2ahandler\uff0c\u7528\u4e8e\u5199\u5165\u65e5\u5fd7\u6587\u4ef6 fh = logging . FileHandler ( log_file , mode = 'w' ) fh . setLevel ( level ) # \u5b9a\u4e49handler\u7684\u8f93\u51fa\u683c\u5f0f formatter = logging . Formatter ( \" %(asctime)s - %(filename)s [line: %(lineno)d ] - %(levelname)s : %(message)s \" ) fh . setFormatter ( formatter ) # \u5c06log\u6dfb\u52a0\u5230handler\u91cc\u9762 log . addHandler ( fh ) return log log_file_dir = 'logs' if not os . path . exists ( log_file_dir ): os . makedirs ( log_file_dir ) rq = time . strftime ( '%Y-%m- %d -%H-%M' , time . localtime ( time . time ())) log_file = os . path . join ( log_file_dir , rq + '.log' ) logger = create_logger ( log_file ) # logger.py # \u7136\u540e\u5176\u4ed6\u6a21\u5757\u53ea\u9700\u8981 from logger import logger","title":"\u901a\u8fc7\u6e90\u7801\u76f4\u63a5\u914d\u7f6e\u7684\u4f8b\u5b50"},{"location":"guidelines/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%E6%89%8B%E5%86%8C/#_30","text":"Google Python\u98ce\u683c\u6307\u5357\u4e2d\u6587\u7248\uff08 https://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/contents/ \uff09 Python \u6700\u4f73\u5b9e\u8df5\u6307\u5357 https://pythonguidecn.readthedocs.io/zh/latest/ Python\u9879\u76ee\u5de5\u7a0b\u5316\u5f00\u53d1\u6307\u5357 https://pyloong.github.io/pythonic-project-guidelines/ Python \u5b98\u65b9\u98ce\u683c\u6307\u5357 PEP-8 https://peps.python.org/pep-0008/ Python \u5b98\u65b9\u6587\u6863\u5b57\u7b26\u4e32 PEP-257 https://peps.python.org/pep-0257/ Python \u5b98\u65b9\u65e5\u5fd7 PEP-282 https://peps.python.org/pep-0282/ Python \u7c7b\u578b\u6ce8\u91ca PEP-484 https://peps.python.org/pep-0484/ Python CookBook https://python3-cookbook.readthedocs.io/zh_CN/latest/","title":"\u53c2\u8003\u76ee\u5f55"},{"location":"standard/language_rules/","text":"\u8bed\u8a00\u89c4\u8303 \u00b6 \u53c2\u8003\uff1a Google Python\u8bed\u8a00\u89c4\u8303 \u5bfc\u5165 \u00b6 \u5bfc\u5165\u603b\u5e94\u8be5\u653e\u5728\u6587\u4ef6\u9876\u90e8\uff0c\u4f4d\u4e8e\u6a21\u5757\u6ce8\u91ca\u548c\u6587\u6863\u5b57\u7b26\u4e32\u4e4b\u540e\uff0c\u6a21\u5757\u5168\u5c40\u53d8\u91cf\u548c\u5e38\u91cf\u4e4b\u524d\u3002\u5bfc\u5165\u5e94\u8be5\u6309\u7167\u4ece\u6700\u901a\u7528\u5230\u6700\u4e0d\u901a\u7528\u7684\u987a\u5e8f\u5206\u7ec4\uff1a Future \u5bfc\u5165\u8bed\u53e5\uff1a from __future__ import print_function \u6807\u51c6\u5e93\u5bfc\u5165\uff1a import sys \u7b2c\u4e09\u65b9 \u6a21\u5757\u6216\u5305\u5bfc\u5165\uff1a import tensorflow as tf \u4ee3\u7801\u5e93\u5b50\u5305\u5bfc\u5165\uff1a from otherproject.ai import mind \u5df2\u5f03\u7528\uff1a \u4e0e\u6b64\u6587\u4ef6\u5c5e\u4e8e\u540c\u4e00\u9876\u7ea7\u5b50\u5305\u7684\u5e94\u7528\u7a0b\u5e8f\u7279\u5b9a\u5bfc\u5165\u3002\u4f8b\u5982\uff1a from myproject.backend.hgwells import time_machine \u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\u4e4b\u524d\u7684 Google Python \u98ce\u683c\u662f\u8fd9\u4e48\u505a\u7684\uff0c\u4f46\u73b0\u5728\u5df2\u7ecf\u4e0d\u63a8\u8350\u4e86\u3002 \u65b0\u7684\u4ee3\u7801\u4e0d\u8981\u8fd9\u4e48\u505a \u3002\u53ea\u9700\u5c06\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u5b50\u5305\u5bfc\u5165\u4e0e\u5176\u4ed6\u5b50\u5305\u5bfc\u5165\u4e00\u6837\u5bf9\u5f85\u5373\u53ef\u3002 \u5f3a\u70c8\u5efa\u8bae \uff1a \u4ec5\u5bf9\u5305\u548c\u6a21\u5757\u4f7f\u7528\u5bfc\u5165,\u800c\u4e0d\u5355\u72ec\u5bfc\u5165\u51fd\u6570\u6216\u8005\u7c7b\u3002 typing \u6a21\u5757\u4f8b\u5916 \u4f7f\u7528\u6a21\u5757\u7684**\u5168\u8def\u5f84\u540d**\u6765\u5bfc\u5165\u6bcf\u4e2a\u6a21\u5757 \u5bfc\u5165\u65f6\u4e0d\u8981\u4f7f\u7528\u76f8\u5bf9\u540d\u79f0 ( from .x import y )\u3002 \u5373\u4f7f\u6a21\u5757\u5728\u540c\u4e00\u4e2a\u5305\u4e2d, \u4e5f\u8981\u4f7f\u7528\u5b8c\u6574\u5305\u540d\u3002 \u4ec5\u5f53\u7f29\u5199 z \u662f\u901a\u7528\u7f29\u5199\u65f6\u624d\u53ef\u4f7f\u7528 import y as z .(\u6bd4\u5982 np \u4ee3\u8868 numpy ) \u5f02\u5e38 \u00b6 \u6b63\u5e38\u64cd\u4f5c\u4ee3\u7801\u7684\u63a7\u5236\u6d41\u4e0d\u4f1a\u548c\u9519\u8bef\u5904\u7406\u4ee3\u7801\u6df7\u5728\u4e00\u8d77\u3002\u5f53\u67d0\u79cd\u6761\u4ef6\u53d1\u751f\u65f6\uff0c\u5b83\u4e5f\u5141\u8bb8\u63a7\u5236\u6d41\u8df3\u8fc7\u591a\u4e2a\u6846\u67b6\u3002\u4f8b\u5982, \u4e00\u6b65\u8df3\u51faN\u4e2a\u5d4c\u5957\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u5fc5\u7ee7\u7eed\u6267\u884c\u9519\u8bef\u7684\u4ee3\u7801\u3002 \u4f7f\u7528\u4ee5\u4e0b try ... execpt ... \u8bed\u53e5\u6765\u6355\u83b7\u53ef\u80fd\u53d1\u751f\u7684\u5f02\u5e38\u3002 try : xxx except Exception as e : xxx else : # \u6ca1\u6709\u6355\u83b7\u5230\u5f02\u5e38\u624d\u6267\u884c xxx # \u6216\u8005finally try : xxx except Exception as e : xxx finally : # \u65e0\u8bba\u6709\u6ca1\u6709\u6355\u83b7\u5230\u5f02\u5e38\u90fd\u6267\u884c xxx \u4f7f\u7528\u5f02\u5e38\u5fc5\u987b\u9075\u5b88\u7279\u5b9a\u6761\u4ef6\uff1a \u4f18\u5148\u5408\u7406\u7684\u4f7f\u7528\u5185\u7f6e\u5f02\u5e38\u7c7b\uff0c \u4f8b\u5982 ValueError \uff0c TypeError \uff0c OSError \u7b49\u7b49\u3002 \u4e0d\u8981\u4f7f\u7528 assert \u8bed\u53e5\u6765\u9a8c\u8bc1\u516c\u5171API\u7684\u53c2\u6570\u503c. assert \u662f\u7528\u6765\u4fdd\u8bc1\u5185\u90e8\u6b63\u786e\u6027\u7684,\u800c\u4e0d\u662f\u7528\u6765\u5f3a\u5236\u7ea0\u6b63\u53c2\u6570\u4f7f\u7528\uff0c\u8fd9\u79cd\u60c5\u51b5\u5e94\u8be5\u4f7f\u7528 raise \u8bed\u53e5\u6765\u629b\u51fa\u5f02\u5e38\u3002 \u81ea\u5b9a\u4e49\u5f02\u5e38\u5e94\u7ee7\u627f\u5185\u5efa\u7684 Exception \u7c7b\uff0c\u4e14\u5f02\u5e38\u7c7b\u7684\u547d\u540d\u540e\u7f00\u4e3a**Error**\uff0c \u5982 ReadError \u7b49\u3002 \u6c38\u8fdc\u4e0d\u8981\u4f7f\u7528 except: \u8bed\u53e5\u6765\u6355\u83b7\u6240\u6709\u5f02\u5e38, \u4e5f\u4e0d\u8981\u6355\u83b7 Exception \u6216\u8005 StandardError \u3002 \u5426\u5219python\u4f1a\u6355\u83b7**\u6240\u6709\u5f02\u5e38**\uff08\u5305\u62ec**\u8bed\u6cd5\u9519\u8bef**\uff09\uff0c\u56e0\u6b64\u4f7f\u7528 except: \u6216\u8005 except Exception: \uff0c\u5f88\u5bb9\u6613\u9690\u85cf\u771f\u6b63\u7684**Bug**\uff0c\u5e76\u4e14\u4e0d\u5bb9\u6613\u5b9a\u4f4d\u67e5\u627e\u3002 \u5c3d\u91cf\u51cf\u5c11 try/except \u5757\u4e2d\u7684\u4ee3\u7801\u91cf\u3002 try \u5757\u7684\u4f53\u79ef\u8d8a\u5927, \u671f\u671b\u4e4b\u5916\u7684\u5f02\u5e38\u5c31\u8d8a\u5bb9\u6613\u88ab\u89e6\u53d1. \u8fd9\u79cd\u60c5\u51b5\u4e0b, try/except \u5757\u5c06\u9690\u85cf\u771f\u6b63\u7684\u9519\u8bef \u4f7f\u7528finally\u5b50\u53e5\u6765\u6267\u884c\u90a3\u4e9b\u65e0\u8bbatry\u5757\u4e2d\u6709\u6ca1\u6709\u5f02\u5e38\u90fd\u5e94\u8be5\u88ab\u6267\u884c\u7684\u4ee3\u7801. \u8fd9\u5bf9\u4e8e\u6e05\u7406\u8d44\u6e90\u5e38\u5e38\u5f88\u6709\u7528, \u4f8b\u5982\u5173\u95ed\u6587\u4ef6 \u4ee5\u4e0a\u77e5\u8bc6\u5bf9\u5f02\u5e38\u7684\u7b80\u5355\u8bf4\u660e\uff0c\u8be6\u7ec6\u8bf4\u660e\u4e0e\u9ad8\u9636\u4f7f\u7528\u6280\u5de7\u89c1\uff1a Python \u9879\u76ee\u5de5\u7a0b\u5316\u5f00\u53d1\u6307\u5357-\u5f02\u5e38 \u3002 \u5168\u5c40\u53d8\u91cf \u00b6 \u867d\u7136\u5168\u5c40\u53d8\u91cf\u6709\u65f6\u5f88\u65b9\u4fbf\u5f88\u597d\u7528\uff0c\u4f46\u662f\u5bfc\u5165\u65f6\u53ef\u80fd\u6539\u53d8\u6a21\u5757\u884c\u4e3a\uff0c\u56e0\u4e3a\u5bfc\u5165\u6a21\u5757\u65f6\u4f1a\u5bf9\u6a21\u5757\u7ea7\u53d8\u91cf\u8d4b\u503c\u3002\u4f8b\u5982C\u6a21\u5757\u4eceA\u6a21\u5757\u4e2d\u5bfc\u5165B\u53d8\u91cf\uff0c\u5728C\u6a21\u5757\u4e2d\u4fee\u6539B\u53d8\u91cf\u4f1a\u5f71\u54cdA\u4e2d\u7684B\u53d8\u91cf\uff0c\u4f5c\u7528\u7b49\u540c\u4e8e\u51fd\u6570\u4e2d\u4fee\u6539\u53ef\u53d8\u53c2\u6570\u3002\uff08 \u6ce8 \uff1a\u8fd9\u91cc\u7684\u53d8\u91cf\u6307\u7684\u662fpython\u4e2d\u7684\u53ef\u53d8\u7c7b\u578b\u3002\uff09 \u9f13\u52b1\u4f7f\u7528\u6a21\u5757\u7ea7\u7684\u5e38\u91cf\uff0c\u4e14\u5e38\u91cf\u547d\u540d\u5fc5\u987b\u5168\u90e8\u5927\u5199\uff0c\u4f7f\u7528 _ \u8fdb\u884c\u5206\u9694\u3002 \u82e5\u5fc5\u987b\u8981\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u5e94\u5728\u6a21\u5757\u5185\u58f0\u660e\u5168\u5c40\u53d8\u91cf,\u5e76\u5728\u540d\u79f0\u524d _ \u4f7f\u4e4b\u6210\u4e3a\u6a21\u5757\u5185\u90e8\u53d8\u91cf.\u5916\u90e8\u8bbf\u95ee\u5fc5\u987b\u901a\u8fc7\u6a21\u5757\u7ea7\u7684\u516c\u5171\u51fd\u6570\u3002 \u5d4c\u5957/\u5c40\u90e8/\u5185\u90e8\u7c7b\u6216\u51fd\u6570\uff08\u8fdb\u9636\u6280\u5de7\uff09 \u00b6 \u524d\u63d0\uff1a \u7c7b\u53ef\u4ee5\u5b9a\u4e49\u5728\u65b9\u6cd5, \u51fd\u6570\u6216\u8005\u7c7b\u4e2d \u51fd\u6570\u53ef\u4ee5\u5b9a\u4e49\u5728\u65b9\u6cd5\u6216\u51fd\u6570\u4e2d \u4e0d\u53ef\u53d8\u7c7b\u578b\u7684\u53d8\u91cf\u5bf9\u5d4c\u5957\u51fd\u6570\u662f\u53ea\u8bfb\u7684\u3002\u5373\u5185\u5d4c\u51fd\u6570\u53ef\u4ee5\u8bfb\u5916\u90e8\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf,\u4f46\u662f\u65e0\u6cd5\u6539\u5199,\u9664\u975e\u4f7f\u7528 nonlocal \u5bf9\u8be5\u53d8\u91cf\u8fdb\u884c\u58f0\u660e \u5185\u5d4c\u51fd\u6570\u548c\u7c7b\u4f1a\u4f7f\u5916\u90e8\u51fd\u6570\u7684**\u53ef\u8bfb\u6027\u53d8\u5dee** \u4f7f\u7528\u5185\u90e8\u7c7b\u6216\u8005\u5185\u5d4c\u51fd\u6570\u53ef\u4ee5\u5ffd\u89c6\u4e00\u4e9b\u8b66\u544a\u3002\u4f46\u662f\u5e94\u8be5\u907f\u514d\u4f7f\u7528\u5185\u5d4c\u51fd\u6570\u6216\u7c7b\uff0c\u9664\u975e\u662f\u60f3\u8986\u76d6\u67d0\u4e9b\u503c\u3002 \u82e5\u60f3\u5bf9\u6a21\u5757\u7684\u7528\u6237\u9690\u85cf\u67d0\u4e2a\u51fd\u6570\uff0c\u4e0d\u8981\u91c7\u7528\u5d4c\u5957\u5b83\u6765\u9690\u85cf\uff0c\u5e94\u8be5\u5728\u9700\u8981\u88ab\u9690\u85cf\u7684\u65b9\u6cd5\u7684\u6a21\u5757\u7ea7\u540d\u79f0\u52a0 _ \u524d\u7f00,\u8fd9\u6837\u5b83\u4f9d\u7136\u662f\u53ef\u4ee5\u88ab\u6d4b\u8bd5\u7684\u3002 # test 1 def func (): i = 1 l = [ 1 , 2 ] def anonymous_func (): # i is readable only # \u56e0\u6b64\u5bf9i\u7684\u64cd\u4f5c\u4e0d\u5f71\u54cd\u5916\u90e8\u7684i print ( i ) # i=1 l . append ( 1 ) # l\u662flist\uff0c\u5c5e\u4e8e\u53ef\u53d8\u7c7b\u578b print ( l ) # l= [1,2,1] print ( i ) # i=1 print ( l ) # l= [1,2,1] # test 2 def func (): i = 1 def anonymous_func (): nonlocal i i = 2 print ( i ) # i = 2 print ( i ) # i=2 \u63a8\u5bfc\u5f0f\u4e0e\u751f\u6210\u5f0f \u00b6 \u5217\u8868\uff0c\u5b57\u5178\u548c\u96c6\u5408\u7684\u63a8\u5bfc\u4e0e\u751f\u6210\u5f0f\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u6d01\u9ad8\u6548\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u5bb9\u5668\u548c\u8fed\u4ee3\u5668, \u800c\u4e0d\u5fc5\u501f\u52a9 map() \uff0c filter() \uff0c\u6216\u8005 lambda \u3002\u5143\u7ec4\u662f\u6ca1\u6709\u63a8\u5bfc\u5f0f\u7684, () \u5185\u52a0\u7c7b\u4f3c\u63a8\u5bfc\u5f0f\u7684\u53e5\u5f0f\u8fd4\u56de\u7684\u662f\u4e2a\u751f\u6210\u5668\u3002 \u53ef\u4ee5\u5728\u7b80\u5355\u60c5\u51b5\u4e0b\u4f7f\u7528 \u6bcf\u4e2a\u90e8\u5206\u5e94\u8be5\u5355\u72ec\u7f6e\u4e8e\u4e00\u884c\uff1a\u6620\u5c04\u8868\u8fbe\u5f0f\uff0cfor\u8bed\u53e5\uff0c\u8fc7\u6ee4\u5668\u8868\u8fbe\u5f0f \u7981\u6b62\u591a\u91cdfor\u8bed\u53e5\u6216\u8fc7\u6ee4\u5668\u8868\u8fbe\u5f0f\uff0c\u590d\u6742\u60c5\u51b5\u4e0b\u8fd8\u662f\u4f7f\u7528\u5faa\u73af Good result = [ mapping_expr for value in iterable if filter_expr ] values = [ func ( value ) for value in values if filter ( value )] squares_generator = ( x ** 2 for x in range ( 10 )) adult_names = { user [ \"name\" ] for user in users if user [ 'age' ] >= 18 } Bad result = [( x , y ) for x in range ( 10 ) for y in range ( 5 ) if x * y > 10 ] return (( x , y , z ) for x in xrange ( 5 ) for y in xrange ( 5 ) if x != y for z in xrange ( 5 ) if y != z ) \u8fed\u4ee3\u5668\u4e0e\u64cd\u4f5c\u7b26 \u00b6 \u5bb9\u5668\u7c7b\u578b\uff0c\u50cf\u5b57\u5178\u548c\u5217\u8868\uff0c\u5b9a\u4e49\u4e86\u9ed8\u8ba4\u7684\u8fed\u4ee3\u5668\u548c\u5173\u7cfb\u6d4b\u8bd5\u64cd\u4f5c\u7b26( in \u548c not in )\u3002\u5b83\u4eec\u76f4\u63a5\u8868\u8fbe\u4e86\u64cd\u4f5c\uff0c\u6ca1\u6709\u989d\u5916\u7684\u65b9\u6cd5\u8c03\u7528\u3002 \u4f7f\u7528\u9ed8\u8ba4\u64cd\u4f5c\u7b26\u7684\u51fd\u6570\u662f\u901a\u7528\u7684\u3002 \u5b83\u53ef\u4ee5\u7528\u4e8e\u652f\u6301\u8be5\u64cd\u4f5c\u7684\u4efb\u4f55\u7c7b\u578b\u3002 Good for key in adict : ... if obj in alist : ... for line in afile : ... # \u8fed\u4ee3\u5668\uff0c\u4e00\u6b21\u4e00\u884c\u5730\u8bfb\u53d6\u6587\u4ef6 for k , v in dict . iteritems (): ... Bad for key in adict . keys (): ... if not adict . has_key ( key ): ... for line in afile . readlines (): ... # readlines()\u4f1a\u8bfb\u53d6\u5168\u90e8\u6587\u4ef6\u52a0\u8f7d\u5230\u5185\u5b58 \u751f\u6210\u5668 \u00b6 \u751f\u6210\u5668\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u8fed\u4ee3\u5668\u3002 \u6240\u8c13\u751f\u6210\u5668\uff08\u51fd\u6570\uff09\uff0c\u5c31\u662f\u6bcf\u5f53\u5b83\u6267\u884c\u4e00\u6b21\u751f\u6210 yield \u8bed\u53e5\uff0c\u5b83\u5c31\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u8fd9\u4e2a\u8fed\u4ee3\u5668\u751f\u6210\u4e00\u4e2a\u503c\u3002\u751f\u6210\u503c\u540e\uff0c\u751f\u6210\u5668\u51fd\u6570\u7684\u8fd0\u884c\u72b6\u6001\u5c06\u88ab\u6302\u8d77\uff0c\u76f4\u5230\u4e0b\u4e00\u6b21\u751f\u6210\u3002 # example def get_batch ( dataset ): for data in dataset : batch_data = process ( data ) yield batch_data for batch in get_batch ( dataset ): output = model ( batch ) ... Lambda \u00b6 lambda\u5728\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e2d\u5b9a\u4e49\u533f\u540d\u51fd\u6570. \u5e38\u7528\u4e8e\u4e3a map() \u548c filter() \u4e4b\u7c7b\u7684\u9ad8\u9636\u51fd\u6570\u5b9a\u4e49\u56de\u8c03\u51fd\u6570\u6216\u8005\u64cd\u4f5c\u7b26\u3002 \u9002\u7528\u4e8e\u5355\u884c\u51fd\u6570\uff0c\u4e00\u822c\u4e0d\u8d85\u8fc760-80\u4e2a\u5b57\u7b26 \u6ca1\u6709\u51fd\u6570\u540d\u610f\u5473\u7740\u5806\u6808\u8ddf\u8e2a\u66f4\u96be\u7406\u89e3\uff0c \u96be\u4ee5\u9605\u8bfb\u548c\u8c03\u8bd5 \u7531\u4e8elambda\u51fd\u6570\u901a\u5e38\u53ea\u5305\u542b\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u56e0\u6b64\u5176\u8868\u8fbe\u80fd\u529b\u6709\u9650 \u5bf9\u4e8e\u5e38\u89c1\u7684\u64cd\u4f5c\u7b26\uff0c\u4f8b\u5982\u4e58\u6cd5\u64cd\u4f5c\u7b26\uff0c\u4f7f\u7528 operator \u6a21\u5757\u4e2d\u7684\u51fd\u6570\u4ee5\u4ee3\u66fflambda\u51fd\u6570. \u4f8b\u5982, \u63a8\u8350\u4f7f\u7528 operator.mul , \u800c\u4e0d\u662f lambda x, y: x * y # example sorted_values = sorted ( values , key = lambda x : x [ 0 ]) \u6761\u4ef6\u8868\u8fbe\u5f0f \u00b6 \u6761\u4ef6\u8868\u8fbe\u5f0f(\u53c8\u540d\u4e09\u5143\u8fd0\u7b97\u7b26)\u662f\u5bf9\u4e8eif\u8bed\u53e5\u7684\u4e00\u79cd\u66f4\u4e3a\u7b80\u77ed\u7684\u53e5\u6cd5\u89c4\u5219. \u4f8b\u5982: x = 1 if cond else 2 \u3002 \u5199\u6cd5\u4e0a\u63a8\u8350\u771f\u5b9e\u8868\u8fbe\u5f0f\uff0c if \u8868\u8fbe\u5f0f\uff0c else \u8868\u8fbe\u5f0f\u6bcf\u4e2a\u72ec\u5360\u4e00\u884c\u3002\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u63a8\u8350\u4f7f\u7528\u5b8c\u6574\u7684if\u8bed\u53e5\u3002 device = torch . device ( 'cuda' ) if torch . cuda . is_available () else torch . device ( 'cpu' ) # or device = torch . device ( 'cuda' if torch . cuda . is_available () else 'cpu' ) \u9ed8\u8ba4\u53c2\u6570\u503c \u00b6 \u4f60\u53ef\u4ee5\u5728\u51fd\u6570\u53c2\u6570\u5217\u8868\u7684\u6700\u540e\u6307\u5b9a\u53d8\u91cf\u7684\u503c, \u4f8b\u5982\uff0c def foo(a, b = 0): \u3002\u5982\u679c\u8c03\u7528foo\u65f6\u53ea\u5e26\u4e00\u4e2a\u53c2\u6570\uff0c\u5219b\u88ab\u8bbe\u4e3a0\u3002\u5982\u679c\u5e26\u4e24\u4e2a\u53c2\u6570\uff0c\u5219b\u7684\u503c\u7b49\u4e8e\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002 \u6ce8 \uff1a\u9ed8\u8ba4\u53c2\u6570\u53ea\u5728\u6a21\u5757\u52a0\u8f7d\u65f6\u6c42\u503c\u4e00\u6b21\u3002\u5982\u679c\u53c2\u6570\u662f\u5217\u8868\u6216\u5b57\u5178\u4e4b\u7c7b\u7684\u53ef\u53d8\u7c7b\u578b\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u95ee\u9898\u3002\u5982\u679c\u51fd\u6570\u4fee\u6539\u4e86\u5bf9\u8c61\uff08\u4f8b\u5982\u5411\u5217\u8868\u8ffd\u52a0\u9879\uff09\uff0c\u9ed8\u8ba4\u503c\u5c31\u88ab\u4fee\u6539\u4e86\u3002 Good\uff1a def foo ( a , b : List [ int ] = None ): if b is None : b = [] # Empty tuple OK since tuples are immutable def foo ( a , b : Sequence = ()): Bad\uff1a def foo ( a , b = []): def foo ( a , b = {}): def foo ( a , b = time . time ()): True\u4e0eFalse \u00b6 Python\u5728\u5e03\u5c14\u4e0a\u4e0b\u6587\u4e2d\u4f1a\u5c06\u67d0\u4e9b\u503c\u6c42\u503c\u4e3a False \u3002\u6309\u7b80\u5355\u7684\u76f4\u89c9\u6765\u8bb2\uff0c\u5c31\u662f\u6240\u6709\u7684\u201d\u7a7a\u201d\u503c\u90fd\u88ab\u8ba4\u4e3a\u662f False \u3002 0 \uff0c [] \uff0c {} \uff0c \"\" \u90fd\u88ab\u8ba4\u4e3a\u662f False \u3002 \u6ce8\u610f\uff1aFalse is not None \uff0c\u4f7f\u7528 if not x \u4e0e if x is not None \u662f\u4e0d\u540c\u7684\u5224\u65ad\u6761\u4ef6\uff0c\u6ce8\u610f\u4f7f\u7528\u60c5\u51b5\u3002 \u5c3d\u53ef\u80fd\u4f7f\u7528\u9690\u5f0f\u7684false, \u4f8b\u5982: \u4f7f\u7528 if foo: \u800c\u4e0d\u662f if foo != []: \u6c38\u8fdc\u4e0d\u8981\u7528==\u5c06\u4e00\u4e2a\u5e03\u5c14\u91cf\u4e0e False \u76f8\u6bd4\u8f83\u3002\u4f7f\u7528 if not x: \u4ee3\u66ff\u3002 \u5982\u679c\u4f60\u9700\u8981\u533a\u5206 False \u548c None , \u4f60\u5e94\u8be5\u7528\u50cf if not x and x is not None: \u8fd9\u6837\u7684\u8bed\u53e5\u3002 \u5bf9\u4e8e\u5e8f\u5217(\u5b57\u7b26\u4e32\uff0c\u5217\u8868\uff0c\u5143\u7ec4)\uff0c if not seq: \u6216\u8005 if seq: \u6bd4 if len(seq): \u6216 if not len(seq): \u8981\u66f4\u597d\u3002 \u5904\u7406\u6574\u6570\u65f6\uff0c\u4f7f\u7528\u9690\u5f0f False \u53ef\u80fd\u4f1a\u5f97\u4e0d\u507f\u5931(\u5373\u4e0d\u5c0f\u5fc3\u5c06 None \u5f53\u505a0\u6765\u5904\u7406)\u3002\u4f60\u53ef\u4ee5\u5c06\u4e00\u4e2a\u5df2\u77e5\u662f\u6574\u578b(\u4e14\u4e0d\u662f len() \u7684\u8fd4\u56de\u7ed3\u679c)\u7684\u503c\u4e0e0\u6bd4\u8f83.\u3001 \u6ce8\u610f \u20190\u2019 (\u5b57\u7b26\u4e32)\u4f1a\u88ab\u5f53\u505a True Good\uff1a if not users : print ( 'no users' ) if foo == 0 : self . handle_zero () if i % 10 == 0 : self . handle_multiple_of_ten () def f ( x = None ): if x is None : x = [] Bad\uff1a if len ( users ) == 0 : print 'no users' if foo is not None and not foo : #\u6761\u4ef6\u5224\u65ad\u987a\u5e8f\u53cd\u4e86 self . handle_zero () if not i % 10 : self . handle_multiple_of_ten () def f ( x = None ): x = x or [] #### \u8fc7\u65f6\u7684\u8bed\u8a00\u7279\u6027 \u5c3d\u53ef\u80fd\u4f7f\u7528\u5b57\u7b26\u4e32\u65b9\u6cd5\u53d6\u4ee3\u5b57\u7b26\u4e32\u6a21\u5757 \u4f7f\u7528\u51fd\u6570\u8c03\u7528\u8bed\u6cd5\u53d6\u4ee3 apply() \u4f7f\u7528\u5217\u8868\u63a8\u5bfc\u5f0f\uff0c for \u5faa\u73af\u53d6\u4ee3 filter() \uff0c map() \u4ee5\u53ca reduce() \u3002 \u65b9\u6cd5\u88c5\u9970\u5668 \u00b6 \u7528\u4e8e\u51fd\u6570\u53ca\u65b9\u6cd5\u7684\u88c5\u9970\u5668 (\u4e5f\u5c31\u662f@\u6807\u8bb0)\u3002 \u6700\u5e38\u89c1\u7684\u88c5\u9970\u5668\u662f @classmethod \u548c @staticmethod \uff0c\u7528\u4e8e\u5c06\u5e38\u89c4\u51fd\u6570\u8f6c\u6362\u6210\u7c7b\u65b9\u6cd5\u6216\u9759\u6001\u65b9\u6cd5\u3002 \u4e0d\u8fc7\uff0c\u88c5\u9970\u5668\u8bed\u6cd5\u4e5f\u5141\u8bb8\u7528\u6237\u81ea\u5b9a\u4e49\u88c5\u9970\u5668\u3002\u7279\u522b\u5730\uff0c\u5bf9\u4e8e\u67d0\u4e2a\u51fd\u6570 my_decorator \uff0c\u4e0b\u9762\u7684\u4e24\u6bb5\u4ee3\u7801\u662f\u7b49\u6548\u7684\uff1a class C ( object ): @my_decorator def method ( self ): # method body ... # equal to class C ( object ): def method ( self ): # method body ... method = my_decorator ( method ) \u88c5\u9970\u5668\u53ef\u4ee5\u5728\u51fd\u6570\u88ab\u6267\u884c\u4e4b\u524d\u5148\u505a\u4e00\u4e0b\u9884\u5904\u7406\uff0c\u4e5f\u5c31\u662f\u5728\u51fd\u6570\u5df2\u6709\u7684\u529f\u80fd\u4e0a\u6dfb\u52a0\u989d\u5916\u7684\u529f\u80fd\uff0c\u4f46\u4fdd\u6301\u5df2\u6709\u51fd\u6570\u4e0d\u53d8\uff08enforce invariant\uff09\u3002\u5bf9\u4e8e\u7ecf\u5e38\u8c03\u7528\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u88c5\u9970\u5668\uff0c\u51cf\u5c11\u4e00\u4e9b\u91cd\u590d\u4ee3\u7801\uff0c\u4f8b\u5982\uff1a login_required \uff0c check_value \u7b49\u7b49\u3002 \u5982\u679c\u597d\u5904\u5f88\u663e\u7136, \u5c31\u660e\u667a\u800c\u8c28\u614e\u7684\u4f7f\u7528\u88c5\u9970\u5668 \u4f7f\u7528\u88c5\u9970\u5668\u65f6\uff0c\u6587\u6863\u5e94\u8be5\u6e05\u6670\u7684\u8bf4\u660e\u8be5\u51fd\u6570\u662f\u4e00\u4e2a\u88c5\u9970\u5668 \u9664\u975e\u662f\u4e3a\u4e86\u5c06\u65b9\u6cd5\u548c\u73b0\u6709\u7684API\u96c6\u6210\uff0c\u5426\u5219\u4e0d\u8981\u4f7f\u7528 staticmethod \u3002\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5c06\u65b9\u6cd5\u5c01\u88c5\u6210\u6a21\u5757\u7ea7\u7684\u51fd\u6570\u53ef\u4ee5\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\u3002 \u8c28\u614e\u4f7f\u7528 classmethod \uff0c\u901a\u5e38\u53ea\u5728\u5b9a\u4e49\u5907\u9009\u6784\u9020\u51fd\u6570\uff0c\u6216\u8005\u5199\u7528\u4e8e\u4fee\u6539\u8bf8\u5982\u8fdb\u7a0b\u7ea7\u7f13\u5b58\u7b49\u5fc5\u8981\u7684\u5168\u5c40\u72b6\u6001\u7684\u7279\u5b9a\u7c7b\u65b9\u6cd5\u624d\u7528\u3002 \u4ee3\u7801\u7c7b\u578b\u6ce8\u91ca \u00b6 \u4f60\u53ef\u4ee5\u6839\u636e PEP-484 \u6765\u5bf9 python3 \u4ee3\u7801\u8fdb\u884c\u6ce8\u91ca,\u5e76\u4f7f\u7528\u8bf8\u5982 pytype \u4e4b\u7c7b\u7684\u7c7b\u578b\u68c0\u67e5\u5de5\u5177\u6765\u68c0\u67e5\u4ee3\u7801\u3002 \u7c7b\u578b\u6ce8\u91ca\u65e2\u53ef\u4ee5\u5199\u5728\u6e90\u7801\uff0c\u4e5f\u53ef\u4ee5\u5199\u5728 pyi \u4e2d\u3002\u63a8\u8350\u5c3d\u91cf\u5199\u5728\u6e90\u7801\u91cc\uff0c\u5bf9\u4e8e\u7b2c\u4e09\u65b9\u6269\u5c55\u5305\uff0c\u53ef\u4ee5\u5199\u5728pyi\u6587\u4ef6\u91cc\u3002\u8be6\u60c5\u89c1\uff08 \u98ce\u683c\u6ce8\u91ca - \u7c7b\u578b\u6ce8\u91ca \uff09 \u7528\u4e8e\u51fd\u6570\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u6ce8\u91ca\uff1a def func ( a : int ) -> List [ int ]: def func ( s : str , ls : Optional [ str , List [ str ]] = None ) -> str","title":"\u8bed\u8a00\u89c4\u8303"},{"location":"standard/language_rules/#_1","text":"\u53c2\u8003\uff1a Google Python\u8bed\u8a00\u89c4\u8303","title":"\u8bed\u8a00\u89c4\u8303"},{"location":"standard/language_rules/#_2","text":"\u5bfc\u5165\u603b\u5e94\u8be5\u653e\u5728\u6587\u4ef6\u9876\u90e8\uff0c\u4f4d\u4e8e\u6a21\u5757\u6ce8\u91ca\u548c\u6587\u6863\u5b57\u7b26\u4e32\u4e4b\u540e\uff0c\u6a21\u5757\u5168\u5c40\u53d8\u91cf\u548c\u5e38\u91cf\u4e4b\u524d\u3002\u5bfc\u5165\u5e94\u8be5\u6309\u7167\u4ece\u6700\u901a\u7528\u5230\u6700\u4e0d\u901a\u7528\u7684\u987a\u5e8f\u5206\u7ec4\uff1a Future \u5bfc\u5165\u8bed\u53e5\uff1a from __future__ import print_function \u6807\u51c6\u5e93\u5bfc\u5165\uff1a import sys \u7b2c\u4e09\u65b9 \u6a21\u5757\u6216\u5305\u5bfc\u5165\uff1a import tensorflow as tf \u4ee3\u7801\u5e93\u5b50\u5305\u5bfc\u5165\uff1a from otherproject.ai import mind \u5df2\u5f03\u7528\uff1a \u4e0e\u6b64\u6587\u4ef6\u5c5e\u4e8e\u540c\u4e00\u9876\u7ea7\u5b50\u5305\u7684\u5e94\u7528\u7a0b\u5e8f\u7279\u5b9a\u5bfc\u5165\u3002\u4f8b\u5982\uff1a from myproject.backend.hgwells import time_machine \u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\u4e4b\u524d\u7684 Google Python \u98ce\u683c\u662f\u8fd9\u4e48\u505a\u7684\uff0c\u4f46\u73b0\u5728\u5df2\u7ecf\u4e0d\u63a8\u8350\u4e86\u3002 \u65b0\u7684\u4ee3\u7801\u4e0d\u8981\u8fd9\u4e48\u505a \u3002\u53ea\u9700\u5c06\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u5b50\u5305\u5bfc\u5165\u4e0e\u5176\u4ed6\u5b50\u5305\u5bfc\u5165\u4e00\u6837\u5bf9\u5f85\u5373\u53ef\u3002 \u5f3a\u70c8\u5efa\u8bae \uff1a \u4ec5\u5bf9\u5305\u548c\u6a21\u5757\u4f7f\u7528\u5bfc\u5165,\u800c\u4e0d\u5355\u72ec\u5bfc\u5165\u51fd\u6570\u6216\u8005\u7c7b\u3002 typing \u6a21\u5757\u4f8b\u5916 \u4f7f\u7528\u6a21\u5757\u7684**\u5168\u8def\u5f84\u540d**\u6765\u5bfc\u5165\u6bcf\u4e2a\u6a21\u5757 \u5bfc\u5165\u65f6\u4e0d\u8981\u4f7f\u7528\u76f8\u5bf9\u540d\u79f0 ( from .x import y )\u3002 \u5373\u4f7f\u6a21\u5757\u5728\u540c\u4e00\u4e2a\u5305\u4e2d, \u4e5f\u8981\u4f7f\u7528\u5b8c\u6574\u5305\u540d\u3002 \u4ec5\u5f53\u7f29\u5199 z \u662f\u901a\u7528\u7f29\u5199\u65f6\u624d\u53ef\u4f7f\u7528 import y as z .(\u6bd4\u5982 np \u4ee3\u8868 numpy )","title":"\u5bfc\u5165"},{"location":"standard/language_rules/#_3","text":"\u6b63\u5e38\u64cd\u4f5c\u4ee3\u7801\u7684\u63a7\u5236\u6d41\u4e0d\u4f1a\u548c\u9519\u8bef\u5904\u7406\u4ee3\u7801\u6df7\u5728\u4e00\u8d77\u3002\u5f53\u67d0\u79cd\u6761\u4ef6\u53d1\u751f\u65f6\uff0c\u5b83\u4e5f\u5141\u8bb8\u63a7\u5236\u6d41\u8df3\u8fc7\u591a\u4e2a\u6846\u67b6\u3002\u4f8b\u5982, \u4e00\u6b65\u8df3\u51faN\u4e2a\u5d4c\u5957\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u5fc5\u7ee7\u7eed\u6267\u884c\u9519\u8bef\u7684\u4ee3\u7801\u3002 \u4f7f\u7528\u4ee5\u4e0b try ... execpt ... \u8bed\u53e5\u6765\u6355\u83b7\u53ef\u80fd\u53d1\u751f\u7684\u5f02\u5e38\u3002 try : xxx except Exception as e : xxx else : # \u6ca1\u6709\u6355\u83b7\u5230\u5f02\u5e38\u624d\u6267\u884c xxx # \u6216\u8005finally try : xxx except Exception as e : xxx finally : # \u65e0\u8bba\u6709\u6ca1\u6709\u6355\u83b7\u5230\u5f02\u5e38\u90fd\u6267\u884c xxx \u4f7f\u7528\u5f02\u5e38\u5fc5\u987b\u9075\u5b88\u7279\u5b9a\u6761\u4ef6\uff1a \u4f18\u5148\u5408\u7406\u7684\u4f7f\u7528\u5185\u7f6e\u5f02\u5e38\u7c7b\uff0c \u4f8b\u5982 ValueError \uff0c TypeError \uff0c OSError \u7b49\u7b49\u3002 \u4e0d\u8981\u4f7f\u7528 assert \u8bed\u53e5\u6765\u9a8c\u8bc1\u516c\u5171API\u7684\u53c2\u6570\u503c. assert \u662f\u7528\u6765\u4fdd\u8bc1\u5185\u90e8\u6b63\u786e\u6027\u7684,\u800c\u4e0d\u662f\u7528\u6765\u5f3a\u5236\u7ea0\u6b63\u53c2\u6570\u4f7f\u7528\uff0c\u8fd9\u79cd\u60c5\u51b5\u5e94\u8be5\u4f7f\u7528 raise \u8bed\u53e5\u6765\u629b\u51fa\u5f02\u5e38\u3002 \u81ea\u5b9a\u4e49\u5f02\u5e38\u5e94\u7ee7\u627f\u5185\u5efa\u7684 Exception \u7c7b\uff0c\u4e14\u5f02\u5e38\u7c7b\u7684\u547d\u540d\u540e\u7f00\u4e3a**Error**\uff0c \u5982 ReadError \u7b49\u3002 \u6c38\u8fdc\u4e0d\u8981\u4f7f\u7528 except: \u8bed\u53e5\u6765\u6355\u83b7\u6240\u6709\u5f02\u5e38, \u4e5f\u4e0d\u8981\u6355\u83b7 Exception \u6216\u8005 StandardError \u3002 \u5426\u5219python\u4f1a\u6355\u83b7**\u6240\u6709\u5f02\u5e38**\uff08\u5305\u62ec**\u8bed\u6cd5\u9519\u8bef**\uff09\uff0c\u56e0\u6b64\u4f7f\u7528 except: \u6216\u8005 except Exception: \uff0c\u5f88\u5bb9\u6613\u9690\u85cf\u771f\u6b63\u7684**Bug**\uff0c\u5e76\u4e14\u4e0d\u5bb9\u6613\u5b9a\u4f4d\u67e5\u627e\u3002 \u5c3d\u91cf\u51cf\u5c11 try/except \u5757\u4e2d\u7684\u4ee3\u7801\u91cf\u3002 try \u5757\u7684\u4f53\u79ef\u8d8a\u5927, \u671f\u671b\u4e4b\u5916\u7684\u5f02\u5e38\u5c31\u8d8a\u5bb9\u6613\u88ab\u89e6\u53d1. \u8fd9\u79cd\u60c5\u51b5\u4e0b, try/except \u5757\u5c06\u9690\u85cf\u771f\u6b63\u7684\u9519\u8bef \u4f7f\u7528finally\u5b50\u53e5\u6765\u6267\u884c\u90a3\u4e9b\u65e0\u8bbatry\u5757\u4e2d\u6709\u6ca1\u6709\u5f02\u5e38\u90fd\u5e94\u8be5\u88ab\u6267\u884c\u7684\u4ee3\u7801. \u8fd9\u5bf9\u4e8e\u6e05\u7406\u8d44\u6e90\u5e38\u5e38\u5f88\u6709\u7528, \u4f8b\u5982\u5173\u95ed\u6587\u4ef6 \u4ee5\u4e0a\u77e5\u8bc6\u5bf9\u5f02\u5e38\u7684\u7b80\u5355\u8bf4\u660e\uff0c\u8be6\u7ec6\u8bf4\u660e\u4e0e\u9ad8\u9636\u4f7f\u7528\u6280\u5de7\u89c1\uff1a Python \u9879\u76ee\u5de5\u7a0b\u5316\u5f00\u53d1\u6307\u5357-\u5f02\u5e38 \u3002","title":"\u5f02\u5e38"},{"location":"standard/language_rules/#_4","text":"\u867d\u7136\u5168\u5c40\u53d8\u91cf\u6709\u65f6\u5f88\u65b9\u4fbf\u5f88\u597d\u7528\uff0c\u4f46\u662f\u5bfc\u5165\u65f6\u53ef\u80fd\u6539\u53d8\u6a21\u5757\u884c\u4e3a\uff0c\u56e0\u4e3a\u5bfc\u5165\u6a21\u5757\u65f6\u4f1a\u5bf9\u6a21\u5757\u7ea7\u53d8\u91cf\u8d4b\u503c\u3002\u4f8b\u5982C\u6a21\u5757\u4eceA\u6a21\u5757\u4e2d\u5bfc\u5165B\u53d8\u91cf\uff0c\u5728C\u6a21\u5757\u4e2d\u4fee\u6539B\u53d8\u91cf\u4f1a\u5f71\u54cdA\u4e2d\u7684B\u53d8\u91cf\uff0c\u4f5c\u7528\u7b49\u540c\u4e8e\u51fd\u6570\u4e2d\u4fee\u6539\u53ef\u53d8\u53c2\u6570\u3002\uff08 \u6ce8 \uff1a\u8fd9\u91cc\u7684\u53d8\u91cf\u6307\u7684\u662fpython\u4e2d\u7684\u53ef\u53d8\u7c7b\u578b\u3002\uff09 \u9f13\u52b1\u4f7f\u7528\u6a21\u5757\u7ea7\u7684\u5e38\u91cf\uff0c\u4e14\u5e38\u91cf\u547d\u540d\u5fc5\u987b\u5168\u90e8\u5927\u5199\uff0c\u4f7f\u7528 _ \u8fdb\u884c\u5206\u9694\u3002 \u82e5\u5fc5\u987b\u8981\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\uff0c\u5e94\u5728\u6a21\u5757\u5185\u58f0\u660e\u5168\u5c40\u53d8\u91cf,\u5e76\u5728\u540d\u79f0\u524d _ \u4f7f\u4e4b\u6210\u4e3a\u6a21\u5757\u5185\u90e8\u53d8\u91cf.\u5916\u90e8\u8bbf\u95ee\u5fc5\u987b\u901a\u8fc7\u6a21\u5757\u7ea7\u7684\u516c\u5171\u51fd\u6570\u3002","title":"\u5168\u5c40\u53d8\u91cf"},{"location":"standard/language_rules/#_5","text":"\u524d\u63d0\uff1a \u7c7b\u53ef\u4ee5\u5b9a\u4e49\u5728\u65b9\u6cd5, \u51fd\u6570\u6216\u8005\u7c7b\u4e2d \u51fd\u6570\u53ef\u4ee5\u5b9a\u4e49\u5728\u65b9\u6cd5\u6216\u51fd\u6570\u4e2d \u4e0d\u53ef\u53d8\u7c7b\u578b\u7684\u53d8\u91cf\u5bf9\u5d4c\u5957\u51fd\u6570\u662f\u53ea\u8bfb\u7684\u3002\u5373\u5185\u5d4c\u51fd\u6570\u53ef\u4ee5\u8bfb\u5916\u90e8\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf,\u4f46\u662f\u65e0\u6cd5\u6539\u5199,\u9664\u975e\u4f7f\u7528 nonlocal \u5bf9\u8be5\u53d8\u91cf\u8fdb\u884c\u58f0\u660e \u5185\u5d4c\u51fd\u6570\u548c\u7c7b\u4f1a\u4f7f\u5916\u90e8\u51fd\u6570\u7684**\u53ef\u8bfb\u6027\u53d8\u5dee** \u4f7f\u7528\u5185\u90e8\u7c7b\u6216\u8005\u5185\u5d4c\u51fd\u6570\u53ef\u4ee5\u5ffd\u89c6\u4e00\u4e9b\u8b66\u544a\u3002\u4f46\u662f\u5e94\u8be5\u907f\u514d\u4f7f\u7528\u5185\u5d4c\u51fd\u6570\u6216\u7c7b\uff0c\u9664\u975e\u662f\u60f3\u8986\u76d6\u67d0\u4e9b\u503c\u3002 \u82e5\u60f3\u5bf9\u6a21\u5757\u7684\u7528\u6237\u9690\u85cf\u67d0\u4e2a\u51fd\u6570\uff0c\u4e0d\u8981\u91c7\u7528\u5d4c\u5957\u5b83\u6765\u9690\u85cf\uff0c\u5e94\u8be5\u5728\u9700\u8981\u88ab\u9690\u85cf\u7684\u65b9\u6cd5\u7684\u6a21\u5757\u7ea7\u540d\u79f0\u52a0 _ \u524d\u7f00,\u8fd9\u6837\u5b83\u4f9d\u7136\u662f\u53ef\u4ee5\u88ab\u6d4b\u8bd5\u7684\u3002 # test 1 def func (): i = 1 l = [ 1 , 2 ] def anonymous_func (): # i is readable only # \u56e0\u6b64\u5bf9i\u7684\u64cd\u4f5c\u4e0d\u5f71\u54cd\u5916\u90e8\u7684i print ( i ) # i=1 l . append ( 1 ) # l\u662flist\uff0c\u5c5e\u4e8e\u53ef\u53d8\u7c7b\u578b print ( l ) # l= [1,2,1] print ( i ) # i=1 print ( l ) # l= [1,2,1] # test 2 def func (): i = 1 def anonymous_func (): nonlocal i i = 2 print ( i ) # i = 2 print ( i ) # i=2","title":"\u5d4c\u5957/\u5c40\u90e8/\u5185\u90e8\u7c7b\u6216\u51fd\u6570\uff08\u8fdb\u9636\u6280\u5de7\uff09"},{"location":"standard/language_rules/#_6","text":"\u5217\u8868\uff0c\u5b57\u5178\u548c\u96c6\u5408\u7684\u63a8\u5bfc\u4e0e\u751f\u6210\u5f0f\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u6d01\u9ad8\u6548\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u5bb9\u5668\u548c\u8fed\u4ee3\u5668, \u800c\u4e0d\u5fc5\u501f\u52a9 map() \uff0c filter() \uff0c\u6216\u8005 lambda \u3002\u5143\u7ec4\u662f\u6ca1\u6709\u63a8\u5bfc\u5f0f\u7684, () \u5185\u52a0\u7c7b\u4f3c\u63a8\u5bfc\u5f0f\u7684\u53e5\u5f0f\u8fd4\u56de\u7684\u662f\u4e2a\u751f\u6210\u5668\u3002 \u53ef\u4ee5\u5728\u7b80\u5355\u60c5\u51b5\u4e0b\u4f7f\u7528 \u6bcf\u4e2a\u90e8\u5206\u5e94\u8be5\u5355\u72ec\u7f6e\u4e8e\u4e00\u884c\uff1a\u6620\u5c04\u8868\u8fbe\u5f0f\uff0cfor\u8bed\u53e5\uff0c\u8fc7\u6ee4\u5668\u8868\u8fbe\u5f0f \u7981\u6b62\u591a\u91cdfor\u8bed\u53e5\u6216\u8fc7\u6ee4\u5668\u8868\u8fbe\u5f0f\uff0c\u590d\u6742\u60c5\u51b5\u4e0b\u8fd8\u662f\u4f7f\u7528\u5faa\u73af Good result = [ mapping_expr for value in iterable if filter_expr ] values = [ func ( value ) for value in values if filter ( value )] squares_generator = ( x ** 2 for x in range ( 10 )) adult_names = { user [ \"name\" ] for user in users if user [ 'age' ] >= 18 } Bad result = [( x , y ) for x in range ( 10 ) for y in range ( 5 ) if x * y > 10 ] return (( x , y , z ) for x in xrange ( 5 ) for y in xrange ( 5 ) if x != y for z in xrange ( 5 ) if y != z )","title":"\u63a8\u5bfc\u5f0f\u4e0e\u751f\u6210\u5f0f"},{"location":"standard/language_rules/#_7","text":"\u5bb9\u5668\u7c7b\u578b\uff0c\u50cf\u5b57\u5178\u548c\u5217\u8868\uff0c\u5b9a\u4e49\u4e86\u9ed8\u8ba4\u7684\u8fed\u4ee3\u5668\u548c\u5173\u7cfb\u6d4b\u8bd5\u64cd\u4f5c\u7b26( in \u548c not in )\u3002\u5b83\u4eec\u76f4\u63a5\u8868\u8fbe\u4e86\u64cd\u4f5c\uff0c\u6ca1\u6709\u989d\u5916\u7684\u65b9\u6cd5\u8c03\u7528\u3002 \u4f7f\u7528\u9ed8\u8ba4\u64cd\u4f5c\u7b26\u7684\u51fd\u6570\u662f\u901a\u7528\u7684\u3002 \u5b83\u53ef\u4ee5\u7528\u4e8e\u652f\u6301\u8be5\u64cd\u4f5c\u7684\u4efb\u4f55\u7c7b\u578b\u3002 Good for key in adict : ... if obj in alist : ... for line in afile : ... # \u8fed\u4ee3\u5668\uff0c\u4e00\u6b21\u4e00\u884c\u5730\u8bfb\u53d6\u6587\u4ef6 for k , v in dict . iteritems (): ... Bad for key in adict . keys (): ... if not adict . has_key ( key ): ... for line in afile . readlines (): ... # readlines()\u4f1a\u8bfb\u53d6\u5168\u90e8\u6587\u4ef6\u52a0\u8f7d\u5230\u5185\u5b58","title":"\u8fed\u4ee3\u5668\u4e0e\u64cd\u4f5c\u7b26"},{"location":"standard/language_rules/#_8","text":"\u751f\u6210\u5668\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u8fed\u4ee3\u5668\u3002 \u6240\u8c13\u751f\u6210\u5668\uff08\u51fd\u6570\uff09\uff0c\u5c31\u662f\u6bcf\u5f53\u5b83\u6267\u884c\u4e00\u6b21\u751f\u6210 yield \u8bed\u53e5\uff0c\u5b83\u5c31\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u8fd9\u4e2a\u8fed\u4ee3\u5668\u751f\u6210\u4e00\u4e2a\u503c\u3002\u751f\u6210\u503c\u540e\uff0c\u751f\u6210\u5668\u51fd\u6570\u7684\u8fd0\u884c\u72b6\u6001\u5c06\u88ab\u6302\u8d77\uff0c\u76f4\u5230\u4e0b\u4e00\u6b21\u751f\u6210\u3002 # example def get_batch ( dataset ): for data in dataset : batch_data = process ( data ) yield batch_data for batch in get_batch ( dataset ): output = model ( batch ) ...","title":"\u751f\u6210\u5668"},{"location":"standard/language_rules/#lambda","text":"lambda\u5728\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e2d\u5b9a\u4e49\u533f\u540d\u51fd\u6570. \u5e38\u7528\u4e8e\u4e3a map() \u548c filter() \u4e4b\u7c7b\u7684\u9ad8\u9636\u51fd\u6570\u5b9a\u4e49\u56de\u8c03\u51fd\u6570\u6216\u8005\u64cd\u4f5c\u7b26\u3002 \u9002\u7528\u4e8e\u5355\u884c\u51fd\u6570\uff0c\u4e00\u822c\u4e0d\u8d85\u8fc760-80\u4e2a\u5b57\u7b26 \u6ca1\u6709\u51fd\u6570\u540d\u610f\u5473\u7740\u5806\u6808\u8ddf\u8e2a\u66f4\u96be\u7406\u89e3\uff0c \u96be\u4ee5\u9605\u8bfb\u548c\u8c03\u8bd5 \u7531\u4e8elambda\u51fd\u6570\u901a\u5e38\u53ea\u5305\u542b\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u56e0\u6b64\u5176\u8868\u8fbe\u80fd\u529b\u6709\u9650 \u5bf9\u4e8e\u5e38\u89c1\u7684\u64cd\u4f5c\u7b26\uff0c\u4f8b\u5982\u4e58\u6cd5\u64cd\u4f5c\u7b26\uff0c\u4f7f\u7528 operator \u6a21\u5757\u4e2d\u7684\u51fd\u6570\u4ee5\u4ee3\u66fflambda\u51fd\u6570. \u4f8b\u5982, \u63a8\u8350\u4f7f\u7528 operator.mul , \u800c\u4e0d\u662f lambda x, y: x * y # example sorted_values = sorted ( values , key = lambda x : x [ 0 ])","title":"Lambda"},{"location":"standard/language_rules/#_9","text":"\u6761\u4ef6\u8868\u8fbe\u5f0f(\u53c8\u540d\u4e09\u5143\u8fd0\u7b97\u7b26)\u662f\u5bf9\u4e8eif\u8bed\u53e5\u7684\u4e00\u79cd\u66f4\u4e3a\u7b80\u77ed\u7684\u53e5\u6cd5\u89c4\u5219. \u4f8b\u5982: x = 1 if cond else 2 \u3002 \u5199\u6cd5\u4e0a\u63a8\u8350\u771f\u5b9e\u8868\u8fbe\u5f0f\uff0c if \u8868\u8fbe\u5f0f\uff0c else \u8868\u8fbe\u5f0f\u6bcf\u4e2a\u72ec\u5360\u4e00\u884c\u3002\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u63a8\u8350\u4f7f\u7528\u5b8c\u6574\u7684if\u8bed\u53e5\u3002 device = torch . device ( 'cuda' ) if torch . cuda . is_available () else torch . device ( 'cpu' ) # or device = torch . device ( 'cuda' if torch . cuda . is_available () else 'cpu' )","title":"\u6761\u4ef6\u8868\u8fbe\u5f0f"},{"location":"standard/language_rules/#_10","text":"\u4f60\u53ef\u4ee5\u5728\u51fd\u6570\u53c2\u6570\u5217\u8868\u7684\u6700\u540e\u6307\u5b9a\u53d8\u91cf\u7684\u503c, \u4f8b\u5982\uff0c def foo(a, b = 0): \u3002\u5982\u679c\u8c03\u7528foo\u65f6\u53ea\u5e26\u4e00\u4e2a\u53c2\u6570\uff0c\u5219b\u88ab\u8bbe\u4e3a0\u3002\u5982\u679c\u5e26\u4e24\u4e2a\u53c2\u6570\uff0c\u5219b\u7684\u503c\u7b49\u4e8e\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002 \u6ce8 \uff1a\u9ed8\u8ba4\u53c2\u6570\u53ea\u5728\u6a21\u5757\u52a0\u8f7d\u65f6\u6c42\u503c\u4e00\u6b21\u3002\u5982\u679c\u53c2\u6570\u662f\u5217\u8868\u6216\u5b57\u5178\u4e4b\u7c7b\u7684\u53ef\u53d8\u7c7b\u578b\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u95ee\u9898\u3002\u5982\u679c\u51fd\u6570\u4fee\u6539\u4e86\u5bf9\u8c61\uff08\u4f8b\u5982\u5411\u5217\u8868\u8ffd\u52a0\u9879\uff09\uff0c\u9ed8\u8ba4\u503c\u5c31\u88ab\u4fee\u6539\u4e86\u3002 Good\uff1a def foo ( a , b : List [ int ] = None ): if b is None : b = [] # Empty tuple OK since tuples are immutable def foo ( a , b : Sequence = ()): Bad\uff1a def foo ( a , b = []): def foo ( a , b = {}): def foo ( a , b = time . time ()):","title":"\u9ed8\u8ba4\u53c2\u6570\u503c"},{"location":"standard/language_rules/#truefalse","text":"Python\u5728\u5e03\u5c14\u4e0a\u4e0b\u6587\u4e2d\u4f1a\u5c06\u67d0\u4e9b\u503c\u6c42\u503c\u4e3a False \u3002\u6309\u7b80\u5355\u7684\u76f4\u89c9\u6765\u8bb2\uff0c\u5c31\u662f\u6240\u6709\u7684\u201d\u7a7a\u201d\u503c\u90fd\u88ab\u8ba4\u4e3a\u662f False \u3002 0 \uff0c [] \uff0c {} \uff0c \"\" \u90fd\u88ab\u8ba4\u4e3a\u662f False \u3002 \u6ce8\u610f\uff1aFalse is not None \uff0c\u4f7f\u7528 if not x \u4e0e if x is not None \u662f\u4e0d\u540c\u7684\u5224\u65ad\u6761\u4ef6\uff0c\u6ce8\u610f\u4f7f\u7528\u60c5\u51b5\u3002 \u5c3d\u53ef\u80fd\u4f7f\u7528\u9690\u5f0f\u7684false, \u4f8b\u5982: \u4f7f\u7528 if foo: \u800c\u4e0d\u662f if foo != []: \u6c38\u8fdc\u4e0d\u8981\u7528==\u5c06\u4e00\u4e2a\u5e03\u5c14\u91cf\u4e0e False \u76f8\u6bd4\u8f83\u3002\u4f7f\u7528 if not x: \u4ee3\u66ff\u3002 \u5982\u679c\u4f60\u9700\u8981\u533a\u5206 False \u548c None , \u4f60\u5e94\u8be5\u7528\u50cf if not x and x is not None: \u8fd9\u6837\u7684\u8bed\u53e5\u3002 \u5bf9\u4e8e\u5e8f\u5217(\u5b57\u7b26\u4e32\uff0c\u5217\u8868\uff0c\u5143\u7ec4)\uff0c if not seq: \u6216\u8005 if seq: \u6bd4 if len(seq): \u6216 if not len(seq): \u8981\u66f4\u597d\u3002 \u5904\u7406\u6574\u6570\u65f6\uff0c\u4f7f\u7528\u9690\u5f0f False \u53ef\u80fd\u4f1a\u5f97\u4e0d\u507f\u5931(\u5373\u4e0d\u5c0f\u5fc3\u5c06 None \u5f53\u505a0\u6765\u5904\u7406)\u3002\u4f60\u53ef\u4ee5\u5c06\u4e00\u4e2a\u5df2\u77e5\u662f\u6574\u578b(\u4e14\u4e0d\u662f len() \u7684\u8fd4\u56de\u7ed3\u679c)\u7684\u503c\u4e0e0\u6bd4\u8f83.\u3001 \u6ce8\u610f \u20190\u2019 (\u5b57\u7b26\u4e32)\u4f1a\u88ab\u5f53\u505a True Good\uff1a if not users : print ( 'no users' ) if foo == 0 : self . handle_zero () if i % 10 == 0 : self . handle_multiple_of_ten () def f ( x = None ): if x is None : x = [] Bad\uff1a if len ( users ) == 0 : print 'no users' if foo is not None and not foo : #\u6761\u4ef6\u5224\u65ad\u987a\u5e8f\u53cd\u4e86 self . handle_zero () if not i % 10 : self . handle_multiple_of_ten () def f ( x = None ): x = x or [] #### \u8fc7\u65f6\u7684\u8bed\u8a00\u7279\u6027 \u5c3d\u53ef\u80fd\u4f7f\u7528\u5b57\u7b26\u4e32\u65b9\u6cd5\u53d6\u4ee3\u5b57\u7b26\u4e32\u6a21\u5757 \u4f7f\u7528\u51fd\u6570\u8c03\u7528\u8bed\u6cd5\u53d6\u4ee3 apply() \u4f7f\u7528\u5217\u8868\u63a8\u5bfc\u5f0f\uff0c for \u5faa\u73af\u53d6\u4ee3 filter() \uff0c map() \u4ee5\u53ca reduce() \u3002","title":"True\u4e0eFalse"},{"location":"standard/language_rules/#_11","text":"\u7528\u4e8e\u51fd\u6570\u53ca\u65b9\u6cd5\u7684\u88c5\u9970\u5668 (\u4e5f\u5c31\u662f@\u6807\u8bb0)\u3002 \u6700\u5e38\u89c1\u7684\u88c5\u9970\u5668\u662f @classmethod \u548c @staticmethod \uff0c\u7528\u4e8e\u5c06\u5e38\u89c4\u51fd\u6570\u8f6c\u6362\u6210\u7c7b\u65b9\u6cd5\u6216\u9759\u6001\u65b9\u6cd5\u3002 \u4e0d\u8fc7\uff0c\u88c5\u9970\u5668\u8bed\u6cd5\u4e5f\u5141\u8bb8\u7528\u6237\u81ea\u5b9a\u4e49\u88c5\u9970\u5668\u3002\u7279\u522b\u5730\uff0c\u5bf9\u4e8e\u67d0\u4e2a\u51fd\u6570 my_decorator \uff0c\u4e0b\u9762\u7684\u4e24\u6bb5\u4ee3\u7801\u662f\u7b49\u6548\u7684\uff1a class C ( object ): @my_decorator def method ( self ): # method body ... # equal to class C ( object ): def method ( self ): # method body ... method = my_decorator ( method ) \u88c5\u9970\u5668\u53ef\u4ee5\u5728\u51fd\u6570\u88ab\u6267\u884c\u4e4b\u524d\u5148\u505a\u4e00\u4e0b\u9884\u5904\u7406\uff0c\u4e5f\u5c31\u662f\u5728\u51fd\u6570\u5df2\u6709\u7684\u529f\u80fd\u4e0a\u6dfb\u52a0\u989d\u5916\u7684\u529f\u80fd\uff0c\u4f46\u4fdd\u6301\u5df2\u6709\u51fd\u6570\u4e0d\u53d8\uff08enforce invariant\uff09\u3002\u5bf9\u4e8e\u7ecf\u5e38\u8c03\u7528\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u88c5\u9970\u5668\uff0c\u51cf\u5c11\u4e00\u4e9b\u91cd\u590d\u4ee3\u7801\uff0c\u4f8b\u5982\uff1a login_required \uff0c check_value \u7b49\u7b49\u3002 \u5982\u679c\u597d\u5904\u5f88\u663e\u7136, \u5c31\u660e\u667a\u800c\u8c28\u614e\u7684\u4f7f\u7528\u88c5\u9970\u5668 \u4f7f\u7528\u88c5\u9970\u5668\u65f6\uff0c\u6587\u6863\u5e94\u8be5\u6e05\u6670\u7684\u8bf4\u660e\u8be5\u51fd\u6570\u662f\u4e00\u4e2a\u88c5\u9970\u5668 \u9664\u975e\u662f\u4e3a\u4e86\u5c06\u65b9\u6cd5\u548c\u73b0\u6709\u7684API\u96c6\u6210\uff0c\u5426\u5219\u4e0d\u8981\u4f7f\u7528 staticmethod \u3002\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5c06\u65b9\u6cd5\u5c01\u88c5\u6210\u6a21\u5757\u7ea7\u7684\u51fd\u6570\u53ef\u4ee5\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c\u3002 \u8c28\u614e\u4f7f\u7528 classmethod \uff0c\u901a\u5e38\u53ea\u5728\u5b9a\u4e49\u5907\u9009\u6784\u9020\u51fd\u6570\uff0c\u6216\u8005\u5199\u7528\u4e8e\u4fee\u6539\u8bf8\u5982\u8fdb\u7a0b\u7ea7\u7f13\u5b58\u7b49\u5fc5\u8981\u7684\u5168\u5c40\u72b6\u6001\u7684\u7279\u5b9a\u7c7b\u65b9\u6cd5\u624d\u7528\u3002","title":"\u65b9\u6cd5\u88c5\u9970\u5668"},{"location":"standard/language_rules/#_12","text":"\u4f60\u53ef\u4ee5\u6839\u636e PEP-484 \u6765\u5bf9 python3 \u4ee3\u7801\u8fdb\u884c\u6ce8\u91ca,\u5e76\u4f7f\u7528\u8bf8\u5982 pytype \u4e4b\u7c7b\u7684\u7c7b\u578b\u68c0\u67e5\u5de5\u5177\u6765\u68c0\u67e5\u4ee3\u7801\u3002 \u7c7b\u578b\u6ce8\u91ca\u65e2\u53ef\u4ee5\u5199\u5728\u6e90\u7801\uff0c\u4e5f\u53ef\u4ee5\u5199\u5728 pyi \u4e2d\u3002\u63a8\u8350\u5c3d\u91cf\u5199\u5728\u6e90\u7801\u91cc\uff0c\u5bf9\u4e8e\u7b2c\u4e09\u65b9\u6269\u5c55\u5305\uff0c\u53ef\u4ee5\u5199\u5728pyi\u6587\u4ef6\u91cc\u3002\u8be6\u60c5\u89c1\uff08 \u98ce\u683c\u6ce8\u91ca - \u7c7b\u578b\u6ce8\u91ca \uff09 \u7528\u4e8e\u51fd\u6570\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u6ce8\u91ca\uff1a def func ( a : int ) -> List [ int ]: def func ( s : str , ls : Optional [ str , List [ str ]] = None ) -> str","title":"\u4ee3\u7801\u7c7b\u578b\u6ce8\u91ca"},{"location":"standard/style_rules/","text":"\u98ce\u683c\u89c4\u8303 \u00b6 \u53c2\u8003\uff1a Python \u98ce\u683c\u89c4\u8303 \u884c\u957f\u5ea6 \u00b6 \u4e00\u884c\u4ee3\u7801\u7684\u957f\u5ea6\u9ed8\u8ba4\u4e0d\u8d85\u8fc780\u4e2a\u5b57\u7b26\uff08\u542b\u7a7a\u683c\uff09\u3002\u7531\u4e8e\u73b0\u5728\u663e\u793a\u5668\u66f4\u5927\u7684\u5c3a\u5bf8\u548c\u66f4\u9ad8\u7684\u50cf\u7d20\uff0c\u8fd9\u4e2a\u89c4\u8303\u6709\u70b9\u8fc7\u65f6\uff0c\u56e0\u6b64\u4e00\u884c\u4e0d\u8d85\u8fc7120\u4e2a\u5b57\u7b26\u4e5f\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002 \u4ee5\u4e0b\u573a\u666f\u662f\u4f8b\u5916\uff1a \u957f\u7684 import \u8bed\u53e5\uff0c\u4f8b\u5982\u4ece\u67d0\u4e00\u6a21\u5757\u4e2d\u8c03\u7528\u591a\u4e2a\u51fd\u6570\u7b49 \u6ce8\u91ca\u4e2d\u7684URL\uff0c \u6587\u4ef6\u8def\u5f84\uff0c\u6216\u4e00\u4e9b\u7279\u5b9a\u7684\u957fToken \u4e0d\u4fbf\u4e8e\u6362\u884c\uff0c\u4e0d\u5305\u542b\u7a7a\u683c\u7684\u6a21\u5757\u7ea7\u5b57\u7b26\u4e32\u5e38\u91cf\uff0c\u6bd4\u5982URL\u6216\u8005\u8def\u5f84 Python\u4f1a\u5c06**\u5706\u62ec\u53f7\u3001\u4e2d\u62ec\u53f7\u548c\u82b1\u62ec\u53f7**\u4e2d\u7684\u884c**\u9690\u5f0f\u5730\u8fde\u63a5**\u8d77\u6765\uff1a def foo_bar ( self , width , height , color = 'black' , design = None , x = 'foo' , emphasis = None , highlight = 0 ) x = ( 'This will build a very long long ' 'long long long long long long string' ) # http://www.example.com/us/developer/documentation/api/content/v2.0/csv_file_name_extension_full_specification.html \u62ec\u53f7 \u00b6 \u5b81\u7f3a\u6bcb\u6ee5\u7684\u4f7f\u7528\u62ec\u53f7\u3002 \u9664\u975e\u662f\u7528\u4e8e\u5b9e\u73b0\u884c\u8fde\u63a5\u6216\u8005\u5143\u7ec4\uff0c \u5426\u5219\u4e0d\u8981\u5728\u8fd4\u56de\u8bed\u53e5\u6216\u6761\u4ef6\u8bed\u53e5\u4e2d\u4f7f\u7528\u62ec\u53f7\u3002 Good if x and y : return value return spam , beans # \u8fd4\u56de2\u4e2a\u5bf9\u8c61 return ( spam , beans ) # \u8fd4\u56de1\u4e2a\u5143\u7ec4 x = ( 'This will build a very long long ' 'long long long long long long string' ) Bad if ( x ): return ( foo ) \u7f29\u8fdb \u00b6 \u75284\u4e2a\u7a7a\u683c\u6765\u7f29\u8fdb\u4ee3\u7801 \u9664\u975e\u5728IDE\u4e2d\uff0c\u5426\u5219\u4e0d\u8981\u4f7f\u7528Tab \u4e5f\u4e0d\u8981Tab\u548c\u7a7a\u683c\u6df7\u7528 \u591a\u884c\u65f6\uff0c\u6ce8\u610f\u6362\u884c\u5782\u76f4\u5bf9\u9f50 Good # Aligned with opening delimiter foo = long_function_name ( var_one , var_two , var_three , var_four ) # Aligned with opening delimiter in a dictionary foo = { long_dictionary_key : value1 + value2 , ... } # 4-space hanging indent in a dictionary foo = { long_dictionary_key : long_dictionary_value , ... } Bad # Stuff on first line forbidden foo = long_function_name ( var_one , var_two , var_three , var_four ) # No hanging indent in a dictionary foo = { long_dictionary_key : long_dictionary_value , ... } \u5e8f\u5217\u5143\u7d20\u5c3e\u90e8\u9017\u53f7 \u00b6 \u4ec5\u5f53 ] , ) , } \u548c\u672b\u4f4d\u5143\u7d20\u4e0d\u5728\u540c\u4e00\u884c\u65f6\uff0c\u63a8\u8350\u4f7f\u7528\u5e8f\u5217\u5143\u7d20\u5c3e\u90e8\u9017\u53f7. \u5f53\u672b\u4f4d\u5143\u7d20\u5c3e\u90e8\u6709\u9017\u53f7\u65f6\uff0c\u5143\u7d20\u540e\u7684\u9017\u53f7\u53ef\u4ee5\u6307\u793a YAPF \u5c06\u5e8f\u5217\u683c\u5f0f\u5316\u4e3a\u6bcf\u884c\u4e00\u9879\u3002 Good golomb4 = [ 0 , 4 , 6 , ] Bad golomb4 = [ 0 , 4 , 6 ] \u7a7a\u884c \u00b6 \u9876\u7ea7\u5b9a\u4e49\u4e4b\u95f4\u7a7a\u4e24\u884c \u7c7b\u65b9\u6cd5\u5b9a\u4e49\u4e4b\u95f4\u7a7a\u4e00\u884c \u51fd\u6570\u6216\u65b9\u6cd5\u4e2d\uff0c\u67d0\u4e9b\u5730\u65b9\u8981\u662f\u4f60\u89c9\u5f97\u5408\u9002\uff0c\u5c31\u7a7a\u4e00\u884c \u6ce8\u91ca \u00b6 \u6587\u6863\u5b57\u7b26\u4e32\uff08 __doc__ \uff09 \u00b6 Python\u6709\u4e00\u79cd\u72ec\u4e00\u65e0\u4e8c\u7684\u7684\u6ce8\u91ca\u65b9\u5f0f\uff1a\u4f7f\u7528\u6587\u6863\u5b57\u7b26\u4e32\u3002\u6587\u6863\u5b57\u7b26\u4e32\u662f\u5305\uff0c\u6a21\u5757\uff0c\u7c7b\u6216\u51fd\u6570\u91cc\u7684\u7b2c\u4e00\u4e2a\u8bed\u53e5\u3002\u8fd9\u4e9b\u5b57\u7b26\u4e32\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u7684 __doc__ \u6210\u5458\u88ab\u81ea\u52a8\u63d0\u53d6\uff0c\u5e76\u4e14\u88abpydoc\u6240\u7528\u3002(\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u6a21\u5757\u4e0a\u8fd0\u884cpydoc\u8bd5\u4e00\u628a\uff0c\u770b\u770b\u5b83\u957f\u4ec0\u4e48\u6837)\u3002\u6211\u4eec\u5bf9\u6587\u6863\u5b57\u7b26\u4e32\u7684\u60ef\u4f8b\u662f\u4f7f\u7528\u4e09\u91cd\u53cc\u5f15\u53f7\u201d\u201d\u201d( PEP-257 )\u3002 \u4e00\u4e2a\u6587\u6863\u5b57\u7b26\u4e32\u5e94\u8be5\u8fd9\u6837\u7ec4\u7ec7\uff1a\u9996\u5148\u662f\u4e00\u884c\u4ee5\u53e5\u53f7\uff0c\u95ee\u53f7\u6216\u60ca\u53f9\u53f7\u7ed3\u5c3e\u7684\u6982\u8ff0(\u6216\u8005\u8be5\u6587\u6863\u5b57\u7b26\u4e32\u5355\u7eaf\u53ea\u6709\u4e00\u884c)\u3002\u63a5\u7740\u662f\u4e00\u4e2a\u7a7a\u884c\u3002\u63a5\u7740\u662f\u6587\u6863\u5b57\u7b26\u4e32\u5269\u4e0b\u7684\u90e8\u5206\uff0c\u5b83\u5e94\u8be5\u4e0e\u6587\u6863\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u884c\u7684\u7b2c\u4e00\u4e2a\u5f15\u53f7\u5bf9\u9f50\u3002 \u6a21\u5757 \u00b6 \u6bcf\u4e2a\u6587\u4ef6\u5e94\u8be5\u5305\u542b\u4e00\u4e2a\u8bb8\u53ef\u6837\u677f\uff0c\u6839\u636e\u9879\u76ee\u4f7f\u7528\u7684\u8bb8\u53ef(\u4f8b\u5982\uff0cApache 2.0\uff0cBSD\uff0cLGPL\uff0cGPL), \u9009\u62e9\u5408\u9002\u7684\u6837\u677f\u3002\u5176\u5f00\u5934\u5e94\u662f\u5bf9\u6a21\u5757\u5185\u5bb9\u548c\u7528\u6cd5\u7684\u63cf\u8ff0\u3002\u591a\u89c1\u4e8e\u5f00\u6e90\u4ed3\u5e93\u3002 \u51fd\u6570\u4e0e\u65b9\u6cd5 \u00b6 \u4e0b\u6587\u6240\u6307\u7684\u51fd\u6570\uff0c\u5305\u62ec\u51fd\u6570\uff0c\u65b9\u6cd5\uff0c\u4ee5\u53ca\u751f\u6210\u5668\u3002 \u4e00\u4e2a\u51fd\u6570\u5fc5\u987b\u8981\u6709\u6587\u6863\u5b57\u7b26\u4e32\uff0c\u9664\u975e\u5b83\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6: 1. \u5916\u90e8\u4e0d\u53ef\u89c1 2. \u975e\u5e38\u77ed\u5c0f 3. \u7b80\u5355\u660e\u4e86 \u6587\u6863\u5b57\u7b26\u4e32\u5e94\u8be5\u5305\u542b\u51fd\u6570\u505a\u4ec0\u4e48\uff0c\u4ee5\u53ca\u8f93\u5165\u548c\u8f93\u51fa\u7684\u8be6\u7ec6\u63cf\u8ff0\u3002\u901a\u5e38\uff0c\u4e0d\u5e94\u8be5\u63cf\u8ff0\u201c\u600e\u4e48\u505a\u201d\u6216\u8005\u5b9e\u73b0\u7ec6\u8282\uff0c\u9664\u975e\u662f\u4e00\u4e9b\u590d\u6742\u7684\u7b97\u6cd5\u3002\u5bf9\u4e8e\u590d\u6742\u7684\u4ee3\u7801\uff0c\u5728\u4ee3\u7801\u65c1\u8fb9\u52a0\u6ce8\u91ca\u4f1a\u6bd4\u4f7f\u7528\u6587\u6863\u5b57\u7b26\u4e32\u66f4\u6709\u610f\u4e49\u3002 \u8986\u76d6\u57fa\u7c7b\u7684\u5b50\u7c7b\u65b9\u6cd5\u5e94\u6709\u4e00\u4e2a\u7c7b\u4f3c See base class \u7684\u7b80\u5355\u6ce8\u91ca\u6765\u6307\u5f15\u8bfb\u8005\u5230\u57fa\u7c7b\u65b9\u6cd5\u7684\u6587\u6863\u6ce8\u91ca\u3002\u82e5\u91cd\u8f7d\u7684\u5b50\u7c7b\u65b9\u6cd5\u548c\u57fa\u7c7b\u65b9\u6cd5\u6709\u5f88\u5927\u4e0d\u540c\uff0c\u90a3\u4e48\u6ce8\u91ca\u4e2d\u5e94\u8be5\u6307\u660e\u8fd9\u4e9b\u4fe1\u606f\u3002 \u5173\u4e8e\u51fd\u6570\u7684\u51e0\u4e2a\u65b9\u9762\u5e94\u8be5\u5728\u7279\u5b9a\u7684\u5c0f\u8282\u4e2d\u8fdb\u884c\u63cf\u8ff0\u8bb0\u5f55\uff0c\u8fd9\u51e0\u4e2a\u65b9\u9762\u5982\u4e0b\u6587\u6240\u8ff0\u3002\u6bcf\u8282\u5e94\u8be5\u4ee5\u4e00\u4e2a\u6807\u9898\u884c\u5f00\u59cb\u3002\u6807\u9898\u884c\u4ee5\u5192\u53f7\u7ed3\u5c3e\u3002\u9664\u6807\u9898\u884c\u5916\uff0c\u8282\u7684\u5176\u4ed6\u5185\u5bb9\u5e94\u88ab\u7f29\u8fdb2\u4e2a\u7a7a\u683c\u3002 Args: \u5217\u51fa\u6bcf\u4e2a\u53c2\u6570\u7684\u540d\u5b57, \u5e76\u5728\u540d\u5b57\u540e\u4f7f\u7528\u4e00\u4e2a\u5192\u53f7\u548c\u4e00\u4e2a\u7a7a\u683c, \u5206\u9694\u5bf9\u8be5\u53c2\u6570\u7684\u63cf\u8ff0.\u5982\u679c\u63cf\u8ff0\u592a\u957f\u8d85\u8fc7\u4e86\u5355\u884c\u6700\u5927\u957f\u5ea6\uff08 80 \u6216\u8005\u81ea\u5b9a\u4e49\uff09\u5b57\u7b26\u6570\uff0c\u4f7f\u75282\u6216\u80054\u4e2a\u7a7a\u683c\u7684\u60ac\u6302\u7f29\u8fdb(\u4e0e\u6587\u4ef6\u5176\u4ed6\u90e8\u5206\u4fdd\u6301\u4e00\u81f4)\u3002 \u63cf\u8ff0\u5e94\u8be5\u5305\u62ec\u6240\u9700\u7684\u7c7b\u578b\u548c\u542b\u4e49\u3002\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u63a5\u53d7 *args (\u53ef\u53d8\u957f\u5ea6\u53c2\u6570\u5217\u8868)\u6216\u8005 **kwargs (\u4efb\u610f\u5173\u952e\u5b57\u53c2\u6570), \u5e94\u8be5\u8be6\u7ec6\u5217\u51fa *args \u548c **kwargs \u3002 Returns: (\u6216\u8005 Yields: \u7528\u4e8e\u751f\u6210\u5668) \u63cf\u8ff0\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u548c\u8bed\u4e49. \u5982\u679c\u51fd\u6570\u8fd4\u56deNone, \u8fd9\u4e00\u90e8\u5206\u53ef\u4ee5\u7701\u7565. Raises: \u5217\u51fa\u4e0e\u63a5\u53e3\u6709\u5173\u7684\u6240\u6709\u5f02\u5e38. def fetch_smalltable_rows ( table_handle : smalltable . Table , keys : Sequence [ Union [ bytes , str ]], require_all_keys : bool = False , ) -> Mapping [ bytes , Tuple [ str ]]: \"\"\"Fetches rows from a Smalltable. Retrieves rows pertaining to the given keys from the Table instance represented by table_handle. String keys will be UTF-8 encoded. Args: table_handle: An open smalltable.Table instance. keys: A sequence of strings representing the key of each table row to fetch. String keys will be UTF-8 encoded. require_all_keys: Optional; If require_all_keys is True only rows with values set for all keys will be returned. Returns: A dict mapping keys to the corresponding table row data fetched. Each row is represented as a tuple of strings. For example: {b'Serak': ('Rigel VII', 'Preparer'), b'Zim': ('Irk', 'Invader'), b'Lrrr': ('Omicron Persei 8', 'Emperor')} Returned keys are always bytes. If a key from the keys argument is missing from the dictionary, then that row was not found in the table (and require_all_keys must have been False). Raises: IOError: An error occurred accessing the smalltable. \"\"\" \u7c7b\u6ce8\u91ca \u00b6 \u7c7b\u5e94\u8be5\u5728\u5176\u5b9a\u4e49\u4e0b\u6709\u4e00\u4e2a\u7528\u4e8e\u63cf\u8ff0\u8be5\u7c7b\u7684\u6587\u6863\u5b57\u7b26\u4e32\u3002\u5982\u679c\u4f60\u7684\u7c7b\u6709\u516c\u5171\u5c5e\u6027(Attributes)\uff0c\u90a3\u4e48\u6587\u6863\u4e2d\u5e94\u8be5\u6709\u4e00\u4e2a\u5c5e\u6027(Attributes)\u6bb5\u3002\u5e76\u4e14\u5e94\u8be5\u9075\u5b88\u548c\u51fd\u6570\u53c2\u6570\u76f8\u540c\u7684\u683c\u5f0f\u3002 class SampleClass ( object ): \"\"\"Summary of class here. Longer class information.... Longer class information.... Attributes: likes_spam: A boolean indicating if we like SPAM or not. eggs: An integer count of the eggs we have laid. \"\"\" def __init__ ( self , likes_spam = False ): \"\"\"Inits SampleClass with blah.\"\"\" self . likes_spam = likes_spam self . eggs = 0 def public_method ( self ): \"\"\"Performs operation blah.\"\"\" ... \u5757\u6ce8\u91ca\u4e0e\u884c\u6ce8\u91ca \u00b6 \u6700\u9700\u8981\u5199\u6ce8\u91ca\u7684\u662f\u4ee3\u7801\u4e2d\u90a3\u4e9b\u6280\u5de7\u6027\u7684\u90e8\u5206\u3002\u5982\u679c\u4f60\u5728\u4e0b\u6b21 \u4ee3\u7801\u5ba1\u67e5 \u7684\u65f6\u5019\u5fc5\u987b\u89e3\u91ca\u4e00\u4e0b\uff0c\u90a3\u4e48\u4f60\u5e94\u8be5\u73b0\u5728\u5c31\u7ed9\u5b83\u5199\u6ce8\u91ca\u3002\u5bf9\u4e8e\u590d\u6742\u7684\u64cd\u4f5c\uff0c\u5e94\u8be5\u5728\u5176\u64cd\u4f5c\u5f00\u59cb\u524d\u5199\u4e0a\u82e5\u5e72\u884c\u6ce8\u91ca\uff0c \u591a\u884c\u6ce8\u91ca\u53ef\u4ee5\u4f7f\u7528 \"\"\"...\"\"\" \u3002\u5bf9\u4e8e\u4e0d\u662f\u4e00\u76ee\u4e86\u7136\u7684\u4ee3\u7801\uff0c\u5e94\u5728\u5176\u884c\u5c3e\u6dfb\u52a0\u6ce8\u91ca\u3002 # We use a weighted dictionary search to find out where i is in # the array. We extrapolate position based on the largest num # in the array and the array size and then do binary search to # get the exact number. if i & ( i - 1 ) == 0 : # True if i is 0 or a power of 2 \u4e3a\u4e86\u63d0\u9ad8\u53ef\u8bfb\u6027\uff0c\u6ce8\u91ca\u5e94\u8be5\u81f3\u5c11\u79bb\u5f00\u4ee3\u78012\u4e2a\u7a7a\u683c\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u7edd\u4e0d\u8981\u63cf\u8ff0\u4ee3\u7801\u3002\u5047\u8bbe\u9605\u8bfb\u4ee3\u7801\u7684\u4eba\u6bd4\u4f60\u66f4\u61c2Python\uff0c\u4ed6\u53ea\u662f\u4e0d\u77e5\u9053\u4f60\u7684\u4ee3\u7801\u8981\u505a\u4ec0\u4e48\u3002 # BAD COMMENT # Now go through the b array and make sure whenever i occurs # the next element is i+1 \u7c7b\u578b\u6ce8\u91ca \u00b6 \u901a\u7528\u89c4\u5219 \u00b6 \u8bf7\u5148\u719f\u6089\u4e0b PEP-484 \u5bf9\u4e8e\u65b9\u6cd5\uff0c\u4ec5\u5728\u5fc5\u8981\u65f6\u624d\u5bf9 self \u6216 cls \u6ce8\u91ca \u82e5\u5bf9\u7c7b\u578b\u6ca1\u6709\u4efb\u4f55\u663e\u793a\uff0c\u8bf7\u4f7f\u7528 Any \u65e0\u9700\u6ce8\u91ca\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570 1 2 3 4 5 1. \u516c\u5171\u7684API\u9700\u8981\u6ce8\u91ca 2. \u5728\u4ee3\u7801\u7684\u5b89\u5168\u6027\uff0c\u6e05\u6670\u6027\u548c\u7075\u6d3b\u6027\u4e0a\u8fdb\u884c\u6743\u8861\u662f\u5426\u6ce8\u91ca 3. \u5bf9\u4e8e\u5bb9\u6613\u51fa\u73b0\u7c7b\u578b\u76f8\u5173\u7684\u9519\u8bef\u7684\u4ee3\u7801\u8fdb\u884c\u6ce8\u91ca 4. \u96be\u4ee5\u7406\u89e3\u7684\u4ee3\u7801\u8bf7\u8fdb\u884c\u6ce8\u91ca 5. \u82e5\u4ee3\u7801\u4e2d\u7684\u7c7b\u578b\u5df2\u7ecf\u7a33\u5b9a\uff0c\u53ef\u4ee5\u8fdb\u884c\u6ce8\u91ca. \u5bf9\u4e8e\u4e00\u4efd\u6210\u719f\u7684\u4ee3\u7801\uff0c\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u6ce8\u91ca\u4e86\u6240\u6709\u7684\u51fd\u6570\uff0c\u4e5f\u4e0d\u4f1a\u4e27\u5931\u592a\u591a\u7684\u7075\u6d3b\u6027\u3002 \u6362\u884c \u00b6 \u5c3d\u91cf\u9075\u5b88\u65e2\u5b9a\u7684\u7f29\u8fdb\u89c4\u5219\u3002\u6ce8\u91ca\u540e\uff0c\u5f88\u591a\u51fd\u6570\u7b7e\u540d\u5c06\u4f1a\u53d8\u6210\u6bcf\u884c\u4e00\u4e2a\u53c2\u6570\u3002 def my_method ( self , first_var : int , second_var : Foo , third_var : Optional [ Bar ]) -> int : ... \u5c3d\u91cf\u5728\u53d8\u91cf\u4e4b\u95f4\u6362\u884c\u800c\u4e0d\u662f\u5728\u53d8\u91cf\u548c\u7c7b\u578b\u6ce8\u91ca\u4e4b\u95f4.\u5f53\u7136,\u82e5\u6240\u6709\u4e1c\u897f\u90fd\u5728\u4e00\u884c\u4e0a,\u4e5f\u53ef\u4ee5\u63a5\u53d7 def my_method ( self , first_var : int ) -> int : ... \u82e5\u662f\u51fd\u6570\u540d,\u672b\u4f4d\u5f62\u53c2\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u6ce8\u91ca\u592a\u957f,\u4e5f\u53ef\u4ee5\u8fdb\u884c\u6362\u884c,\u5e76\u5728\u65b0\u884c\u8fdb\u884c4\u683c\u7f29\u8fdb. def my_method ( self , first_var : int ) -> Tuple [ MyLongType1 , MyLongType1 ]: ... \u82e5\u662f\u672b\u4f4d\u5f62\u53c2\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u6ce8\u91ca\u4e0d\u9002\u5408\u5728\u540c\u4e00\u884c\u4e0a,\u53ef\u4ee5\u6362\u884c,\u7f29\u8fdb\u4e3a4\u7a7a\u683c,\u5e76\u4fdd\u6301\u95ed\u5408\u7684\u62ec\u53f7 ) \u548c def \u5bf9\u9f50 def my_method ( self , other_arg : Optional [ MyLongType ] ) -> Dict [ OtherLongType , MyLongType ]: ... \u5c3d\u91cf\u4e0d\u8981\u5728\u4e00\u4e2a\u7c7b\u578b\u6ce8\u91ca\u4e2d\u8fdb\u884c\u6362\u884c.\u4f46\u662f\u6709\u65f6\u7c7b\u578b\u6ce8\u91ca\u8fc7\u957f\u9700\u8981\u6362\u884c\u65f6,\u8bf7\u5c3d\u91cf\u4fdd\u6301\u5b50\u7c7b\u578b\u4e2d\u4e0d\u88ab\u6362\u884c. def my_method ( self , first_var : Tuple [ List [ MyLongType1 ], List [ MyLongType2 ]], second_var : List [ Dict [ MyLongType3 , MyLongType4 ]]) -> None : ... \u53c2\u6570\u9ed8\u8ba4\u503c \u00b6 \u4f9d\u636e PEP-008 ,\u4ec5\u5bf9\u540c\u65f6\u5177\u6709\u7c7b\u578b\u6ce8\u91ca\u548c\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u7684 = \u5468\u56f4\u52a0\u7a7a\u683c\u3002 # good def func ( a : int = 0 ) -> int : ... # bad def func ( a : int = 0 ) -> int : ... \u53ef\u9009\u53c2\u6570\u7c7b\u578b \u00b6 \u5728python\u7684\u7c7b\u578b\u7cfb\u7edf\u4e2d, NoneType \u662f \u201c\u4e00\u7b49\u5bf9\u8c61\u201d\uff0c\u4e3a\u4e86\u8f93\u5165\u65b9\u4fbf\uff0c None \u662f NoneType \u7684\u522b\u540d\u3002\u4e00\u4e2a\u53d8\u91cf\u82e5\u662f None \uff0c\u5219\u8be5\u53d8\u91cf\u5fc5\u987b\u88ab\u58f0\u660e\u3002 \u56e0\u4e3apython\u4e2d\u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\uff0c\u82e5\u6ca1\u6709\u7279\u6b8a\u58f0\u660e\u5219\u9ed8\u8ba4\u4e3a Any \u7c7b\u578b\u3002\u82e5\u51fd\u6570\u53c2\u6570\u6709\u591a\u4e2a\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 typing \u6a21\u5757\u4e2d\u7684 Union \uff0c\u4f46\u82e5\u7c7b\u578b\u4ec5\u4ec5\u53ea\u662f\u5bf9\u5e94\u53e6\u4e00\u4e2a\u5176\u4ed6\u7c7b\u578b\uff0c\u5efa\u8bae\u4f7f\u7528 Optional \u3002 \u5c3d\u91cf\u663e\u5f0f\u800c\u975e\u9690\u5f0f\u7684\u4f7f\u7528 Optional \u3002\u5728PEP-484\u7684\u65e9\u671f\u7248\u672c\u4e2d\u5141\u8bb8\u4f7f\u7528 a: Text = None \u6765\u66ff\u4ee3 a: Optional[Text] = None \uff0c\u5f53\u7136,\u73b0\u5728\u4e0d\u63a8\u8350\u8fd9\u4e48\u505a\u4e86. # good def func ( a : Optional [ Text ], b : Optional [ Text ] = None ) -> Text : ... def multiple_nullable_union ( a : Union [ None , Text , int ]) -> Text ... # bad def nullable_union ( a : Union [ None , Text ]) -> Text : ... def implicit_optional ( a : Text = None ) -> Text : ... \u5ffd\u7565\u7c7b\u578b\u6ce8\u91ca \u00b6 \u53ef\u4ee5\u4f7f\u7528\u7279\u6b8a\u7684\u884c\u5c3e\u6ce8\u91ca # type: ignore \u6765\u7981\u7528\u8be5\u884c\u7684\u7c7b\u578b\u68c0\u67e5. pytype \u9488\u5bf9\u7279\u5b9a\u9519\u8bef\u6709\u4e00\u4e2a\u7981\u7528\u9009\u9879(\u7c7b\u4f3clint): # pytype: disable=attribute-error \u53d8\u91cf\u7c7b\u578b\u6ce8\u89e3 \u00b6 \u5f53\u4e00\u4e2a\u5185\u90e8\u53d8\u91cf\u96be\u4ee5\u63a8\u65ad\u5176\u7c7b\u578b\u65f6,\u53ef\u4ee5\u6709\u4ee5\u4e0b\u65b9\u6cd5\u6765\u6307\u793a\u5176\u7c7b\u578b: \u4f7f\u7528\u884c\u5c3e\u6ce8\u91ca # type: : a = SomeUndecoratedFunction () # type: Foo \u5e26\u7c7b\u578b\u6ce8\u89e3\u7684\u590d\u5236 \u5982\u51fd\u6570\u5f62\u53c2\u4e00\u6837,\u5728\u53d8\u91cf\u540d\u548c\u7b49\u53f7\u95f4\u52a0\u5165\u5192\u53f7\u548c\u7c7b\u578b: a : Foo = SomeUndecoratedFunction () \u6cdb\u578b \u00b6 \u5728\u6ce8\u91ca\u65f6,\u5c3d\u91cf\u5c06\u6cdb\u578b\u7c7b\u578b\u6ce8\u91ca\u4e3a\u7c7b\u578b\u53c2\u6570.\u5426\u5219, \u6cdb\u578b\u53c2\u6570\u5c06\u88ab\u89c6\u4e3a\u662f Any . # good def get_names ( employee_ids : List [ int ]) -> Dict [ int , Any ]: ... # bad # These are both interpreted as get_names(employee_ids: List[Any]) -> Dict[Any, Any] def get_names ( employee_ids : list ) -> Dict : ... \u82e5\u5b9e\u5728\u8981\u7528 Any \u4f5c\u4e3a\u6cdb\u578b\u7c7b\u578b,\u8bf7\u663e\u5f0f\u7684\u4f7f\u7528\u5b83\u3002\u4f46\u5728\u591a\u6570\u60c5\u51b5\u4e0b, TypeVar \u901a\u5e38\u53ef\u80fd\u662f\u66f4\u597d\u7684\u9009\u62e9. def get_names ( employee_ids : List [ Any ]) -> Dict [ Any , Text ]: \"\"\"Returns a mapping from employee ID to employee name for given IDs.\"\"\" T = TypeVar ( 'T' ) def get_names ( employee_ids : List [ T ]) -> Dict [ T , Text ]: \"\"\"Returns a mapping from employee ID to employee name for given IDs.\"\"\" \u7279\u6b8a\u7c7b\u578b \"\"\"Example\"\"\" import asyncio from typing import Callable , Any , Type , Tuple , Dict , Optional from functools import partial class BaseTask : \"\"\"base Task\"\"\" def run ( self ) -> bool : \"\"\"Run task\"\"\" raise NotImplementedError def stop ( self ) -> None : \"\"\"Stop task\"\"\" raise NotImplementedError class FileTask ( BaseTask ): \"\"\"File task\"\"\" def run ( self ) -> bool : pass def stop ( self ) -> None : pass class NetworkTask ( BaseTask ): \"\"\"Network task\"\"\" def run ( self ) -> bool : pass def stop ( self ) -> None : pass KwargsType = Dict [ str , Any ] ArgsType = Tuple [ Any ] async def run_in_executor ( func : Callable [ ... , Any ], args : Optional [ ArgsType ] = (), kwargs : Optional [ KwargsType ] = None ) -> Any : \"\"\"Wrap a func in a threading executor \"\"\" if kwargs : func = partial ( func , ** kwargs ) loop = asyncio . get_running_loop () return await loop . run_in_executor ( None , func , * args ) def task_runner ( task_kls : Type [ BaseTask ]) -> None : \"\"\"Task runner\"\"\" task = task_kls () asyncio . run ( run_in_executor ( task . run )) \u5728 run_in_executor \u65b9\u6cd5\u4e2d\u4f7f\u7528\u4e86 typing.Callable \u3001 typing.Optional \u3001 typing.Any \u7279\u6b8a\u7c7b\u578b\u3002 \u5728 task_runner \u4e2d\u4f7f\u7528 typing.Type \u7c7b\u578b\uff0c\u8868\u660e task_kls \u53c2\u6570\u662f\u4e00\u4e2a BaseTask \u7c7b\u81ea\u8eab\uff0c \u800c\u4e0d\u662f\u5b83\u7684\u5bf9\u8c61\uff0c\u51c6\u786e\u8bf4\u662f\u5b83\u7684\u7c7b\u5bf9\u8c61\u3002\u7531\u4e8e FileTask \uff0c NetworkTask \uff0c\u7ee7\u627f\u81ea BaseTask \u7c7b\uff0c\u56e0\u6b64\u8fd93\u4e2a\u7c7b\u7684\u5bf9\u8c61\u5b9e\u4f8b\u90fd\u53ef\u4ee5\u4f20\u5165\u4f5c\u4e3a task_runner \u7684\u53c2\u6570\u3002 TODO\u6ce8\u91ca \u00b6 TODO \u4e00\u822c\u662f\u4e3a\u4e86\u6682\u65f6\u8fd8\u672a\u5b8c\u6210\u7684\u4ee3\u7801\u4f5c\u4e00\u4e2a\u7b80\u5355\u7684\u63d0\u9192\uff0c\u53ef\u4ee5\u662f\u81ea\u5df1\u4e5f\u53ef\u4ee5\u662f\u5176\u4ed6\u5f00\u53d1\u8005\u3002\u4e3a\u4e34\u65f6\u4ee3\u7801\u4f7f\u7528 TODO \u6ce8\u91ca\uff0c\u5b83\u662f\u4e00\u79cd\u77ed\u671f\u89e3\u51b3\u65b9\u6848\u3002\u4e0d\u7b97\u5b8c\u7f8e\uff0c\u4f46\u591f\u597d\u4e86\u3002 TODO \u6ce8\u91ca\u5e94\u8be5\u5728\u6240\u6709\u5f00\u5934\u5904\u5305\u542b TODO \u5b57\u7b26\u4e32\uff0c\u7d27\u8ddf\u7740\u662f\u7528\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u4f60\u7684\u540d\u5b57\uff0cemail\u5730\u5740\u6216\u5176\u5b83\u6807\u8bc6\u7b26\u3002\u7136\u540e\u662f\u4e00\u4e2a\u53ef\u9009\u7684\u5192\u53f7\u3002\u63a5\u7740\u5fc5\u987b\u6709\u4e00\u884c\u6ce8\u91ca\uff0c\u89e3\u91ca\u8981\u505a\u4ec0\u4e48\u3002\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u6709\u4e00\u4e2a\u7edf\u4e00\u7684 TODO \u683c\u5f0f\uff0c\u8fd9\u6837\u6dfb\u52a0\u6ce8\u91ca\u7684\u4eba\u5c31\u53ef\u4ee5\u641c\u7d22\u5230(\u5e76\u53ef\u4ee5\u6309\u9700\u63d0\u4f9b\u66f4\u591a\u7ec6\u8282)\u3002\u5199\u4e86 TODO \u6ce8\u91ca\u5e76\u4e0d\u4fdd\u8bc1\u5199\u7684\u4eba\u4f1a\u4eb2\u81ea\u89e3\u51b3\u95ee\u9898\u3002\u5f53\u4f60\u5199\u4e86\u4e00\u4e2a TODO \uff0c\u8bf7\u6ce8\u4e0a\u4f60\u7684\u540d\u5b57\u3002 # TODO(kl@gmail.com): Use a \"*\" here for string repetition. # TODO(Zeke) Change this to use relations. \u5982\u679c\u4f60\u7684 TODO \u662f\u201d\u5c06\u6765\u505a\u67d0\u4e8b\u201d\u7684\u5f62\u5f0f\uff0c\u90a3\u4e48\u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u4e00\u4e2a\u6307\u5b9a\u7684\u65e5\u671f(\u201c2009\u5e7411\u6708\u89e3\u51b3\u201d)\u6216\u8005\u4e00\u4e2a\u7279\u5b9a\u7684\u4e8b\u4ef6(\u201c\u7b49\u5230\u6240\u6709\u7684\u5ba2\u6237\u90fd\u53ef\u4ee5\u5904\u7406XML\u8bf7\u6c42\u5c31\u79fb\u9664\u8fd9\u4e9b\u4ee3\u7801\u201d)\u3002 \u547d\u540d \u00b6 \u5305\u540d\uff1a package_name \u6a21\u5757\u540d\uff1a module_name \u7c7b\u540d\uff1a ClassName \u65b9\u6cd5\u540d\uff1a method_name \u7c7b\u540d\uff1a ExceptionName \u51fd\u6570\u540d: function_name \u5168\u5c40\u5e38\u91cf\u540d: GLOBAL_CONSTANT_NAME \u5168\u5c40\u53d8\u91cf\u540d: global_var_name \u5b9e\u4f8b\u540d: instance_var_name \u51fd\u6570\u53c2\u6570\u540d: function_parameter_name \u5c40\u90e8\u53d8\u91cf\u540d: local_var_name \u51fd\u6570\u540d \u3001 \u53d8\u91cf\u540d**\u548c**\u6587\u4ef6\u540d**\u5e94\u8be5\u662f\u63cf\u8ff0\u6027\u7684\uff0c\u5c3d\u91cf**\u907f\u514d\u7f29\u5199 \uff0c\u7279\u522b\u8981\u907f\u514d\u4f7f\u7528\u975e\u9879\u76ee\u4eba\u5458\u4e0d\u6e05\u695a\u96be\u4ee5\u7406\u89e3\u7684\u7f29\u5199\uff0c\u4e0d\u8981\u901a\u8fc7\u5220\u9664\u5355\u8bcd\u4e2d\u7684\u5b57\u6bcd\u6765\u8fdb\u884c\u7f29\u5199\u3002 \u547d\u540d\u7ea6\u5b9a \u4f7f\u7528\u5355\u4e0b\u5212\u7ebf _ \u5f00\u5934\u8868\u793a\u6a21\u5757\u53d8\u91cf\u6216\u8005\u51fd\u6570\u662f protected \u7684\uff0c\u5373\u53ea\u5e94\u8be5\u6a21\u5757\u5185\u6216\u8005\u51fd\u6570\u5185\u4f7f\u7528\uff08\u786c\u662f\u8bbf\u95ee\u7684\u8bdd\u4e5f\u662f\u53ef\u4ee5\u7684\uff09\uff0c\u4e0d\u5e94\u8be5\u88ab\u516c\u5f00\u8bbf\u95ee\uff0c\u800c\u4e14python\u89e3\u6790\u65f6\u4f7f\u7528 from module import * \u65f6\u8be5\u53d8\u91cf\u6216\u51fd\u6570\u4e0d\u4f1a\u88ab\u5305\u542b\u3002 \u7528\u53cc\u4e0b\u5212\u7ebf( __ )\u5f00\u5934\u7684\u5b9e\u4f8b\u53d8\u91cf\u6216\u65b9\u6cd5\u8868\u793a\u7c7b\u5185\u79c1\u6709\u3002\u5373\u53ea\u5e94\u8be5\u6a21\u5757\u5185\u6216\u8005\u51fd\u6570\u5185\u4f7f\u7528\uff0c\u4e0d\u5e94\u8be5\u88ab\u516c\u5f00\u8bbf\u95ee\u3002\u4f7f\u7528 module.var \u4e0e class.var \u4f1a\u62a5\u9519\uff08 \u8be5\u5c5e\u6027\u4e0d\u5b58\u5728 \uff09\uff0c\u4e0d\u80fd\u8bbf\u95ee\uff08\u53ef\u4ee5\u4f7f\u7528_class__var\u8bbf\u95ee\uff0c \u5177\u4f53\u53ef\u4ee5\u67e5\u770b\u76f8\u5173\u6587\u6863\uff09\u3002 \u5c06\u76f8\u5173\u7684\u7c7b\u548c\u9876\u7ea7\u51fd\u6570\u653e\u5728\u540c\u4e00\u4e2a\u6a21\u5757\u91cc\u3002\u4e0d\u50cfJava\uff0c\u6ca1\u5fc5\u8981\u9650\u5236\u4e00\u4e2a\u7c7b\u4e00\u4e2a\u6a21\u5757\u3002 \u5bf9\u7c7b\u540d\u4f7f\u7528\u5927\u5199\u5b57\u6bcd\u5f00\u5934\u7684\u5355\u8bcd(\u5982CapWords\uff0c\u5373Pascal\u98ce\u683c)\uff0c\u4f46\u662f\u6a21\u5757\u540d\u5e94\u8be5\u7528\u5c0f\u5199\u52a0\u4e0b\u5212\u7ebf\u7684\u65b9\u5f0f(\u5982lower_with_under.py)\u3002\u56e0\u4e3a\u5982\u679c\u6a21\u5757\u540d\u78b0\u5de7\u548c\u7c7b\u540d\u4e00\u81f4, \u8fd9\u4f1a\u8ba9\u4eba\u56f0\u6270\u3002 \u4ee3\u7801\u98ce\u683c\u68c0\u6d4b \u00b6 \u4e3a\u4e86\u8ba9\u5f00\u53d1\u98ce\u683c\u8fbe\u5230\u7edf\u4e00\uff0c\u4f7f\u7528\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177\u68c0\u6d4b\u3002 \u4f7f\u7528 isort \u5c06\u5bfc\u5305\u90e8\u5206\u683c\u5f0f\u5316\u4e3a\u7edf\u4e00\u683c\u5f0f\uff0c\u4f7f\u7528 pylint \u68c0\u6d4b\u4ee3\u7801\u662f\u5426\u7b26\u5408 PEP-8 \u89c4\u8303\uff0c\u540c\u65f6\u8fd8\u80fd\u68c0\u6d4b \u4e00\u4e9b\u4e0d\u6807\u51c6\u7684\u7684\u8bed\u6cd5\uff0c\u5e76\u7ed9\u51fa\u4fee\u6539\u5efa\u8bae\u3002 \u6267\u884c isort . --check-only --diff \u68c0\u6d4b\u4ee3\u7801\u98ce\u683c\uff0c\u5e76\u4ec5\u8f93\u51fa\u4e0d\u7b26\u5408\u89c4\u8303\u7684\u5bfc\u5305\uff0c\u6267\u884c isort \u4f1a\u81ea\u52a8\u683c\u5f0f\u5316\u4ee3\u7801\u3002 \u8fd0\u884c pylint src tests \u68c0\u67e5 src \u76ee\u5f55\u548c tests \u76ee\u5f55\u4e0b\u7684 Python \u4ee3\u7801\u3002\u4f1a\u8f93\u51fa\u4e0d\u7b26\u5408\u89c4\u8303\u7684\u5185\u5bb9\uff0c\u7136\u540e \u6839\u636e\u5efa\u8bae\u4fee\u6539\u5373\u53ef\u3002 Pycharm\u7b49IDE\u90fd\u5b58\u5728\u4e00\u952e\u81ea\u52a8\u683c\u5f0f\u5316\u4ee3\u7801\u7684\u529f\u80fd\u3002\u4f8b\u5982\u5728Pycharm\u4e2d\u4f7f\u7528 Ctrl+Alt+L \u5feb\u6377\u952e\u6216\u8005 \u4f7f\u7528\u9f20\u6807\u9009\u5b9a\u4e0d\u89c4\u8303\uff08~\u63d0\u793a\uff09\u7684\u5730\u65b9\uff0c\u4f7f\u7528 Alt+Shift+Enter \u5feb\u6377\u952e\u4e00\u952e\u683c\u5f0f\u5316\u3002","title":"\u98ce\u683c\u89c4\u8303"},{"location":"standard/style_rules/#_1","text":"\u53c2\u8003\uff1a Python \u98ce\u683c\u89c4\u8303","title":"\u98ce\u683c\u89c4\u8303"},{"location":"standard/style_rules/#_2","text":"\u4e00\u884c\u4ee3\u7801\u7684\u957f\u5ea6\u9ed8\u8ba4\u4e0d\u8d85\u8fc780\u4e2a\u5b57\u7b26\uff08\u542b\u7a7a\u683c\uff09\u3002\u7531\u4e8e\u73b0\u5728\u663e\u793a\u5668\u66f4\u5927\u7684\u5c3a\u5bf8\u548c\u66f4\u9ad8\u7684\u50cf\u7d20\uff0c\u8fd9\u4e2a\u89c4\u8303\u6709\u70b9\u8fc7\u65f6\uff0c\u56e0\u6b64\u4e00\u884c\u4e0d\u8d85\u8fc7120\u4e2a\u5b57\u7b26\u4e5f\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002 \u4ee5\u4e0b\u573a\u666f\u662f\u4f8b\u5916\uff1a \u957f\u7684 import \u8bed\u53e5\uff0c\u4f8b\u5982\u4ece\u67d0\u4e00\u6a21\u5757\u4e2d\u8c03\u7528\u591a\u4e2a\u51fd\u6570\u7b49 \u6ce8\u91ca\u4e2d\u7684URL\uff0c \u6587\u4ef6\u8def\u5f84\uff0c\u6216\u4e00\u4e9b\u7279\u5b9a\u7684\u957fToken \u4e0d\u4fbf\u4e8e\u6362\u884c\uff0c\u4e0d\u5305\u542b\u7a7a\u683c\u7684\u6a21\u5757\u7ea7\u5b57\u7b26\u4e32\u5e38\u91cf\uff0c\u6bd4\u5982URL\u6216\u8005\u8def\u5f84 Python\u4f1a\u5c06**\u5706\u62ec\u53f7\u3001\u4e2d\u62ec\u53f7\u548c\u82b1\u62ec\u53f7**\u4e2d\u7684\u884c**\u9690\u5f0f\u5730\u8fde\u63a5**\u8d77\u6765\uff1a def foo_bar ( self , width , height , color = 'black' , design = None , x = 'foo' , emphasis = None , highlight = 0 ) x = ( 'This will build a very long long ' 'long long long long long long string' ) # http://www.example.com/us/developer/documentation/api/content/v2.0/csv_file_name_extension_full_specification.html","title":"\u884c\u957f\u5ea6"},{"location":"standard/style_rules/#_3","text":"\u5b81\u7f3a\u6bcb\u6ee5\u7684\u4f7f\u7528\u62ec\u53f7\u3002 \u9664\u975e\u662f\u7528\u4e8e\u5b9e\u73b0\u884c\u8fde\u63a5\u6216\u8005\u5143\u7ec4\uff0c \u5426\u5219\u4e0d\u8981\u5728\u8fd4\u56de\u8bed\u53e5\u6216\u6761\u4ef6\u8bed\u53e5\u4e2d\u4f7f\u7528\u62ec\u53f7\u3002 Good if x and y : return value return spam , beans # \u8fd4\u56de2\u4e2a\u5bf9\u8c61 return ( spam , beans ) # \u8fd4\u56de1\u4e2a\u5143\u7ec4 x = ( 'This will build a very long long ' 'long long long long long long string' ) Bad if ( x ): return ( foo )","title":"\u62ec\u53f7"},{"location":"standard/style_rules/#_4","text":"\u75284\u4e2a\u7a7a\u683c\u6765\u7f29\u8fdb\u4ee3\u7801 \u9664\u975e\u5728IDE\u4e2d\uff0c\u5426\u5219\u4e0d\u8981\u4f7f\u7528Tab \u4e5f\u4e0d\u8981Tab\u548c\u7a7a\u683c\u6df7\u7528 \u591a\u884c\u65f6\uff0c\u6ce8\u610f\u6362\u884c\u5782\u76f4\u5bf9\u9f50 Good # Aligned with opening delimiter foo = long_function_name ( var_one , var_two , var_three , var_four ) # Aligned with opening delimiter in a dictionary foo = { long_dictionary_key : value1 + value2 , ... } # 4-space hanging indent in a dictionary foo = { long_dictionary_key : long_dictionary_value , ... } Bad # Stuff on first line forbidden foo = long_function_name ( var_one , var_two , var_three , var_four ) # No hanging indent in a dictionary foo = { long_dictionary_key : long_dictionary_value , ... }","title":"\u7f29\u8fdb"},{"location":"standard/style_rules/#_5","text":"\u4ec5\u5f53 ] , ) , } \u548c\u672b\u4f4d\u5143\u7d20\u4e0d\u5728\u540c\u4e00\u884c\u65f6\uff0c\u63a8\u8350\u4f7f\u7528\u5e8f\u5217\u5143\u7d20\u5c3e\u90e8\u9017\u53f7. \u5f53\u672b\u4f4d\u5143\u7d20\u5c3e\u90e8\u6709\u9017\u53f7\u65f6\uff0c\u5143\u7d20\u540e\u7684\u9017\u53f7\u53ef\u4ee5\u6307\u793a YAPF \u5c06\u5e8f\u5217\u683c\u5f0f\u5316\u4e3a\u6bcf\u884c\u4e00\u9879\u3002 Good golomb4 = [ 0 , 4 , 6 , ] Bad golomb4 = [ 0 , 4 , 6 ]","title":"\u5e8f\u5217\u5143\u7d20\u5c3e\u90e8\u9017\u53f7"},{"location":"standard/style_rules/#_6","text":"\u9876\u7ea7\u5b9a\u4e49\u4e4b\u95f4\u7a7a\u4e24\u884c \u7c7b\u65b9\u6cd5\u5b9a\u4e49\u4e4b\u95f4\u7a7a\u4e00\u884c \u51fd\u6570\u6216\u65b9\u6cd5\u4e2d\uff0c\u67d0\u4e9b\u5730\u65b9\u8981\u662f\u4f60\u89c9\u5f97\u5408\u9002\uff0c\u5c31\u7a7a\u4e00\u884c","title":"\u7a7a\u884c"},{"location":"standard/style_rules/#_7","text":"","title":"\u6ce8\u91ca"},{"location":"standard/style_rules/#__doc__","text":"Python\u6709\u4e00\u79cd\u72ec\u4e00\u65e0\u4e8c\u7684\u7684\u6ce8\u91ca\u65b9\u5f0f\uff1a\u4f7f\u7528\u6587\u6863\u5b57\u7b26\u4e32\u3002\u6587\u6863\u5b57\u7b26\u4e32\u662f\u5305\uff0c\u6a21\u5757\uff0c\u7c7b\u6216\u51fd\u6570\u91cc\u7684\u7b2c\u4e00\u4e2a\u8bed\u53e5\u3002\u8fd9\u4e9b\u5b57\u7b26\u4e32\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u7684 __doc__ \u6210\u5458\u88ab\u81ea\u52a8\u63d0\u53d6\uff0c\u5e76\u4e14\u88abpydoc\u6240\u7528\u3002(\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u6a21\u5757\u4e0a\u8fd0\u884cpydoc\u8bd5\u4e00\u628a\uff0c\u770b\u770b\u5b83\u957f\u4ec0\u4e48\u6837)\u3002\u6211\u4eec\u5bf9\u6587\u6863\u5b57\u7b26\u4e32\u7684\u60ef\u4f8b\u662f\u4f7f\u7528\u4e09\u91cd\u53cc\u5f15\u53f7\u201d\u201d\u201d( PEP-257 )\u3002 \u4e00\u4e2a\u6587\u6863\u5b57\u7b26\u4e32\u5e94\u8be5\u8fd9\u6837\u7ec4\u7ec7\uff1a\u9996\u5148\u662f\u4e00\u884c\u4ee5\u53e5\u53f7\uff0c\u95ee\u53f7\u6216\u60ca\u53f9\u53f7\u7ed3\u5c3e\u7684\u6982\u8ff0(\u6216\u8005\u8be5\u6587\u6863\u5b57\u7b26\u4e32\u5355\u7eaf\u53ea\u6709\u4e00\u884c)\u3002\u63a5\u7740\u662f\u4e00\u4e2a\u7a7a\u884c\u3002\u63a5\u7740\u662f\u6587\u6863\u5b57\u7b26\u4e32\u5269\u4e0b\u7684\u90e8\u5206\uff0c\u5b83\u5e94\u8be5\u4e0e\u6587\u6863\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u884c\u7684\u7b2c\u4e00\u4e2a\u5f15\u53f7\u5bf9\u9f50\u3002","title":"\u6587\u6863\u5b57\u7b26\u4e32\uff08__doc__\uff09"},{"location":"standard/style_rules/#_8","text":"\u6bcf\u4e2a\u6587\u4ef6\u5e94\u8be5\u5305\u542b\u4e00\u4e2a\u8bb8\u53ef\u6837\u677f\uff0c\u6839\u636e\u9879\u76ee\u4f7f\u7528\u7684\u8bb8\u53ef(\u4f8b\u5982\uff0cApache 2.0\uff0cBSD\uff0cLGPL\uff0cGPL), \u9009\u62e9\u5408\u9002\u7684\u6837\u677f\u3002\u5176\u5f00\u5934\u5e94\u662f\u5bf9\u6a21\u5757\u5185\u5bb9\u548c\u7528\u6cd5\u7684\u63cf\u8ff0\u3002\u591a\u89c1\u4e8e\u5f00\u6e90\u4ed3\u5e93\u3002","title":"\u6a21\u5757"},{"location":"standard/style_rules/#_9","text":"\u4e0b\u6587\u6240\u6307\u7684\u51fd\u6570\uff0c\u5305\u62ec\u51fd\u6570\uff0c\u65b9\u6cd5\uff0c\u4ee5\u53ca\u751f\u6210\u5668\u3002 \u4e00\u4e2a\u51fd\u6570\u5fc5\u987b\u8981\u6709\u6587\u6863\u5b57\u7b26\u4e32\uff0c\u9664\u975e\u5b83\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6: 1. \u5916\u90e8\u4e0d\u53ef\u89c1 2. \u975e\u5e38\u77ed\u5c0f 3. \u7b80\u5355\u660e\u4e86 \u6587\u6863\u5b57\u7b26\u4e32\u5e94\u8be5\u5305\u542b\u51fd\u6570\u505a\u4ec0\u4e48\uff0c\u4ee5\u53ca\u8f93\u5165\u548c\u8f93\u51fa\u7684\u8be6\u7ec6\u63cf\u8ff0\u3002\u901a\u5e38\uff0c\u4e0d\u5e94\u8be5\u63cf\u8ff0\u201c\u600e\u4e48\u505a\u201d\u6216\u8005\u5b9e\u73b0\u7ec6\u8282\uff0c\u9664\u975e\u662f\u4e00\u4e9b\u590d\u6742\u7684\u7b97\u6cd5\u3002\u5bf9\u4e8e\u590d\u6742\u7684\u4ee3\u7801\uff0c\u5728\u4ee3\u7801\u65c1\u8fb9\u52a0\u6ce8\u91ca\u4f1a\u6bd4\u4f7f\u7528\u6587\u6863\u5b57\u7b26\u4e32\u66f4\u6709\u610f\u4e49\u3002 \u8986\u76d6\u57fa\u7c7b\u7684\u5b50\u7c7b\u65b9\u6cd5\u5e94\u6709\u4e00\u4e2a\u7c7b\u4f3c See base class \u7684\u7b80\u5355\u6ce8\u91ca\u6765\u6307\u5f15\u8bfb\u8005\u5230\u57fa\u7c7b\u65b9\u6cd5\u7684\u6587\u6863\u6ce8\u91ca\u3002\u82e5\u91cd\u8f7d\u7684\u5b50\u7c7b\u65b9\u6cd5\u548c\u57fa\u7c7b\u65b9\u6cd5\u6709\u5f88\u5927\u4e0d\u540c\uff0c\u90a3\u4e48\u6ce8\u91ca\u4e2d\u5e94\u8be5\u6307\u660e\u8fd9\u4e9b\u4fe1\u606f\u3002 \u5173\u4e8e\u51fd\u6570\u7684\u51e0\u4e2a\u65b9\u9762\u5e94\u8be5\u5728\u7279\u5b9a\u7684\u5c0f\u8282\u4e2d\u8fdb\u884c\u63cf\u8ff0\u8bb0\u5f55\uff0c\u8fd9\u51e0\u4e2a\u65b9\u9762\u5982\u4e0b\u6587\u6240\u8ff0\u3002\u6bcf\u8282\u5e94\u8be5\u4ee5\u4e00\u4e2a\u6807\u9898\u884c\u5f00\u59cb\u3002\u6807\u9898\u884c\u4ee5\u5192\u53f7\u7ed3\u5c3e\u3002\u9664\u6807\u9898\u884c\u5916\uff0c\u8282\u7684\u5176\u4ed6\u5185\u5bb9\u5e94\u88ab\u7f29\u8fdb2\u4e2a\u7a7a\u683c\u3002 Args: \u5217\u51fa\u6bcf\u4e2a\u53c2\u6570\u7684\u540d\u5b57, \u5e76\u5728\u540d\u5b57\u540e\u4f7f\u7528\u4e00\u4e2a\u5192\u53f7\u548c\u4e00\u4e2a\u7a7a\u683c, \u5206\u9694\u5bf9\u8be5\u53c2\u6570\u7684\u63cf\u8ff0.\u5982\u679c\u63cf\u8ff0\u592a\u957f\u8d85\u8fc7\u4e86\u5355\u884c\u6700\u5927\u957f\u5ea6\uff08 80 \u6216\u8005\u81ea\u5b9a\u4e49\uff09\u5b57\u7b26\u6570\uff0c\u4f7f\u75282\u6216\u80054\u4e2a\u7a7a\u683c\u7684\u60ac\u6302\u7f29\u8fdb(\u4e0e\u6587\u4ef6\u5176\u4ed6\u90e8\u5206\u4fdd\u6301\u4e00\u81f4)\u3002 \u63cf\u8ff0\u5e94\u8be5\u5305\u62ec\u6240\u9700\u7684\u7c7b\u578b\u548c\u542b\u4e49\u3002\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u63a5\u53d7 *args (\u53ef\u53d8\u957f\u5ea6\u53c2\u6570\u5217\u8868)\u6216\u8005 **kwargs (\u4efb\u610f\u5173\u952e\u5b57\u53c2\u6570), \u5e94\u8be5\u8be6\u7ec6\u5217\u51fa *args \u548c **kwargs \u3002 Returns: (\u6216\u8005 Yields: \u7528\u4e8e\u751f\u6210\u5668) \u63cf\u8ff0\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u548c\u8bed\u4e49. \u5982\u679c\u51fd\u6570\u8fd4\u56deNone, \u8fd9\u4e00\u90e8\u5206\u53ef\u4ee5\u7701\u7565. Raises: \u5217\u51fa\u4e0e\u63a5\u53e3\u6709\u5173\u7684\u6240\u6709\u5f02\u5e38. def fetch_smalltable_rows ( table_handle : smalltable . Table , keys : Sequence [ Union [ bytes , str ]], require_all_keys : bool = False , ) -> Mapping [ bytes , Tuple [ str ]]: \"\"\"Fetches rows from a Smalltable. Retrieves rows pertaining to the given keys from the Table instance represented by table_handle. String keys will be UTF-8 encoded. Args: table_handle: An open smalltable.Table instance. keys: A sequence of strings representing the key of each table row to fetch. String keys will be UTF-8 encoded. require_all_keys: Optional; If require_all_keys is True only rows with values set for all keys will be returned. Returns: A dict mapping keys to the corresponding table row data fetched. Each row is represented as a tuple of strings. For example: {b'Serak': ('Rigel VII', 'Preparer'), b'Zim': ('Irk', 'Invader'), b'Lrrr': ('Omicron Persei 8', 'Emperor')} Returned keys are always bytes. If a key from the keys argument is missing from the dictionary, then that row was not found in the table (and require_all_keys must have been False). Raises: IOError: An error occurred accessing the smalltable. \"\"\"","title":"\u51fd\u6570\u4e0e\u65b9\u6cd5"},{"location":"standard/style_rules/#_10","text":"\u7c7b\u5e94\u8be5\u5728\u5176\u5b9a\u4e49\u4e0b\u6709\u4e00\u4e2a\u7528\u4e8e\u63cf\u8ff0\u8be5\u7c7b\u7684\u6587\u6863\u5b57\u7b26\u4e32\u3002\u5982\u679c\u4f60\u7684\u7c7b\u6709\u516c\u5171\u5c5e\u6027(Attributes)\uff0c\u90a3\u4e48\u6587\u6863\u4e2d\u5e94\u8be5\u6709\u4e00\u4e2a\u5c5e\u6027(Attributes)\u6bb5\u3002\u5e76\u4e14\u5e94\u8be5\u9075\u5b88\u548c\u51fd\u6570\u53c2\u6570\u76f8\u540c\u7684\u683c\u5f0f\u3002 class SampleClass ( object ): \"\"\"Summary of class here. Longer class information.... Longer class information.... Attributes: likes_spam: A boolean indicating if we like SPAM or not. eggs: An integer count of the eggs we have laid. \"\"\" def __init__ ( self , likes_spam = False ): \"\"\"Inits SampleClass with blah.\"\"\" self . likes_spam = likes_spam self . eggs = 0 def public_method ( self ): \"\"\"Performs operation blah.\"\"\" ...","title":"\u7c7b\u6ce8\u91ca"},{"location":"standard/style_rules/#_11","text":"\u6700\u9700\u8981\u5199\u6ce8\u91ca\u7684\u662f\u4ee3\u7801\u4e2d\u90a3\u4e9b\u6280\u5de7\u6027\u7684\u90e8\u5206\u3002\u5982\u679c\u4f60\u5728\u4e0b\u6b21 \u4ee3\u7801\u5ba1\u67e5 \u7684\u65f6\u5019\u5fc5\u987b\u89e3\u91ca\u4e00\u4e0b\uff0c\u90a3\u4e48\u4f60\u5e94\u8be5\u73b0\u5728\u5c31\u7ed9\u5b83\u5199\u6ce8\u91ca\u3002\u5bf9\u4e8e\u590d\u6742\u7684\u64cd\u4f5c\uff0c\u5e94\u8be5\u5728\u5176\u64cd\u4f5c\u5f00\u59cb\u524d\u5199\u4e0a\u82e5\u5e72\u884c\u6ce8\u91ca\uff0c \u591a\u884c\u6ce8\u91ca\u53ef\u4ee5\u4f7f\u7528 \"\"\"...\"\"\" \u3002\u5bf9\u4e8e\u4e0d\u662f\u4e00\u76ee\u4e86\u7136\u7684\u4ee3\u7801\uff0c\u5e94\u5728\u5176\u884c\u5c3e\u6dfb\u52a0\u6ce8\u91ca\u3002 # We use a weighted dictionary search to find out where i is in # the array. We extrapolate position based on the largest num # in the array and the array size and then do binary search to # get the exact number. if i & ( i - 1 ) == 0 : # True if i is 0 or a power of 2 \u4e3a\u4e86\u63d0\u9ad8\u53ef\u8bfb\u6027\uff0c\u6ce8\u91ca\u5e94\u8be5\u81f3\u5c11\u79bb\u5f00\u4ee3\u78012\u4e2a\u7a7a\u683c\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u7edd\u4e0d\u8981\u63cf\u8ff0\u4ee3\u7801\u3002\u5047\u8bbe\u9605\u8bfb\u4ee3\u7801\u7684\u4eba\u6bd4\u4f60\u66f4\u61c2Python\uff0c\u4ed6\u53ea\u662f\u4e0d\u77e5\u9053\u4f60\u7684\u4ee3\u7801\u8981\u505a\u4ec0\u4e48\u3002 # BAD COMMENT # Now go through the b array and make sure whenever i occurs # the next element is i+1","title":"\u5757\u6ce8\u91ca\u4e0e\u884c\u6ce8\u91ca"},{"location":"standard/style_rules/#_12","text":"","title":"\u7c7b\u578b\u6ce8\u91ca"},{"location":"standard/style_rules/#_13","text":"\u8bf7\u5148\u719f\u6089\u4e0b PEP-484 \u5bf9\u4e8e\u65b9\u6cd5\uff0c\u4ec5\u5728\u5fc5\u8981\u65f6\u624d\u5bf9 self \u6216 cls \u6ce8\u91ca \u82e5\u5bf9\u7c7b\u578b\u6ca1\u6709\u4efb\u4f55\u663e\u793a\uff0c\u8bf7\u4f7f\u7528 Any \u65e0\u9700\u6ce8\u91ca\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570 1 2 3 4 5 1. \u516c\u5171\u7684API\u9700\u8981\u6ce8\u91ca 2. \u5728\u4ee3\u7801\u7684\u5b89\u5168\u6027\uff0c\u6e05\u6670\u6027\u548c\u7075\u6d3b\u6027\u4e0a\u8fdb\u884c\u6743\u8861\u662f\u5426\u6ce8\u91ca 3. \u5bf9\u4e8e\u5bb9\u6613\u51fa\u73b0\u7c7b\u578b\u76f8\u5173\u7684\u9519\u8bef\u7684\u4ee3\u7801\u8fdb\u884c\u6ce8\u91ca 4. \u96be\u4ee5\u7406\u89e3\u7684\u4ee3\u7801\u8bf7\u8fdb\u884c\u6ce8\u91ca 5. \u82e5\u4ee3\u7801\u4e2d\u7684\u7c7b\u578b\u5df2\u7ecf\u7a33\u5b9a\uff0c\u53ef\u4ee5\u8fdb\u884c\u6ce8\u91ca. \u5bf9\u4e8e\u4e00\u4efd\u6210\u719f\u7684\u4ee3\u7801\uff0c\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u6ce8\u91ca\u4e86\u6240\u6709\u7684\u51fd\u6570\uff0c\u4e5f\u4e0d\u4f1a\u4e27\u5931\u592a\u591a\u7684\u7075\u6d3b\u6027\u3002","title":"\u901a\u7528\u89c4\u5219"},{"location":"standard/style_rules/#_14","text":"\u5c3d\u91cf\u9075\u5b88\u65e2\u5b9a\u7684\u7f29\u8fdb\u89c4\u5219\u3002\u6ce8\u91ca\u540e\uff0c\u5f88\u591a\u51fd\u6570\u7b7e\u540d\u5c06\u4f1a\u53d8\u6210\u6bcf\u884c\u4e00\u4e2a\u53c2\u6570\u3002 def my_method ( self , first_var : int , second_var : Foo , third_var : Optional [ Bar ]) -> int : ... \u5c3d\u91cf\u5728\u53d8\u91cf\u4e4b\u95f4\u6362\u884c\u800c\u4e0d\u662f\u5728\u53d8\u91cf\u548c\u7c7b\u578b\u6ce8\u91ca\u4e4b\u95f4.\u5f53\u7136,\u82e5\u6240\u6709\u4e1c\u897f\u90fd\u5728\u4e00\u884c\u4e0a,\u4e5f\u53ef\u4ee5\u63a5\u53d7 def my_method ( self , first_var : int ) -> int : ... \u82e5\u662f\u51fd\u6570\u540d,\u672b\u4f4d\u5f62\u53c2\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u6ce8\u91ca\u592a\u957f,\u4e5f\u53ef\u4ee5\u8fdb\u884c\u6362\u884c,\u5e76\u5728\u65b0\u884c\u8fdb\u884c4\u683c\u7f29\u8fdb. def my_method ( self , first_var : int ) -> Tuple [ MyLongType1 , MyLongType1 ]: ... \u82e5\u662f\u672b\u4f4d\u5f62\u53c2\u548c\u8fd4\u56de\u503c\u7c7b\u578b\u6ce8\u91ca\u4e0d\u9002\u5408\u5728\u540c\u4e00\u884c\u4e0a,\u53ef\u4ee5\u6362\u884c,\u7f29\u8fdb\u4e3a4\u7a7a\u683c,\u5e76\u4fdd\u6301\u95ed\u5408\u7684\u62ec\u53f7 ) \u548c def \u5bf9\u9f50 def my_method ( self , other_arg : Optional [ MyLongType ] ) -> Dict [ OtherLongType , MyLongType ]: ... \u5c3d\u91cf\u4e0d\u8981\u5728\u4e00\u4e2a\u7c7b\u578b\u6ce8\u91ca\u4e2d\u8fdb\u884c\u6362\u884c.\u4f46\u662f\u6709\u65f6\u7c7b\u578b\u6ce8\u91ca\u8fc7\u957f\u9700\u8981\u6362\u884c\u65f6,\u8bf7\u5c3d\u91cf\u4fdd\u6301\u5b50\u7c7b\u578b\u4e2d\u4e0d\u88ab\u6362\u884c. def my_method ( self , first_var : Tuple [ List [ MyLongType1 ], List [ MyLongType2 ]], second_var : List [ Dict [ MyLongType3 , MyLongType4 ]]) -> None : ...","title":"\u6362\u884c"},{"location":"standard/style_rules/#_15","text":"\u4f9d\u636e PEP-008 ,\u4ec5\u5bf9\u540c\u65f6\u5177\u6709\u7c7b\u578b\u6ce8\u91ca\u548c\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u7684 = \u5468\u56f4\u52a0\u7a7a\u683c\u3002 # good def func ( a : int = 0 ) -> int : ... # bad def func ( a : int = 0 ) -> int : ...","title":"\u53c2\u6570\u9ed8\u8ba4\u503c"},{"location":"standard/style_rules/#_16","text":"\u5728python\u7684\u7c7b\u578b\u7cfb\u7edf\u4e2d, NoneType \u662f \u201c\u4e00\u7b49\u5bf9\u8c61\u201d\uff0c\u4e3a\u4e86\u8f93\u5165\u65b9\u4fbf\uff0c None \u662f NoneType \u7684\u522b\u540d\u3002\u4e00\u4e2a\u53d8\u91cf\u82e5\u662f None \uff0c\u5219\u8be5\u53d8\u91cf\u5fc5\u987b\u88ab\u58f0\u660e\u3002 \u56e0\u4e3apython\u4e2d\u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\uff0c\u82e5\u6ca1\u6709\u7279\u6b8a\u58f0\u660e\u5219\u9ed8\u8ba4\u4e3a Any \u7c7b\u578b\u3002\u82e5\u51fd\u6570\u53c2\u6570\u6709\u591a\u4e2a\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 typing \u6a21\u5757\u4e2d\u7684 Union \uff0c\u4f46\u82e5\u7c7b\u578b\u4ec5\u4ec5\u53ea\u662f\u5bf9\u5e94\u53e6\u4e00\u4e2a\u5176\u4ed6\u7c7b\u578b\uff0c\u5efa\u8bae\u4f7f\u7528 Optional \u3002 \u5c3d\u91cf\u663e\u5f0f\u800c\u975e\u9690\u5f0f\u7684\u4f7f\u7528 Optional \u3002\u5728PEP-484\u7684\u65e9\u671f\u7248\u672c\u4e2d\u5141\u8bb8\u4f7f\u7528 a: Text = None \u6765\u66ff\u4ee3 a: Optional[Text] = None \uff0c\u5f53\u7136,\u73b0\u5728\u4e0d\u63a8\u8350\u8fd9\u4e48\u505a\u4e86. # good def func ( a : Optional [ Text ], b : Optional [ Text ] = None ) -> Text : ... def multiple_nullable_union ( a : Union [ None , Text , int ]) -> Text ... # bad def nullable_union ( a : Union [ None , Text ]) -> Text : ... def implicit_optional ( a : Text = None ) -> Text : ...","title":"\u53ef\u9009\u53c2\u6570\u7c7b\u578b"},{"location":"standard/style_rules/#_17","text":"\u53ef\u4ee5\u4f7f\u7528\u7279\u6b8a\u7684\u884c\u5c3e\u6ce8\u91ca # type: ignore \u6765\u7981\u7528\u8be5\u884c\u7684\u7c7b\u578b\u68c0\u67e5. pytype \u9488\u5bf9\u7279\u5b9a\u9519\u8bef\u6709\u4e00\u4e2a\u7981\u7528\u9009\u9879(\u7c7b\u4f3clint): # pytype: disable=attribute-error","title":"\u5ffd\u7565\u7c7b\u578b\u6ce8\u91ca"},{"location":"standard/style_rules/#_18","text":"\u5f53\u4e00\u4e2a\u5185\u90e8\u53d8\u91cf\u96be\u4ee5\u63a8\u65ad\u5176\u7c7b\u578b\u65f6,\u53ef\u4ee5\u6709\u4ee5\u4e0b\u65b9\u6cd5\u6765\u6307\u793a\u5176\u7c7b\u578b: \u4f7f\u7528\u884c\u5c3e\u6ce8\u91ca # type: : a = SomeUndecoratedFunction () # type: Foo \u5e26\u7c7b\u578b\u6ce8\u89e3\u7684\u590d\u5236 \u5982\u51fd\u6570\u5f62\u53c2\u4e00\u6837,\u5728\u53d8\u91cf\u540d\u548c\u7b49\u53f7\u95f4\u52a0\u5165\u5192\u53f7\u548c\u7c7b\u578b: a : Foo = SomeUndecoratedFunction ()","title":"\u53d8\u91cf\u7c7b\u578b\u6ce8\u89e3"},{"location":"standard/style_rules/#_19","text":"\u5728\u6ce8\u91ca\u65f6,\u5c3d\u91cf\u5c06\u6cdb\u578b\u7c7b\u578b\u6ce8\u91ca\u4e3a\u7c7b\u578b\u53c2\u6570.\u5426\u5219, \u6cdb\u578b\u53c2\u6570\u5c06\u88ab\u89c6\u4e3a\u662f Any . # good def get_names ( employee_ids : List [ int ]) -> Dict [ int , Any ]: ... # bad # These are both interpreted as get_names(employee_ids: List[Any]) -> Dict[Any, Any] def get_names ( employee_ids : list ) -> Dict : ... \u82e5\u5b9e\u5728\u8981\u7528 Any \u4f5c\u4e3a\u6cdb\u578b\u7c7b\u578b,\u8bf7\u663e\u5f0f\u7684\u4f7f\u7528\u5b83\u3002\u4f46\u5728\u591a\u6570\u60c5\u51b5\u4e0b, TypeVar \u901a\u5e38\u53ef\u80fd\u662f\u66f4\u597d\u7684\u9009\u62e9. def get_names ( employee_ids : List [ Any ]) -> Dict [ Any , Text ]: \"\"\"Returns a mapping from employee ID to employee name for given IDs.\"\"\" T = TypeVar ( 'T' ) def get_names ( employee_ids : List [ T ]) -> Dict [ T , Text ]: \"\"\"Returns a mapping from employee ID to employee name for given IDs.\"\"\" \u7279\u6b8a\u7c7b\u578b \"\"\"Example\"\"\" import asyncio from typing import Callable , Any , Type , Tuple , Dict , Optional from functools import partial class BaseTask : \"\"\"base Task\"\"\" def run ( self ) -> bool : \"\"\"Run task\"\"\" raise NotImplementedError def stop ( self ) -> None : \"\"\"Stop task\"\"\" raise NotImplementedError class FileTask ( BaseTask ): \"\"\"File task\"\"\" def run ( self ) -> bool : pass def stop ( self ) -> None : pass class NetworkTask ( BaseTask ): \"\"\"Network task\"\"\" def run ( self ) -> bool : pass def stop ( self ) -> None : pass KwargsType = Dict [ str , Any ] ArgsType = Tuple [ Any ] async def run_in_executor ( func : Callable [ ... , Any ], args : Optional [ ArgsType ] = (), kwargs : Optional [ KwargsType ] = None ) -> Any : \"\"\"Wrap a func in a threading executor \"\"\" if kwargs : func = partial ( func , ** kwargs ) loop = asyncio . get_running_loop () return await loop . run_in_executor ( None , func , * args ) def task_runner ( task_kls : Type [ BaseTask ]) -> None : \"\"\"Task runner\"\"\" task = task_kls () asyncio . run ( run_in_executor ( task . run )) \u5728 run_in_executor \u65b9\u6cd5\u4e2d\u4f7f\u7528\u4e86 typing.Callable \u3001 typing.Optional \u3001 typing.Any \u7279\u6b8a\u7c7b\u578b\u3002 \u5728 task_runner \u4e2d\u4f7f\u7528 typing.Type \u7c7b\u578b\uff0c\u8868\u660e task_kls \u53c2\u6570\u662f\u4e00\u4e2a BaseTask \u7c7b\u81ea\u8eab\uff0c \u800c\u4e0d\u662f\u5b83\u7684\u5bf9\u8c61\uff0c\u51c6\u786e\u8bf4\u662f\u5b83\u7684\u7c7b\u5bf9\u8c61\u3002\u7531\u4e8e FileTask \uff0c NetworkTask \uff0c\u7ee7\u627f\u81ea BaseTask \u7c7b\uff0c\u56e0\u6b64\u8fd93\u4e2a\u7c7b\u7684\u5bf9\u8c61\u5b9e\u4f8b\u90fd\u53ef\u4ee5\u4f20\u5165\u4f5c\u4e3a task_runner \u7684\u53c2\u6570\u3002","title":"\u6cdb\u578b"},{"location":"standard/style_rules/#todo","text":"TODO \u4e00\u822c\u662f\u4e3a\u4e86\u6682\u65f6\u8fd8\u672a\u5b8c\u6210\u7684\u4ee3\u7801\u4f5c\u4e00\u4e2a\u7b80\u5355\u7684\u63d0\u9192\uff0c\u53ef\u4ee5\u662f\u81ea\u5df1\u4e5f\u53ef\u4ee5\u662f\u5176\u4ed6\u5f00\u53d1\u8005\u3002\u4e3a\u4e34\u65f6\u4ee3\u7801\u4f7f\u7528 TODO \u6ce8\u91ca\uff0c\u5b83\u662f\u4e00\u79cd\u77ed\u671f\u89e3\u51b3\u65b9\u6848\u3002\u4e0d\u7b97\u5b8c\u7f8e\uff0c\u4f46\u591f\u597d\u4e86\u3002 TODO \u6ce8\u91ca\u5e94\u8be5\u5728\u6240\u6709\u5f00\u5934\u5904\u5305\u542b TODO \u5b57\u7b26\u4e32\uff0c\u7d27\u8ddf\u7740\u662f\u7528\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u4f60\u7684\u540d\u5b57\uff0cemail\u5730\u5740\u6216\u5176\u5b83\u6807\u8bc6\u7b26\u3002\u7136\u540e\u662f\u4e00\u4e2a\u53ef\u9009\u7684\u5192\u53f7\u3002\u63a5\u7740\u5fc5\u987b\u6709\u4e00\u884c\u6ce8\u91ca\uff0c\u89e3\u91ca\u8981\u505a\u4ec0\u4e48\u3002\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u6709\u4e00\u4e2a\u7edf\u4e00\u7684 TODO \u683c\u5f0f\uff0c\u8fd9\u6837\u6dfb\u52a0\u6ce8\u91ca\u7684\u4eba\u5c31\u53ef\u4ee5\u641c\u7d22\u5230(\u5e76\u53ef\u4ee5\u6309\u9700\u63d0\u4f9b\u66f4\u591a\u7ec6\u8282)\u3002\u5199\u4e86 TODO \u6ce8\u91ca\u5e76\u4e0d\u4fdd\u8bc1\u5199\u7684\u4eba\u4f1a\u4eb2\u81ea\u89e3\u51b3\u95ee\u9898\u3002\u5f53\u4f60\u5199\u4e86\u4e00\u4e2a TODO \uff0c\u8bf7\u6ce8\u4e0a\u4f60\u7684\u540d\u5b57\u3002 # TODO(kl@gmail.com): Use a \"*\" here for string repetition. # TODO(Zeke) Change this to use relations. \u5982\u679c\u4f60\u7684 TODO \u662f\u201d\u5c06\u6765\u505a\u67d0\u4e8b\u201d\u7684\u5f62\u5f0f\uff0c\u90a3\u4e48\u8bf7\u786e\u4fdd\u4f60\u5305\u542b\u4e86\u4e00\u4e2a\u6307\u5b9a\u7684\u65e5\u671f(\u201c2009\u5e7411\u6708\u89e3\u51b3\u201d)\u6216\u8005\u4e00\u4e2a\u7279\u5b9a\u7684\u4e8b\u4ef6(\u201c\u7b49\u5230\u6240\u6709\u7684\u5ba2\u6237\u90fd\u53ef\u4ee5\u5904\u7406XML\u8bf7\u6c42\u5c31\u79fb\u9664\u8fd9\u4e9b\u4ee3\u7801\u201d)\u3002","title":"TODO\u6ce8\u91ca"},{"location":"standard/style_rules/#_20","text":"\u5305\u540d\uff1a package_name \u6a21\u5757\u540d\uff1a module_name \u7c7b\u540d\uff1a ClassName \u65b9\u6cd5\u540d\uff1a method_name \u7c7b\u540d\uff1a ExceptionName \u51fd\u6570\u540d: function_name \u5168\u5c40\u5e38\u91cf\u540d: GLOBAL_CONSTANT_NAME \u5168\u5c40\u53d8\u91cf\u540d: global_var_name \u5b9e\u4f8b\u540d: instance_var_name \u51fd\u6570\u53c2\u6570\u540d: function_parameter_name \u5c40\u90e8\u53d8\u91cf\u540d: local_var_name \u51fd\u6570\u540d \u3001 \u53d8\u91cf\u540d**\u548c**\u6587\u4ef6\u540d**\u5e94\u8be5\u662f\u63cf\u8ff0\u6027\u7684\uff0c\u5c3d\u91cf**\u907f\u514d\u7f29\u5199 \uff0c\u7279\u522b\u8981\u907f\u514d\u4f7f\u7528\u975e\u9879\u76ee\u4eba\u5458\u4e0d\u6e05\u695a\u96be\u4ee5\u7406\u89e3\u7684\u7f29\u5199\uff0c\u4e0d\u8981\u901a\u8fc7\u5220\u9664\u5355\u8bcd\u4e2d\u7684\u5b57\u6bcd\u6765\u8fdb\u884c\u7f29\u5199\u3002 \u547d\u540d\u7ea6\u5b9a \u4f7f\u7528\u5355\u4e0b\u5212\u7ebf _ \u5f00\u5934\u8868\u793a\u6a21\u5757\u53d8\u91cf\u6216\u8005\u51fd\u6570\u662f protected \u7684\uff0c\u5373\u53ea\u5e94\u8be5\u6a21\u5757\u5185\u6216\u8005\u51fd\u6570\u5185\u4f7f\u7528\uff08\u786c\u662f\u8bbf\u95ee\u7684\u8bdd\u4e5f\u662f\u53ef\u4ee5\u7684\uff09\uff0c\u4e0d\u5e94\u8be5\u88ab\u516c\u5f00\u8bbf\u95ee\uff0c\u800c\u4e14python\u89e3\u6790\u65f6\u4f7f\u7528 from module import * \u65f6\u8be5\u53d8\u91cf\u6216\u51fd\u6570\u4e0d\u4f1a\u88ab\u5305\u542b\u3002 \u7528\u53cc\u4e0b\u5212\u7ebf( __ )\u5f00\u5934\u7684\u5b9e\u4f8b\u53d8\u91cf\u6216\u65b9\u6cd5\u8868\u793a\u7c7b\u5185\u79c1\u6709\u3002\u5373\u53ea\u5e94\u8be5\u6a21\u5757\u5185\u6216\u8005\u51fd\u6570\u5185\u4f7f\u7528\uff0c\u4e0d\u5e94\u8be5\u88ab\u516c\u5f00\u8bbf\u95ee\u3002\u4f7f\u7528 module.var \u4e0e class.var \u4f1a\u62a5\u9519\uff08 \u8be5\u5c5e\u6027\u4e0d\u5b58\u5728 \uff09\uff0c\u4e0d\u80fd\u8bbf\u95ee\uff08\u53ef\u4ee5\u4f7f\u7528_class__var\u8bbf\u95ee\uff0c \u5177\u4f53\u53ef\u4ee5\u67e5\u770b\u76f8\u5173\u6587\u6863\uff09\u3002 \u5c06\u76f8\u5173\u7684\u7c7b\u548c\u9876\u7ea7\u51fd\u6570\u653e\u5728\u540c\u4e00\u4e2a\u6a21\u5757\u91cc\u3002\u4e0d\u50cfJava\uff0c\u6ca1\u5fc5\u8981\u9650\u5236\u4e00\u4e2a\u7c7b\u4e00\u4e2a\u6a21\u5757\u3002 \u5bf9\u7c7b\u540d\u4f7f\u7528\u5927\u5199\u5b57\u6bcd\u5f00\u5934\u7684\u5355\u8bcd(\u5982CapWords\uff0c\u5373Pascal\u98ce\u683c)\uff0c\u4f46\u662f\u6a21\u5757\u540d\u5e94\u8be5\u7528\u5c0f\u5199\u52a0\u4e0b\u5212\u7ebf\u7684\u65b9\u5f0f(\u5982lower_with_under.py)\u3002\u56e0\u4e3a\u5982\u679c\u6a21\u5757\u540d\u78b0\u5de7\u548c\u7c7b\u540d\u4e00\u81f4, \u8fd9\u4f1a\u8ba9\u4eba\u56f0\u6270\u3002","title":"\u547d\u540d"},{"location":"standard/style_rules/#_21","text":"\u4e3a\u4e86\u8ba9\u5f00\u53d1\u98ce\u683c\u8fbe\u5230\u7edf\u4e00\uff0c\u4f7f\u7528\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177\u68c0\u6d4b\u3002 \u4f7f\u7528 isort \u5c06\u5bfc\u5305\u90e8\u5206\u683c\u5f0f\u5316\u4e3a\u7edf\u4e00\u683c\u5f0f\uff0c\u4f7f\u7528 pylint \u68c0\u6d4b\u4ee3\u7801\u662f\u5426\u7b26\u5408 PEP-8 \u89c4\u8303\uff0c\u540c\u65f6\u8fd8\u80fd\u68c0\u6d4b \u4e00\u4e9b\u4e0d\u6807\u51c6\u7684\u7684\u8bed\u6cd5\uff0c\u5e76\u7ed9\u51fa\u4fee\u6539\u5efa\u8bae\u3002 \u6267\u884c isort . --check-only --diff \u68c0\u6d4b\u4ee3\u7801\u98ce\u683c\uff0c\u5e76\u4ec5\u8f93\u51fa\u4e0d\u7b26\u5408\u89c4\u8303\u7684\u5bfc\u5305\uff0c\u6267\u884c isort \u4f1a\u81ea\u52a8\u683c\u5f0f\u5316\u4ee3\u7801\u3002 \u8fd0\u884c pylint src tests \u68c0\u67e5 src \u76ee\u5f55\u548c tests \u76ee\u5f55\u4e0b\u7684 Python \u4ee3\u7801\u3002\u4f1a\u8f93\u51fa\u4e0d\u7b26\u5408\u89c4\u8303\u7684\u5185\u5bb9\uff0c\u7136\u540e \u6839\u636e\u5efa\u8bae\u4fee\u6539\u5373\u53ef\u3002 Pycharm\u7b49IDE\u90fd\u5b58\u5728\u4e00\u952e\u81ea\u52a8\u683c\u5f0f\u5316\u4ee3\u7801\u7684\u529f\u80fd\u3002\u4f8b\u5982\u5728Pycharm\u4e2d\u4f7f\u7528 Ctrl+Alt+L \u5feb\u6377\u952e\u6216\u8005 \u4f7f\u7528\u9f20\u6807\u9009\u5b9a\u4e0d\u89c4\u8303\uff08~\u63d0\u793a\uff09\u7684\u5730\u65b9\uff0c\u4f7f\u7528 Alt+Shift+Enter \u5feb\u6377\u952e\u4e00\u952e\u683c\u5f0f\u5316\u3002","title":"\u4ee3\u7801\u98ce\u683c\u68c0\u6d4b"}]}